<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:UMLLabProfile="http:///schemas/UMLLabProfile/NS/0" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML" xsi:schemaLocation="http:///schemas/UMLLabProfile/NS/0 pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile">
  <uml:Model xmi:id="_4CCjkBwOEe-urICxG0GjCg" name="IDSv4">
    <eAnnotations xmi:id="_4E6RYBwOEe-urICxG0GjCg" source="http://ns.yatta.de/umllab">
      <contents xmi:type="ecore:EAnnotation" xmi:id="_4E6RYRwOEe-urICxG0GjCg" source="codegen">
        <details xmi:id="_4E6RYhwOEe-urICxG0GjCg" key="codegenDirectory" value="/IDSv4/src"/>
        <details xmi:id="_4sensBwOEe-urICxG0GjCg" key="AssociatedSourceCode" value="/IDSv4/src/it/unibs/fp/mylib/Estrattore.java;638984309/1;/IDSv4/src/it/unibs/fp/mylib/InputDati.java;2071489935/1;/IDSv4/src/it/unibs/fp/mylib/MyMenu.java;1580912307/1;/IDSv4/src/it/unibs/ids/progetto/Albero.java;3620077655/1;/IDSv4/src/it/unibs/ids/progetto/Application.java;405571653/1;/IDSv4/src/it/unibs/ids/progetto/Comprensorio.java;3585478197/1;/IDSv4/src/it/unibs/ids/progetto/Configuratore.java;3875704838/1;/IDSv4/src/it/unibs/ids/progetto/Credenziali.java;2873885030/1;/IDSv4/src/it/unibs/ids/progetto/DefaultInitializer.java;1790673723/1;/IDSv4/src/it/unibs/ids/progetto/FileManager.java;4174687390/1;/IDSv4/src/it/unibs/ids/progetto/Fruitore.java;2873711993/1;/IDSv4/src/it/unibs/ids/progetto/Geografia.java;356530027/1;/IDSv4/src/it/unibs/ids/progetto/Gerarchia.java;3039619609/1;/IDSv4/src/it/unibs/ids/progetto/Main.java;2346269001/1;/IDSv4/src/it/unibs/ids/progetto/Nodo.java;833800613/1;/IDSv4/src/it/unibs/ids/progetto/PrestazioneOpera.java;3529936174/1;/IDSv4/src/it/unibs/ids/progetto/Utente.java;2557043437/1;/IDSv4/src/it/unibs/ids/progetto/Utenza.java;3161667057/1;"/>
      </contents>
      <contents xmi:type="ecore:EAnnotation" xmi:id="_ewo3gC13Ee-8Nr2H9gftQA" source="preferences">
        <contents xmi:type="ecore:EAnnotation" xmi:id="_ewo3gS13Ee-8Nr2H9gftQA" source="com.yattasolutions.codegen.reverse">
          <details xmi:id="_ewo3gi13Ee-8Nr2H9gftQA" key="com.yattasolutions.codegen.reverse.roundtrip.ReverseEngineerNewFiles" value="true"/>
          <details xmi:id="_ewo3gy13Ee-8Nr2H9gftQA" key="com.yattasolutions.codegen.reverse.roundtrip.RemoveDeletedFiles" value="true"/>
          <details xmi:id="_ewo3hC13Ee-8Nr2H9gftQA" key="com.yattasolutions.codegen.reverse.roundtrip.ReverseEngineerChangedFiles" value="true"/>
        </contents>
      </contents>
    </eAnnotations>
    <elementImport xmi:id="_4Po6sBwOEe-urICxG0GjCg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
    </elementImport>
    <elementImport xmi:id="_4Po6sRwOEe-urICxG0GjCg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#byte"/>
    </elementImport>
    <elementImport xmi:id="_4Po6shwOEe-urICxG0GjCg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
    </elementImport>
    <elementImport xmi:id="_4Po6sxwOEe-urICxG0GjCg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
    </elementImport>
    <elementImport xmi:id="_4Po6tBwOEe-urICxG0GjCg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
    </elementImport>
    <elementImport xmi:id="_4Po6tRwOEe-urICxG0GjCg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
    </elementImport>
    <elementImport xmi:id="_4Po6thwOEe-urICxG0GjCg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
    </elementImport>
    <elementImport xmi:id="_4Po6txwOEe-urICxG0GjCg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#short"/>
    </elementImport>
    <elementImport xmi:id="_4Po6uBwOEe-urICxG0GjCg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </elementImport>
    <packagedElement xmi:type="uml:Package" xmi:id="_4O6h8BwOEe-urICxG0GjCg" name="it">
      <packagedElement xmi:type="uml:Package" xmi:id="_4O6h8RwOEe-urICxG0GjCg" name="unibs">
        <packagedElement xmi:type="uml:Package" xmi:id="_4O6h8hwOEe-urICxG0GjCg" name="fp">
          <packagedElement xmi:type="uml:Package" xmi:id="_4O7JABwOEe-urICxG0GjCg" name="mylib">
            <packagedElement xmi:type="uml:Class" xmi:id="_4PoToBwOEe-urICxG0GjCg" name="Estrattore">
              <ownedComment xmi:id="_epHTMC13Ee-8Nr2H9gftQA">
                <body>Classe per generare Numeri Casuali

Autore: Daniele Martinelli e Federico Sabbadini</body>
              </ownedComment>
              <ownedAttribute xmi:id="_4TbOgBwOEe-urICxG0GjCg" name="estrattore" isStatic="true" type="_4TJhsBwOEe-urICxG0GjCg" association="_4T_2QBwOEe-urICxG0GjCg">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_4TbOghwOEe-urICxG0GjCg" value="new Random()"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4TuJcBwOEe-urICxG0GjCg" name="estraiIntero" specification="_4Po6uRwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4TuJcRwOEe-urICxG0GjCg" name="min">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_4TuJchwOEe-urICxG0GjCg" name="max">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_4TuJcxwOEe-urICxG0GjCg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>int range = max + 1 - min;
		 int casual = estrattore.nextInt(range);
		 return casual + min;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4TuwgBwOEe-urICxG0GjCg" name="estraiDouble" specification="_4PphwxwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4TuwgRwOEe-urICxG0GjCg" name="min">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <ownedParameter xmi:id="_4TuwghwOEe-urICxG0GjCg" name="max">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <ownedParameter xmi:id="_4TuwgxwOEe-urICxG0GjCg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <language>java</language>
                <body>double range = max - min;
	 double casual = estrattore.nextDouble();
	 
	 double posEstratto = range*casual;
	 
	 return posEstratto + min;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4TuwhBwOEe-urICxG0GjCg" name="estraiString" specification="_4PphxxwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4TuwhRwOEe-urICxG0GjCg" name="lista">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_4TuwhhwOEe-urICxG0GjCg" name="lenght">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_4TuwhxwOEe-urICxG0GjCg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>StringBuilder identificator = new StringBuilder();
		Random rand = new Random();
		
		for (int i = 0; i &lt; lenght; i++) {
			identificator.append(lista.charAt(rand.nextInt(lista.length())));
		}
		
		return identificator.toString();
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_4Po6uRwOEe-urICxG0GjCg" name="estraiIntero" isStatic="true" method="_4TuJcBwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4PphwBwOEe-urICxG0GjCg" name="min">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_4PphwRwOEe-urICxG0GjCg" name="max">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_4PphwhwOEe-urICxG0GjCg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_4PphwxwOEe-urICxG0GjCg" name="estraiDouble" isStatic="true" method="_4TuwgBwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4PphxBwOEe-urICxG0GjCg" name="min">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <ownedParameter xmi:id="_4PphxRwOEe-urICxG0GjCg" name="max">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <ownedParameter xmi:id="_4PphxhwOEe-urICxG0GjCg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_4PphxxwOEe-urICxG0GjCg" name="estraiString" isStatic="true" method="_4TuwhBwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4PphyBwOEe-urICxG0GjCg" name="lista">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_4PphyRwOEe-urICxG0GjCg" name="lenght">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_4PphyhwOEe-urICxG0GjCg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_4PqI0BwOEe-urICxG0GjCg" name="InputDati">
              <ownedComment xmi:id="_epHTMS13Ee-8Nr2H9gftQA">
                <body>classe per ricevere dati in input

Autore: Daniele Martinelli e Federico Sabbadini</body>
              </ownedComment>
              <ownedAttribute xmi:id="_4Tb1kBwOEe-urICxG0GjCg" name="lettore" isStatic="true" type="_4TKIwBwOEe-urICxG0GjCg" association="_4UAdURwOEe-urICxG0GjCg">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_4Tb1khwOEe-urICxG0GjCg" value="creaScanner()"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_4Tb1kxwOEe-urICxG0GjCg" name="DATE_STRING" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_4Tb1lBwOEe-urICxG0GjCg" value="&quot;Inserisci la data [gg/mm/yyyy]: &quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_4Tb1lRwOEe-urICxG0GjCg" name="ORARIO_STRING" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_4Tb1lhwOEe-urICxG0GjCg" value="&quot;Inserisci l'orario [hh:mm:ss] -> &quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_4Tb1lxwOEe-urICxG0GjCg" name="ORARIO_STRING_NOHOUR" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_4Tb1mBwOEe-urICxG0GjCg" value="&quot;Inserisci l'orario [mm:ss] -> &quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_4Tb1mRwOEe-urICxG0GjCg" name="ERRORE_FORMATO" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_4Tb1mxwOEe-urICxG0GjCg" value="&quot;Attenzione: il dato inserito non e' nel formato corretto&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_4Tb1nBwOEe-urICxG0GjCg" name="ERRORE_MINIMO" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_4TccoRwOEe-urICxG0GjCg" value="&quot;Attenzione: e' richiesto un valore maggiore o uguale a &quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_4TccohwOEe-urICxG0GjCg" name="ERRORE_STRINGA_VUOTA" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_4TccoxwOEe-urICxG0GjCg" value="&quot;Attenzione: non hai inserito alcun carattere&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_4TccpRwOEe-urICxG0GjCg" name="ERRORE_MASSIMO" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_4TccphwOEe-urICxG0GjCg" value="&quot;Attenzione: e' richiesto un valore minore o uguale a &quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_4TccqBwOEe-urICxG0GjCg" name="MESSAGGIO_AMMISSIBILI" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_4TdDsBwOEe-urICxG0GjCg" value="&quot;Attenzione: i caratteri ammissibili sono: &quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_4TdDshwOEe-urICxG0GjCg" name="RISPOSTA_SI" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_4TdDsxwOEe-urICxG0GjCg" value="'S'"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_4TdDtRwOEe-urICxG0GjCg" name="RISPOSTA_NO" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_4TdDthwOEe-urICxG0GjCg" value="'N'"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4TuwiBwOEe-urICxG0GjCg" name="creaScanner" specification="_4Pqv4BwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4TuwiRwOEe-urICxG0GjCg" type="_4TKIwBwOEe-urICxG0GjCg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>Scanner creato = new Scanner(System.in);
	   creato.useDelimiter(System.getProperty(&quot;line.separator&quot;));
	   return creato;
	  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4TuwihwOEe-urICxG0GjCg" name="leggiStringa" specification="_4Pqv4RwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4TuwixwOEe-urICxG0GjCg" name="messaggio">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_4TuwjBwOEe-urICxG0GjCg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.print(messaggio);
		  return lettore.next();
	  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4TuwjRwOEe-urICxG0GjCg" name="leggiStringaNonVuota" specification="_4Pqv5BwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4TuwjhwOEe-urICxG0GjCg" name="messaggio">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_4TuwjxwOEe-urICxG0GjCg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>boolean finito=false;
	   String lettura = null;
	   do
	   {
		 lettura = leggiStringa(messaggio);
		 lettura = lettura.trim();
		 if (lettura.length() > 0)
		  finito=true;
		 else
		  System.out.println(ERRORE_STRINGA_VUOTA);
	   } while (!finito);
	   
	   return lettura;
	  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4TuwkBwOEe-urICxG0GjCg" name="leggiChar" specification="_4PrW8BwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4TuwkRwOEe-urICxG0GjCg" name="messaggio">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_4TuwkhwOEe-urICxG0GjCg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
                </ownedParameter>
                <language>java</language>
                <body>boolean finito = false;
	   char valoreLetto = '\0';
	   do
	    {
	     System.out.print(messaggio);
	     String lettura = lettore.next();
	     if (lettura.length() > 0)
	      {
	       valoreLetto = lettura.charAt(0);
	       finito = true;
	      }
	     else
	      {
	       System.out.println(ERRORE_STRINGA_VUOTA);
	      }
	    } while (!finito);
	   return valoreLetto;
	  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4TuwkxwOEe-urICxG0GjCg" name="leggiUpperChar" specification="_4PrW8xwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4TuwlBwOEe-urICxG0GjCg" name="messaggio">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_4TuwlRwOEe-urICxG0GjCg" name="ammissibili">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_4TuwlhwOEe-urICxG0GjCg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
                </ownedParameter>
                <language>java</language>
                <body>boolean finito = false;
	   char valoreLetto = '\0';
	   do
	   {
	    valoreLetto = leggiChar(messaggio);
	    valoreLetto = Character.toUpperCase(valoreLetto);
	    if (ammissibili.indexOf(valoreLetto) != -1)
		 finito  = true;
	    else
	     System.out.println(MESSAGGIO_AMMISSIBILI + ammissibili);
	   } while (!finito);
	   return valoreLetto;
	  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4TuwlxwOEe-urICxG0GjCg" name="leggiIntero" specification="_4PrW9xwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4TuwmBwOEe-urICxG0GjCg" name="messaggio">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_4TuwmRwOEe-urICxG0GjCg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>boolean finito = false;
	   int valoreLetto = 0;
	   do
	    {
	     System.out.print(messaggio);
	     try
	      {
	       valoreLetto = lettore.nextInt();
	       finito = true;
	      }
	     catch (InputMismatchException e)
	      {
	       System.out.println(ERRORE_FORMATO);
        lettore.nextLine();
	      }
	    } while (!finito);
	   return valoreLetto;
	  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4TuwmhwOEe-urICxG0GjCg" name="leggiInteroPositivo" specification="_4Pr-ABwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4TuwmxwOEe-urICxG0GjCg" name="messaggio">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_4TuwnBwOEe-urICxG0GjCg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return leggiInteroConMinimo(messaggio,1);
	  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4TuwnRwOEe-urICxG0GjCg" name="leggiInteroNonNegativo" specification="_4Pr-AxwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4TuwnhwOEe-urICxG0GjCg" name="messaggio">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_4TuwnxwOEe-urICxG0GjCg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return leggiInteroConMinimo(messaggio,0);
	  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4TuwoBwOEe-urICxG0GjCg" name="leggiInteroConMinimo" specification="_4Pr-BhwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4TuwoRwOEe-urICxG0GjCg" name="messaggio">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_4TuwohwOEe-urICxG0GjCg" name="minimo">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_4TuwoxwOEe-urICxG0GjCg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>boolean finito = false;
	   int valoreLetto = 0;
	   do
	    {
	     valoreLetto = leggiIntero(messaggio);
	     if (valoreLetto >= minimo)
	      finito = true;
	     else
	      System.out.println(ERRORE_MINIMO + minimo);
	    } while (!finito);
	     
	   return valoreLetto;
	  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4TvXkBwOEe-urICxG0GjCg" name="leggiInteroRange" specification="_4Pr-ChwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4TvXkRwOEe-urICxG0GjCg" name="messaggio">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_4TvXkhwOEe-urICxG0GjCg" name="minimo">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_4TvXkxwOEe-urICxG0GjCg" name="massimo">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_4TvXlBwOEe-urICxG0GjCg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>boolean finito = false;
	   int valoreLetto = 0;
	   do
	    {
	     valoreLetto = leggiIntero(messaggio);
	     if (valoreLetto >= minimo &amp;&amp; valoreLetto&lt;= massimo)
	      finito = true;
	     else
	      if (valoreLetto &lt; minimo)
	         System.out.println(ERRORE_MINIMO + minimo);
	      else
	    	 System.out.println(ERRORE_MASSIMO + massimo); 
	    } while (!finito);
	     
	   return valoreLetto;
	  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4TvXlRwOEe-urICxG0GjCg" name="leggiDouble" specification="_4PslERwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4TvXlhwOEe-urICxG0GjCg" name="messaggio">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_4TvXlxwOEe-urICxG0GjCg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <language>java</language>
                <body>boolean finito = false;
	   double valoreLetto = 0;
	   do
	    {
	     System.out.print(messaggio);
	     try
	      {
	       valoreLetto = lettore.nextDouble();
	       finito = true;
	      }
	     catch (InputMismatchException e)
	      {
	       System.out.println(ERRORE_FORMATO);
	       lettore.nextLine();
	      }
	    } while (!finito);
	   return valoreLetto;
	  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4TvXmBwOEe-urICxG0GjCg" name="leggiDoubleConMinimo" specification="_4PslFBwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4TvXmRwOEe-urICxG0GjCg" name="messaggio">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_4TvXmhwOEe-urICxG0GjCg" name="minimo">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <ownedParameter xmi:id="_4TvXmxwOEe-urICxG0GjCg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <language>java</language>
                <body>boolean finito = false;
	   double valoreLetto = 0;
	   do
	    {
	     valoreLetto = leggiDouble(messaggio);
	     if (valoreLetto >= minimo)
	      finito = true;
	     else
	      System.out.println(ERRORE_MINIMO + minimo);
	    } while (!finito);
	     
	   return valoreLetto;
	  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4TvXnBwOEe-urICxG0GjCg" name="yesOrNo" specification="_4PslGBwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4TvXnRwOEe-urICxG0GjCg" name="messaggio">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_4TvXnhwOEe-urICxG0GjCg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>String mioMessaggio = messaggio + &quot;(&quot;+RISPOSTA_SI+&quot;/&quot;+RISPOSTA_NO+&quot;) &quot;;
		  char valoreLetto = leggiUpperChar(mioMessaggio,String.valueOf(RISPOSTA_SI)+String.valueOf(RISPOSTA_NO));
		  
		  if (valoreLetto == RISPOSTA_SI)
			return true;
		  else
			return false;
	  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4TvXnxwOEe-urICxG0GjCg" name="leggiSesso" specification="_4PslGxwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4TvXoBwOEe-urICxG0GjCg" name="msg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_4TvXoRwOEe-urICxG0GjCg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
                </ownedParameter>
                <language>java</language>
                <body>char sesso;
			do {
				sesso = InputDati.leggiChar(msg);
			} while ((sesso != 'M' &amp;&amp; sesso != 'F') &amp;&amp; (sesso != 'm' &amp;&amp; sesso != 'f'));
			
			return sesso;
		</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4TvXohwOEe-urICxG0GjCg" name="leggiData" specification="_4PtMIBwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4TvXoxwOEe-urICxG0GjCg" type="_4SrnoRwOEe-urICxG0GjCg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>Date d = null;
		  String stringa = leggiStringa(DATE_STRING);
		  
		  try {
			  DateFormat formatoData = DateFormat.getDateInstance(DateFormat.SHORT, Locale.ITALY);
			  formatoData.setLenient(false);
			  d = formatoData.parse(stringa);
			  
		  } catch (ParseException e) {
			  System.out.println(ERRORE_FORMATO);
		  }
		  
		  return d;
	  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4TvXpBwOEe-urICxG0GjCg" name="leggiOrarioCompleto" specification="_4PtMIRwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4TvXpRwOEe-urICxG0GjCg" type="_4SrnoRwOEe-urICxG0GjCg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>Date d = null;
		  String stringa = leggiStringa(ORARIO_STRING);
		  
		  try {
			  SimpleDateFormat formatoData = new SimpleDateFormat(&quot;hh:mm:ss&quot;);
			  d = formatoData.parse(stringa);
			  
		  } catch (ParseException e) {
			  System.out.println(ERRORE_FORMATO);
		  }
		  
		  return d;
	  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4TvXphwOEe-urICxG0GjCg" name="leggiOrarioCompletoNoHour" specification="_4PtMIhwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4TvXpxwOEe-urICxG0GjCg" type="_4SrnoRwOEe-urICxG0GjCg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>Date d = null;
		  String stringa = leggiStringa(ORARIO_STRING_NOHOUR);
		  
		  try {
			  SimpleDateFormat formatoData = new SimpleDateFormat(&quot;mm:ss&quot;);
			  d = formatoData.parse(stringa);
			  
		  } catch (ParseException e) {
			  System.out.println(ERRORE_FORMATO);
		  }
		  
		  return d;
	  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_4Pqv4BwOEe-urICxG0GjCg" name="creaScanner" visibility="private" isStatic="true" method="_4TuwiBwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4TKIwhwOEe-urICxG0GjCg" type="_4TKIwBwOEe-urICxG0GjCg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_4Pqv4RwOEe-urICxG0GjCg" name="leggiStringa" isStatic="true" method="_4TuwihwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4Pqv4hwOEe-urICxG0GjCg" name="messaggio">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_4Pqv4xwOEe-urICxG0GjCg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_4Pqv5BwOEe-urICxG0GjCg" name="leggiStringaNonVuota" isStatic="true" method="_4TuwjRwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4Pqv5RwOEe-urICxG0GjCg" name="messaggio">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_4Pqv5hwOEe-urICxG0GjCg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_4PrW8BwOEe-urICxG0GjCg" name="leggiChar" isStatic="true" method="_4TuwkBwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4PrW8RwOEe-urICxG0GjCg" name="messaggio">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_4PrW8hwOEe-urICxG0GjCg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_4PrW8xwOEe-urICxG0GjCg" name="leggiUpperChar" isStatic="true" method="_4TuwkxwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4PrW9BwOEe-urICxG0GjCg" name="messaggio">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_4PrW9RwOEe-urICxG0GjCg" name="ammissibili">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_4PrW9hwOEe-urICxG0GjCg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_4PrW9xwOEe-urICxG0GjCg" name="leggiIntero" isStatic="true" method="_4TuwlxwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4PrW-BwOEe-urICxG0GjCg" name="messaggio">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_4PrW-RwOEe-urICxG0GjCg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_4Pr-ABwOEe-urICxG0GjCg" name="leggiInteroPositivo" isStatic="true" method="_4TuwmhwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4Pr-ARwOEe-urICxG0GjCg" name="messaggio">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_4Pr-AhwOEe-urICxG0GjCg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_4Pr-AxwOEe-urICxG0GjCg" name="leggiInteroNonNegativo" isStatic="true" method="_4TuwnRwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4Pr-BBwOEe-urICxG0GjCg" name="messaggio">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_4Pr-BRwOEe-urICxG0GjCg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_4Pr-BhwOEe-urICxG0GjCg" name="leggiInteroConMinimo" isStatic="true" method="_4TuwoBwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4Pr-BxwOEe-urICxG0GjCg" name="messaggio">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_4Pr-CBwOEe-urICxG0GjCg" name="minimo">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_4Pr-CRwOEe-urICxG0GjCg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_4Pr-ChwOEe-urICxG0GjCg" name="leggiInteroRange" isStatic="true" method="_4TvXkBwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4Pr-CxwOEe-urICxG0GjCg" name="messaggio">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_4Pr-DBwOEe-urICxG0GjCg" name="minimo">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_4Pr-DRwOEe-urICxG0GjCg" name="massimo">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_4PslEBwOEe-urICxG0GjCg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_4PslERwOEe-urICxG0GjCg" name="leggiDouble" isStatic="true" method="_4TvXlRwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4PslEhwOEe-urICxG0GjCg" name="messaggio">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_4PslExwOEe-urICxG0GjCg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_4PslFBwOEe-urICxG0GjCg" name="leggiDoubleConMinimo" isStatic="true" method="_4TvXmBwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4PslFRwOEe-urICxG0GjCg" name="messaggio">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_4PslFhwOEe-urICxG0GjCg" name="minimo">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <ownedParameter xmi:id="_4PslFxwOEe-urICxG0GjCg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_4PslGBwOEe-urICxG0GjCg" name="yesOrNo" isStatic="true" method="_4TvXnBwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4PslGRwOEe-urICxG0GjCg" name="messaggio">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_4PslGhwOEe-urICxG0GjCg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_4PslGxwOEe-urICxG0GjCg" name="leggiSesso" isStatic="true" method="_4TvXnxwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4PslHBwOEe-urICxG0GjCg" name="msg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_4PslHRwOEe-urICxG0GjCg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_4PtMIBwOEe-urICxG0GjCg" name="leggiData" isStatic="true" method="_4TvXohwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4TKIwxwOEe-urICxG0GjCg" type="_4SrnoRwOEe-urICxG0GjCg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_4PtMIRwOEe-urICxG0GjCg" name="leggiOrarioCompleto" isStatic="true" method="_4TvXpBwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4TKIxBwOEe-urICxG0GjCg" type="_4SrnoRwOEe-urICxG0GjCg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_4PtMIhwOEe-urICxG0GjCg" name="leggiOrarioCompletoNoHour" isStatic="true" method="_4TvXphwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4TKIxRwOEe-urICxG0GjCg" type="_4SrnoRwOEe-urICxG0GjCg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_4PuaQBwOEe-urICxG0GjCg" name="MyMenu">
              <ownedComment xmi:id="_epHTMi13Ee-8Nr2H9gftQA">
                <body>Questa classe rappresenta un menu testuale generico a più voci.
Si suppone che la voce per uscire sia sempre associata alla scelta 0 
e sia presentata in fondo al menu.

Autore: Daniele Martinelli e Federico Sabbadini</body>
              </ownedComment>
              <ownedAttribute xmi:id="_4TdqwBwOEe-urICxG0GjCg" name="CORNICE" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_4TdqwRwOEe-urICxG0GjCg" value="&quot;-------------------------------------------------------------------&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_4TdqwxwOEe-urICxG0GjCg" name="VOCE_USCITA" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_4TdqxBwOEe-urICxG0GjCg" value="&quot;0\tEsci&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_4TdqxhwOEe-urICxG0GjCg" name="RICHIESTA_INSERIMENTO" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_4TdqyBwOEe-urICxG0GjCg" value="&quot;Digita il numero dell'opzione desiderata > &quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_4TeR0BwOEe-urICxG0GjCg" name="titolo" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_4TeR0hwOEe-urICxG0GjCg" name="voci" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_4TeR0xwOEe-urICxG0GjCg" value="*"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4TvXqBwOEe-urICxG0GjCg" name="MyMenu" specification="_4PuaQRwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4TvXqRwOEe-urICxG0GjCg" name="titolo">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_4TvXqhwOEe-urICxG0GjCg" name="voci">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_4TvXqxwOEe-urICxG0GjCg" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_4TvXrBwOEe-urICxG0GjCg" type="_4PuaQBwOEe-urICxG0GjCg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>this.titolo = titolo;
     this.voci = voci;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4TvXrRwOEe-urICxG0GjCg" name="scegli" specification="_4PvBURwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4TvXrhwOEe-urICxG0GjCg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>stampaMenu();
     return InputDati.leggiInteroRange(RICHIESTA_INSERIMENTO, 0, voci.length);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4TvXrxwOEe-urICxG0GjCg" name="stampaMenu" specification="_4PvBUxwOEe-urICxG0GjCg">
                <language>java</language>
                <body>System.out.println(CORNICE);
     System.out.println(titolo);
     System.out.println(CORNICE);
     for (int i = 0; i &lt; voci.length; i++) {
         System.out.println((i + 1) + &quot;\t&quot; + voci[i]);
     }
     System.out.println();
     System.out.println(VOCE_USCITA);
     System.out.println();
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_4PuaQRwOEe-urICxG0GjCg" name="MyMenu" method="_4TvXqBwOEe-urICxG0GjCg">
                <eAnnotations xmi:id="_4PuaRBwOEe-urICxG0GjCg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_4PuaRRwOEe-urICxG0GjCg" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_epHTMy13Ee-8Nr2H9gftQA">
                  <body>Costruttore della classe MyMenu.
     * 
     * @param titolo Il titolo del menu
     * @param voci L'array di stringhe contenente le voci del menu</body>
                </ownedComment>
                <ownedParameter xmi:id="_4PuaQhwOEe-urICxG0GjCg" name="titolo">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_4PuaQxwOEe-urICxG0GjCg" name="voci">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_4PvBUBwOEe-urICxG0GjCg" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_4PuaRhwOEe-urICxG0GjCg" type="_4PuaQBwOEe-urICxG0GjCg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_4PvBURwOEe-urICxG0GjCg" name="scegli" method="_4TvXrRwOEe-urICxG0GjCg">
                <ownedComment xmi:id="_epHTNC13Ee-8Nr2H9gftQA">
                  <body>Metodo per permettere all'utente di scegliere un'opzione dal menu.
     * 
     * @return Il numero dell'opzione scelta dall'utente</body>
                </ownedComment>
                <ownedParameter xmi:id="_4PvBUhwOEe-urICxG0GjCg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_4PvBUxwOEe-urICxG0GjCg" name="stampaMenu" method="_4TvXrxwOEe-urICxG0GjCg">
                <ownedComment xmi:id="_epHTNS13Ee-8Nr2H9gftQA">
                  <body>Metodo per stampare il menu a schermo.</body>
                </ownedComment>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_4T_2QBwOEe-urICxG0GjCg" name="" memberEnd="_4T_2QRwOEe-urICxG0GjCg _4TbOgBwOEe-urICxG0GjCg">
              <ownedEnd xmi:id="_4T_2QRwOEe-urICxG0GjCg" name="" type="_4PoToBwOEe-urICxG0GjCg" association="_4T_2QBwOEe-urICxG0GjCg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_4UAdURwOEe-urICxG0GjCg" name="" memberEnd="_4UAdUhwOEe-urICxG0GjCg _4Tb1kBwOEe-urICxG0GjCg">
              <ownedEnd xmi:id="_4UAdUhwOEe-urICxG0GjCg" name="" type="_4PqI0BwOEe-urICxG0GjCg" association="_4UAdURwOEe-urICxG0GjCg"/>
            </packagedElement>
          </packagedElement>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_4O-zYBwOEe-urICxG0GjCg" name="ids">
          <packagedElement xmi:type="uml:Package" xmi:id="_4O_acBwOEe-urICxG0GjCg" name="progetto">
            <packagedElement xmi:type="uml:Package" xmi:id="_4O_acRwOEe-urICxG0GjCg" name="news">
              <packagedElement xmi:type="uml:Class" xmi:id="_4QM7YBwOEe-urICxG0GjCg" name="Commercio">
                <ownedAttribute xmi:id="_4TqfEhwOEe-urICxG0GjCg" name="numeroProposte" visibility="private">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_4TqfFBwOEe-urICxG0GjCg" name="insiemiAperti" type="_4QRz4BwOEe-urICxG0GjCg" isOrdered="true" isReadOnly="true" association="_4UFV0RwOEe-urICxG0GjCg">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_4TqfFRwOEe-urICxG0GjCg" value="*"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_4TrGIBwOEe-urICxG0GjCg" name="utenteDiSessione" visibility="private" type="_4P7OkBwOEe-urICxG0GjCg" association="_4UFV1BwOEe-urICxG0GjCg"/>
                <ownedAttribute xmi:id="_4TrGIhwOEe-urICxG0GjCg" name="insiemiChiusi" type="_4QTCABwOEe-urICxG0GjCg" isOrdered="true" isReadOnly="true" association="_4UFV1xwOEe-urICxG0GjCg">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_4TrGIxwOEe-urICxG0GjCg" value="*"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_4TrGJBwOEe-urICxG0GjCg" name="insiemeRitirato" visibility="private" type="_4QTpEBwOEe-urICxG0GjCg" association="_4UF84BwOEe-urICxG0GjCg"/>
                <interfaceRealization xmi:id="_4TT5wxwOEe-urICxG0GjCg" client="_4QM7YBwOEe-urICxG0GjCg" supplier="_4Ss1wBwOEe-urICxG0GjCg" contract="_4Ss1wBwOEe-urICxG0GjCg"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4T03PBwOEe-urICxG0GjCg" name="Commercio" specification="_4QNicBwOEe-urICxG0GjCg">
                  <ownedParameter xmi:id="_4T03PRwOEe-urICxG0GjCg" type="_4QM7YBwOEe-urICxG0GjCg" direction="return"/>
                  <language>java</language>
                  <body>super();
		this.numeroProposte = 0;
		this.insiemiAperti = new ArrayList&lt;>();
		this.insiemiChiusi = new ArrayList&lt;>();
		this.insiemeRitirato = new InsiemeRitirato();
	</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4T03PhwOEe-urICxG0GjCg" name="setUtenteDiSessione" specification="_4S-ikBwOEe-urICxG0GjCg">
                  <ownedParameter xmi:id="_4T03PxwOEe-urICxG0GjCg" name="utenteDiSessione" type="_4P7OkBwOEe-urICxG0GjCg"/>
                  <language>java</language>
                  <body>this.utenteDiSessione = utenteDiSessione;
	</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4T03QBwOEe-urICxG0GjCg" name="getInsiemeApertoDiSessione" specification="_4QNidBwOEe-urICxG0GjCg">
                  <ownedParameter xmi:id="_4T03QRwOEe-urICxG0GjCg" type="_4QRz4BwOEe-urICxG0GjCg" direction="return"/>
                  <language>java</language>
                  <body>return getInsiemeAperto(utenteDiSessione.getComprensorioAppartenenza());
	</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4T1eMBwOEe-urICxG0GjCg" name="numProposte" specification="_4QNidRwOEe-urICxG0GjCg">
                  <ownedParameter xmi:id="_4T1eMRwOEe-urICxG0GjCg" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>setNumProposte();
		return numeroProposte;
	</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4T1eMhwOEe-urICxG0GjCg" name="setNumProposte" specification="_4QNidxwOEe-urICxG0GjCg">
                  <language>java</language>
                  <body>this.numeroProposte++;
	</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4T1eMxwOEe-urICxG0GjCg" name="decrementaNumProposte" specification="_4QNieBwOEe-urICxG0GjCg">
                  <language>java</language>
                  <body>this.numeroProposte--;
	</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4T1eNBwOEe-urICxG0GjCg" name="getInsiemeAperto" specification="_4S-ikxwOEe-urICxG0GjCg">
                  <ownedParameter xmi:id="_4T1eNRwOEe-urICxG0GjCg" name="comprensorio" type="_4PzSwBwOEe-urICxG0GjCg"/>
                  <ownedParameter xmi:id="_4T1eNhwOEe-urICxG0GjCg" type="_4QRz4BwOEe-urICxG0GjCg" direction="return"/>
                  <language>java</language>
                  <body>for (InsiemeAperto insiemeAperto : insiemiAperti) {
			if (insiemeAperto.getComprensorio().getNome()
					.equals(comprensorio.getNome())) 
				return insiemeAperto;
		}
		InsiemeAperto insiemeAperto = new InsiemeAperto(comprensorio);
		insiemiAperti.add(insiemeAperto);
		return insiemeAperto;
		
	</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4T1eNxwOEe-urICxG0GjCg" name="addInsiemiAperti" specification="_4S-ilhwOEe-urICxG0GjCg">
                  <ownedParameter xmi:id="_4T1eOBwOEe-urICxG0GjCg" name="insiemeAperto" type="_4QRz4BwOEe-urICxG0GjCg"/>
                  <language>java</language>
                  <body>this.insiemiAperti.add(insiemeAperto);
	</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4T1eORwOEe-urICxG0GjCg" name="addInsiemiChiusi" specification="_4S-imBwOEe-urICxG0GjCg">
                  <ownedParameter xmi:id="_4T1eOhwOEe-urICxG0GjCg" name="insiemeChiuso" type="_4QTCABwOEe-urICxG0GjCg"/>
                  <language>java</language>
                  <body>this.insiemiChiusi.add(insiemeChiuso);
	</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4T1eOxwOEe-urICxG0GjCg" name="esistePropostaAperta" specification="_4S-imhwOEe-urICxG0GjCg">
                  <ownedParameter xmi:id="_4T1ePBwOEe-urICxG0GjCg" name="propostaApertaInput" type="_4QWsYBwOEe-urICxG0GjCg"/>
                  <ownedParameter xmi:id="_4T1ePRwOEe-urICxG0GjCg" type="_4QRz4BwOEe-urICxG0GjCg" direction="return"/>
                  <language>java</language>
                  <body>for (InsiemeAperto insiemeAperto : insiemiAperti) {
			if (insiemeAperto.esistePropostaAperta(propostaApertaInput)) {
				return insiemeAperto;
			}
		}
		
		return null;
	</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4T1ePhwOEe-urICxG0GjCg" name="ritira" specification="_4S_JoRwOEe-urICxG0GjCg">
                  <ownedParameter xmi:id="_4T1ePxwOEe-urICxG0GjCg" name="propostaAperta" type="_4QWsYBwOEe-urICxG0GjCg"/>
                  <language>java</language>
                  <body>InsiemeAperto insiemeAperto = this.getInsiemeAperto(utenteDiSessione.getComprensorioAppartenenza());
		InsiemeAperto insiemeApertoCopia = new InsiemeAperto(utenteDiSessione.getComprensorioAppartenenza());
		insiemeApertoCopia.addProposteAperte(insiemeAperto.getProposteAperte());
		
		for (PropostaAperta propostaAperta2: insiemeApertoCopia.getProposteAperte()) {
			if (propostaAperta2.getFruitore().getID().equals(utenteDiSessione.getID())) {
				if (propostaAperta.getID() == propostaAperta2.getID()) {
					PropostaRitirata propostaRitirata = 
							new PropostaRitirata(propostaAperta.getRichiesta(), propostaAperta.getOfferta(),
							propostaAperta.getID(), propostaAperta.getFruitore());
							insiemeAperto.eliminaPropostaAperta(propostaAperta);
							this.insiemeRitirato.addProposteRitirate(propostaRitirata);
				}
				
			}
			
			
		}
	</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4T1eQBwOEe-urICxG0GjCg" name="cercaProposta" specification="_4QOJgBwOEe-urICxG0GjCg">
                  <ownedParameter xmi:id="_4T1eQRwOEe-urICxG0GjCg" name="ID">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_4T1eQhwOEe-urICxG0GjCg" type="_4QWsYBwOEe-urICxG0GjCg" direction="return"/>
                  <language>java</language>
                  <body>for (PropostaAperta propostaAperta : getInsiemeApertoDiSessione().getProposteAperte()) {
			if (propostaAperta.getID() == ID)
				return propostaAperta;		
		}
		return null;
	</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4T1eQxwOEe-urICxG0GjCg" name="chiudi" specification="_4TUg0BwOEe-urICxG0GjCg">
                  <ownedParameter xmi:id="_4T1eRBwOEe-urICxG0GjCg" name="insiemeAperto" type="_4QRz4BwOEe-urICxG0GjCg"/>
                  <ownedParameter xmi:id="_4T1eRRwOEe-urICxG0GjCg" name="proposteAperte" type="_4S304BwOEe-urICxG0GjCg"/>
                  <language>java</language>
                  <body>InsiemeChiuso insiemeChiuso = new InsiemeChiuso();
		
		for (PropostaAperta propostaAperta : proposteAperte) {
			PropostaChiusa propostaChiusa = new PropostaChiusa(propostaAperta.getRichiesta(), propostaAperta.getOfferta(), 
					propostaAperta.getID(),propostaAperta.getFruitore());
			
			insiemeChiuso.addProposteChiuse(propostaChiusa);
			insiemeAperto.eliminaPropostaAperta(propostaAperta);
		}
		
		
		insiemiChiusi.add(insiemeChiuso);

		
		
	</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4T1eRhwOEe-urICxG0GjCg" name="metodo" specification="_4S_JpBwOEe-urICxG0GjCg">
                  <ownedParameter xmi:id="_4T1eRxwOEe-urICxG0GjCg" name="insiemeAperto" type="_4QRz4BwOEe-urICxG0GjCg"/>
                  <language>java</language>
                  <body>List&lt;PropostaAperta> listaChiudibili = algoritmo(insiemeAperto);
	     if (listaChiudibili != null)
	         chiudi(insiemeAperto, listaChiudibili);
	    
	</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4T1eSBwOEe-urICxG0GjCg" name="algoritmo" specification="_4S_JphwOEe-urICxG0GjCg">
                  <ownedParameter xmi:id="_4T1eSRwOEe-urICxG0GjCg" name="insiemeAperto" type="_4QRz4BwOEe-urICxG0GjCg"/>
                  <ownedParameter xmi:id="_4T1eShwOEe-urICxG0GjCg" type="_4QWsYBwOEe-urICxG0GjCg" isOrdered="true" direction="return">
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_4T1eSxwOEe-urICxG0GjCg" value="*"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>List&lt;PropostaAperta> lista;
	    for (PropostaAperta propostaAperta : insiemeAperto.getProposteAperte()) {
	        lista = proposteChiudibili(insiemeAperto.getProposteAperte(), propostaAperta);
	        if (lista != null &amp;&amp; !lista.isEmpty()) {
	            return lista;
	        }
	    }
	    return null;
	</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4T2FQBwOEe-urICxG0GjCg" name="proposteChiudibili" specification="_4TUg1BwOEe-urICxG0GjCg">
                  <ownedParameter xmi:id="_4T2FQRwOEe-urICxG0GjCg" name="proposteAperte" type="_4S304BwOEe-urICxG0GjCg"/>
                  <ownedParameter xmi:id="_4T2FQhwOEe-urICxG0GjCg" name="propostaAperta1" type="_4QWsYBwOEe-urICxG0GjCg"/>
                  <ownedParameter xmi:id="_4T2FQxwOEe-urICxG0GjCg" type="_4QWsYBwOEe-urICxG0GjCg" isOrdered="true" direction="return">
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_4T2FRBwOEe-urICxG0GjCg" value="*"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>List&lt;PropostaAperta> proposteChiudibili = new ArrayList&lt;>(); 

    
 	for (PropostaAperta propostaAperta2 : proposteAperte) {
 		List&lt;PropostaAperta> copia = new ArrayList&lt;>();
 		copia.addAll(proposteAperte);
 		if (!propostaAperta2.equals(propostaAperta1)) {
 			
     		if (soddisfacimentoTotale(propostaAperta1, propostaAperta2)) {
     			proposteChiudibili.add(propostaAperta2);
     			proposteChiudibili.add(propostaAperta1);
     			return proposteChiudibili;
     		} else if (soddisfacimento1(propostaAperta1, propostaAperta2)) {
     			 
     			 proposteChiudibili = proposteSoddisfacimento1(copia,propostaAperta1,
     					 propostaAperta2, new ArrayList&lt;PropostaAperta>());
     			 
     		} else if (soddisfacimento2(propostaAperta1, propostaAperta2)) {
     			 
     			 proposteChiudibili = proposteSoddisfacimento2(copia, propostaAperta1,
     					 propostaAperta2, new ArrayList&lt;PropostaAperta>());
     		}
     		
     		if(proposteChiudibili != null) {
         		if (!proposteChiudibili.isEmpty()) {
         			proposteChiudibili.add(propostaAperta2);
         			return proposteChiudibili;
         		}
     		}
 		}
 	}
		return null;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4T2FRRwOEe-urICxG0GjCg" name="soddisfacimento1" specification="_4S_wsBwOEe-urICxG0GjCg">
                  <ownedParameter xmi:id="_4T2FRhwOEe-urICxG0GjCg" name="propostaA" type="_4QUQIhwOEe-urICxG0GjCg"/>
                  <ownedParameter xmi:id="_4T2FRxwOEe-urICxG0GjCg" name="propostaB" type="_4QUQIhwOEe-urICxG0GjCg"/>
                  <ownedParameter xmi:id="_4T2FSBwOEe-urICxG0GjCg" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return propostaA.getOfferta().getFoglia().getNome().
	    		equals
	    		(propostaB.getRichiesta().getFoglia().getNome()) 
	    		&amp;&amp; 
	    		propostaA.getOfferta().getDurata() 
	    		== 
	    		(propostaB.getRichiesta()).getDurata() ;
	</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4T2FSRwOEe-urICxG0GjCg" name="soddisfacimento2" specification="_4S_wtBwOEe-urICxG0GjCg">
                  <ownedParameter xmi:id="_4T2FShwOEe-urICxG0GjCg" name="propostaA" type="_4QUQIhwOEe-urICxG0GjCg"/>
                  <ownedParameter xmi:id="_4T2FSxwOEe-urICxG0GjCg" name="propostaB" type="_4QUQIhwOEe-urICxG0GjCg"/>
                  <ownedParameter xmi:id="_4T2FTBwOEe-urICxG0GjCg" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return propostaA.getRichiesta().getFoglia().getNome().
	    		equals
	    		(propostaB.getOfferta().getFoglia().getNome()) 
	    		&amp;&amp; 
	    		propostaA.getRichiesta().getDurata() 
	    		== 
	    		(propostaB.getOfferta()).getDurata() ;
	</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4T2FTRwOEe-urICxG0GjCg" name="soddisfacimentoTotale" specification="_4S_wuBwOEe-urICxG0GjCg">
                  <ownedParameter xmi:id="_4T2FThwOEe-urICxG0GjCg" name="propostaA" type="_4QUQIhwOEe-urICxG0GjCg"/>
                  <ownedParameter xmi:id="_4T2FTxwOEe-urICxG0GjCg" name="propostaB" type="_4QUQIhwOEe-urICxG0GjCg"/>
                  <ownedParameter xmi:id="_4T2FUBwOEe-urICxG0GjCg" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return soddisfacimento1(propostaA, propostaB) &amp;&amp; soddisfacimento2(propostaA, propostaB);
	</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4T2FURwOEe-urICxG0GjCg" name="proposteSoddisfacimento1" specification="_4TVH4xwOEe-urICxG0GjCg">
                  <ownedParameter xmi:id="_4T2FUhwOEe-urICxG0GjCg" name="proposteAperte" type="_4S304BwOEe-urICxG0GjCg"/>
                  <ownedParameter xmi:id="_4T2FUxwOEe-urICxG0GjCg" name="propostaOriginale" type="_4QWsYBwOEe-urICxG0GjCg"/>
                  <ownedParameter xmi:id="_4T2FVBwOEe-urICxG0GjCg" name="propostaAperta1" type="_4QWsYBwOEe-urICxG0GjCg"/>
                  <ownedParameter xmi:id="_4T2FVRwOEe-urICxG0GjCg" name="proposteChiudibili" type="_4S304BwOEe-urICxG0GjCg"/>
                  <ownedParameter xmi:id="_4T2FVhwOEe-urICxG0GjCg" type="_4QWsYBwOEe-urICxG0GjCg" isOrdered="true" direction="return">
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_4T2FVxwOEe-urICxG0GjCg" value="*"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>proposteAperte.remove(propostaAperta1);
		
		if(proposteAperte != null) {
 		if (!proposteAperte.isEmpty()) {
		    	for (PropostaAperta propostaAperta2 : proposteAperte) {
		        	if (!propostaAperta2.equals(propostaAperta1)) {
		        		
		        		if (soddisfacimento1(propostaAperta1, propostaAperta2)) {
		        			proposteChiudibili.add(propostaAperta2);
		        			
		        			if (propostaAperta2.equals(propostaOriginale)) 
		        				return proposteChiudibili;
		        			else {
		        		    	List&lt;PropostaAperta> proposteAperteCopia = new ArrayList&lt;PropostaAperta>();
		        		    	proposteAperteCopia.addAll(proposteAperte);
		        		    	return proposteChiudibili = proposteSoddisfacimento1(proposteAperteCopia, propostaOriginale,  
		        						propostaAperta2, proposteChiudibili);
		        			}		
		        		}
		        	}	
				}
 		}
 	}
		return null;   
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4T2FWBwOEe-urICxG0GjCg" name="proposteSoddisfacimento2" specification="_4TVu8hwOEe-urICxG0GjCg">
                  <ownedParameter xmi:id="_4T2FWRwOEe-urICxG0GjCg" name="proposteAperte" type="_4S304BwOEe-urICxG0GjCg"/>
                  <ownedParameter xmi:id="_4T2FWhwOEe-urICxG0GjCg" name="propostaOriginale" type="_4QWsYBwOEe-urICxG0GjCg"/>
                  <ownedParameter xmi:id="_4T2FWxwOEe-urICxG0GjCg" name="propostaAperta1" type="_4QWsYBwOEe-urICxG0GjCg"/>
                  <ownedParameter xmi:id="_4T2FXBwOEe-urICxG0GjCg" name="proposteChiudibili" type="_4S304BwOEe-urICxG0GjCg"/>
                  <ownedParameter xmi:id="_4T2FXRwOEe-urICxG0GjCg" type="_4QWsYBwOEe-urICxG0GjCg" isOrdered="true" direction="return">
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_4T2FXhwOEe-urICxG0GjCg" value="*"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>proposteAperte.remove(propostaAperta1);
		
		if(proposteAperte != null) {
 		if (!proposteAperte.isEmpty()) {
		    	for (PropostaAperta propostaAperta2 : proposteAperte) {
		        	if (!propostaAperta2.equals(propostaAperta1)) {
		        		
		        		if (soddisfacimento2(propostaAperta1, propostaAperta2)) {
		        			proposteChiudibili.add(propostaAperta2);
		        			
		        			if (propostaAperta2.equals(propostaOriginale)) 
		        				return proposteChiudibili;
		        			else {
		        		    	List&lt;PropostaAperta> proposteAperteCopia = new ArrayList&lt;PropostaAperta>();
		        		    	proposteAperteCopia.addAll(proposteAperte);
		        		    	return proposteChiudibili = proposteSoddisfacimento2(proposteAperteCopia, propostaOriginale,  
		        						propostaAperta2, proposteChiudibili);
		        			}		
		        		}
		        	}	
				}
 		}
 	}
		return null;   
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4T2FXxwOEe-urICxG0GjCg" name="visualizzaProposteChiuse" specification="_4QOJghwOEe-urICxG0GjCg">
                  <ownedParameter xmi:id="_4T2FYBwOEe-urICxG0GjCg" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>StringBuffer str = new StringBuffer();
 	
 	for (InsiemeChiuso insiemeChiuso : insiemiChiusi) {
			for (PropostaChiusa propostaChiusa : insiemeChiuso.getProposteChiuse()) {
				
				if (propostaChiusa.getFruitore().getID().equals(utenteDiSessione.getID())) {
					
					if (insiemeChiuso.getProposteChiuse().get(0)
							.equals(propostaChiusa)) 
						str.append(&quot;{&quot;);
					
					str.append(&quot;\n&quot; + propostaChiusa.toString());
					
					if (insiemeChiuso.getProposteChiuse().get(insiemeChiuso.getProposteChiuse().size()-1)
							.equals(propostaChiusa)) 
						str.append(&quot;}\n\n&quot;);
					
				}
			}
		}
 	
 	return str.toString();
  
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4T2FYRwOEe-urICxG0GjCg" name="visualizzaProposteRitirate" specification="_4QOwkRwOEe-urICxG0GjCg">
                  <ownedParameter xmi:id="_4T2FYhwOEe-urICxG0GjCg" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>StringBuffer str = new StringBuffer();
 	
 	
 	for (PropostaRitirata propostaRitirata : insiemeRitirato.getProposteRitirate()) {
 		if (propostaRitirata.getFruitore().getID().equals(utenteDiSessione.getID())) {
				str.append(propostaRitirata.toString()+ &quot;\n&quot;);
			}
		}
 	
 	
 	return str.toString();
  
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4T2FYxwOEe-urICxG0GjCg" name="visualizzaProposteAperte" specification="_4QOwkxwOEe-urICxG0GjCg">
                  <ownedParameter xmi:id="_4T2FZBwOEe-urICxG0GjCg" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>StringBuffer str = new StringBuffer();
 	
 	
 	for (PropostaAperta propostaAperta : getInsiemeApertoDiSessione().getProposteAperte()) {
			if (propostaAperta.getFruitore().getID().equals(utenteDiSessione.getID())) {
				str.append(propostaAperta.toString()+ &quot;\n&quot;);
			}
		}
 	
 	
 	return str.toString();
  
 	
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4T2FZRwOEe-urICxG0GjCg" name="visualizzaProposteChiuse" specification="_4TAXwBwOEe-urICxG0GjCg">
                  <ownedParameter xmi:id="_4T2FZhwOEe-urICxG0GjCg" name="nodo" type="_4QDKZBwOEe-urICxG0GjCg"/>
                  <ownedParameter xmi:id="_4T2FZxwOEe-urICxG0GjCg" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>StringBuffer str = new StringBuffer();
 	
 	for (InsiemeChiuso insiemeChiuso : insiemiChiusi) {
			for (PropostaChiusa propostaChiusa : insiemeChiuso.getProposteChiuse()) {
				if 		(propostaChiusa.getOfferta().getFoglia().root().equals(nodo.root()) 
						&amp;&amp; propostaChiusa.getOfferta().getFoglia().getNome().equals(nodo.getNome()) 
						||
						propostaChiusa.getOfferta().getFoglia().root().equals(nodo.root()) 
						&amp;&amp; propostaChiusa.getRichiesta().getFoglia().getNome().equals(nodo.getNome())) {
	    			str.append(propostaChiusa.toString()+ &quot;\n&quot;);
	    			
	    		}
			}
		}
 	
 	return str.toString();
  
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4T2FaBwOEe-urICxG0GjCg" name="visualizzaProposteRitirate" specification="_4TAXwxwOEe-urICxG0GjCg">
                  <ownedParameter xmi:id="_4T2FaRwOEe-urICxG0GjCg" name="nodo" type="_4QDKZBwOEe-urICxG0GjCg"/>
                  <ownedParameter xmi:id="_4T2FahwOEe-urICxG0GjCg" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>StringBuffer str = new StringBuffer();
 	
 	
 	for (PropostaRitirata propostaRitirata : insiemeRitirato.getProposteRitirate()) {
 		if (propostaRitirata.getOfferta().getFoglia().root().equals(nodo.root()) 
					&amp;&amp; propostaRitirata.getOfferta().getFoglia().getNome().equals(nodo.getNome()) 
					||
					propostaRitirata.getOfferta().getFoglia().root().equals(nodo.root()) 
					&amp;&amp; propostaRitirata.getRichiesta().getFoglia().getNome().equals(nodo.getNome())) {
 			str.append(propostaRitirata.toString()+ &quot;\n&quot;);
 			
 		}
		}
 	
 	
 	
 	
 	return str.toString();
  
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4T2sUBwOEe-urICxG0GjCg" name="visualizzaProposteAperte" specification="_4TAXxhwOEe-urICxG0GjCg">
                  <ownedParameter xmi:id="_4T2sURwOEe-urICxG0GjCg" name="nodo" type="_4QDKZBwOEe-urICxG0GjCg"/>
                  <ownedParameter xmi:id="_4T2sUhwOEe-urICxG0GjCg" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>StringBuffer str = new StringBuffer();
 	
 	for (InsiemeAperto insiemeAperto : insiemiAperti) {
			for (PropostaAperta propostaAperta : insiemeAperto.getProposteAperte()) {
				if (propostaAperta.getOfferta().getFoglia().root().equals(nodo.root()) 
						&amp;&amp; propostaAperta.getOfferta().getFoglia().getNome().equals(nodo.getNome()) 
						||
						propostaAperta.getOfferta().getFoglia().root().equals(nodo.root()) 
						&amp;&amp; propostaAperta.getRichiesta().getFoglia().getNome().equals(nodo.getNome())) {
					str.append(propostaAperta.toString()+ &quot;\n&quot;);
					
				}
			}
		}
 	
 	return str.toString();
  
 	
 </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_4QNicBwOEe-urICxG0GjCg" name="Commercio" method="_4T03PBwOEe-urICxG0GjCg">
                  <eAnnotations xmi:id="_4QNicRwOEe-urICxG0GjCg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_4QNichwOEe-urICxG0GjCg" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_4QNicxwOEe-urICxG0GjCg" type="_4QM7YBwOEe-urICxG0GjCg" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_4QNidBwOEe-urICxG0GjCg" name="getInsiemeApertoDiSessione" method="_4T03QBwOEe-urICxG0GjCg">
                  <ownedParameter xmi:id="_4S-ikhwOEe-urICxG0GjCg" type="_4QRz4BwOEe-urICxG0GjCg" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_4QNidRwOEe-urICxG0GjCg" name="numProposte" method="_4T1eMBwOEe-urICxG0GjCg">
                  <ownedParameter xmi:id="_4QNidhwOEe-urICxG0GjCg" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_4QNidxwOEe-urICxG0GjCg" name="setNumProposte" method="_4T1eMhwOEe-urICxG0GjCg"/>
                <ownedOperation xmi:id="_4QNieBwOEe-urICxG0GjCg" name="decrementaNumProposte" method="_4T1eMxwOEe-urICxG0GjCg"/>
                <ownedOperation xmi:id="_4QOJgBwOEe-urICxG0GjCg" name="cercaProposta" method="_4T1eQBwOEe-urICxG0GjCg">
                  <ownedParameter xmi:id="_4QOJgRwOEe-urICxG0GjCg" name="ID">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_4S_JoxwOEe-urICxG0GjCg" type="_4QWsYBwOEe-urICxG0GjCg" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_4QOJghwOEe-urICxG0GjCg" name="visualizzaProposteChiuse" method="_4T2FXxwOEe-urICxG0GjCg">
                  <ownedParameter xmi:id="_4QOwkBwOEe-urICxG0GjCg" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_4QOwkRwOEe-urICxG0GjCg" name="visualizzaProposteRitirate" method="_4T2FYRwOEe-urICxG0GjCg">
                  <ownedParameter xmi:id="_4QOwkhwOEe-urICxG0GjCg" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_4QOwkxwOEe-urICxG0GjCg" name="visualizzaProposteAperte" method="_4T2FYxwOEe-urICxG0GjCg">
                  <ownedParameter xmi:id="_4QOwlBwOEe-urICxG0GjCg" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_4S-ikBwOEe-urICxG0GjCg" name="setUtenteDiSessione" method="_4T03PhwOEe-urICxG0GjCg">
                  <ownedParameter xmi:id="_4S-ikRwOEe-urICxG0GjCg" name="utenteDiSessione" type="_4P7OkBwOEe-urICxG0GjCg"/>
                </ownedOperation>
                <ownedOperation xmi:id="_4S-ikxwOEe-urICxG0GjCg" name="getInsiemeAperto" method="_4T1eNBwOEe-urICxG0GjCg">
                  <ownedParameter xmi:id="_4S-ilBwOEe-urICxG0GjCg" name="comprensorio" type="_4PzSwBwOEe-urICxG0GjCg"/>
                  <ownedParameter xmi:id="_4S-ilRwOEe-urICxG0GjCg" type="_4QRz4BwOEe-urICxG0GjCg" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_4S-ilhwOEe-urICxG0GjCg" name="addInsiemiAperti" method="_4T1eNxwOEe-urICxG0GjCg">
                  <ownedParameter xmi:id="_4S-ilxwOEe-urICxG0GjCg" name="insiemeAperto" type="_4QRz4BwOEe-urICxG0GjCg"/>
                </ownedOperation>
                <ownedOperation xmi:id="_4S-imBwOEe-urICxG0GjCg" name="addInsiemiChiusi" method="_4T1eORwOEe-urICxG0GjCg">
                  <ownedParameter xmi:id="_4S-imRwOEe-urICxG0GjCg" name="insiemeChiuso" type="_4QTCABwOEe-urICxG0GjCg"/>
                </ownedOperation>
                <ownedOperation xmi:id="_4S-imhwOEe-urICxG0GjCg" name="esistePropostaAperta" method="_4T1eOxwOEe-urICxG0GjCg">
                  <ownedParameter xmi:id="_4S-imxwOEe-urICxG0GjCg" name="propostaApertaInput" type="_4QWsYBwOEe-urICxG0GjCg"/>
                  <ownedParameter xmi:id="_4S_JoBwOEe-urICxG0GjCg" type="_4QRz4BwOEe-urICxG0GjCg" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_4S_JoRwOEe-urICxG0GjCg" name="ritira" method="_4T1ePhwOEe-urICxG0GjCg">
                  <ownedParameter xmi:id="_4S_JohwOEe-urICxG0GjCg" name="propostaAperta" type="_4QWsYBwOEe-urICxG0GjCg"/>
                </ownedOperation>
                <ownedOperation xmi:id="_4S_JpBwOEe-urICxG0GjCg" name="metodo" method="_4T1eRhwOEe-urICxG0GjCg">
                  <ownedParameter xmi:id="_4S_JpRwOEe-urICxG0GjCg" name="insiemeAperto" type="_4QRz4BwOEe-urICxG0GjCg"/>
                </ownedOperation>
                <ownedOperation xmi:id="_4S_JphwOEe-urICxG0GjCg" name="algoritmo" method="_4T1eSBwOEe-urICxG0GjCg">
                  <ownedParameter xmi:id="_4S_JpxwOEe-urICxG0GjCg" name="insiemeAperto" type="_4QRz4BwOEe-urICxG0GjCg"/>
                  <ownedParameter xmi:id="_4S_JqBwOEe-urICxG0GjCg" type="_4QWsYBwOEe-urICxG0GjCg" isOrdered="true" direction="return">
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_4S_JqRwOEe-urICxG0GjCg" value="*"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_4S_wsBwOEe-urICxG0GjCg" name="soddisfacimento1" visibility="private" isStatic="true" method="_4T2FRRwOEe-urICxG0GjCg">
                  <ownedParameter xmi:id="_4S_wsRwOEe-urICxG0GjCg" name="propostaA" type="_4QUQIhwOEe-urICxG0GjCg"/>
                  <ownedParameter xmi:id="_4S_wshwOEe-urICxG0GjCg" name="propostaB" type="_4QUQIhwOEe-urICxG0GjCg"/>
                  <ownedParameter xmi:id="_4S_wsxwOEe-urICxG0GjCg" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_4S_wtBwOEe-urICxG0GjCg" name="soddisfacimento2" visibility="private" isStatic="true" method="_4T2FSRwOEe-urICxG0GjCg">
                  <ownedParameter xmi:id="_4S_wtRwOEe-urICxG0GjCg" name="propostaA" type="_4QUQIhwOEe-urICxG0GjCg"/>
                  <ownedParameter xmi:id="_4S_wthwOEe-urICxG0GjCg" name="propostaB" type="_4QUQIhwOEe-urICxG0GjCg"/>
                  <ownedParameter xmi:id="_4S_wtxwOEe-urICxG0GjCg" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_4S_wuBwOEe-urICxG0GjCg" name="soddisfacimentoTotale" visibility="private" isStatic="true" method="_4T2FTRwOEe-urICxG0GjCg">
                  <ownedParameter xmi:id="_4S_wuRwOEe-urICxG0GjCg" name="propostaA" type="_4QUQIhwOEe-urICxG0GjCg"/>
                  <ownedParameter xmi:id="_4S_wuhwOEe-urICxG0GjCg" name="propostaB" type="_4QUQIhwOEe-urICxG0GjCg"/>
                  <ownedParameter xmi:id="_4S_wuxwOEe-urICxG0GjCg" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_4TAXwBwOEe-urICxG0GjCg" name="visualizzaProposteChiuse" method="_4T2FZRwOEe-urICxG0GjCg">
                  <ownedParameter xmi:id="_4TAXwRwOEe-urICxG0GjCg" name="nodo" type="_4QDKZBwOEe-urICxG0GjCg"/>
                  <ownedParameter xmi:id="_4TAXwhwOEe-urICxG0GjCg" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_4TAXwxwOEe-urICxG0GjCg" name="visualizzaProposteRitirate" method="_4T2FaBwOEe-urICxG0GjCg">
                  <ownedParameter xmi:id="_4TAXxBwOEe-urICxG0GjCg" name="nodo" type="_4QDKZBwOEe-urICxG0GjCg"/>
                  <ownedParameter xmi:id="_4TAXxRwOEe-urICxG0GjCg" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_4TAXxhwOEe-urICxG0GjCg" name="visualizzaProposteAperte" method="_4T2sUBwOEe-urICxG0GjCg">
                  <ownedParameter xmi:id="_4TAXxxwOEe-urICxG0GjCg" name="nodo" type="_4QDKZBwOEe-urICxG0GjCg"/>
                  <ownedParameter xmi:id="_4TAXyBwOEe-urICxG0GjCg" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_4TUg0BwOEe-urICxG0GjCg" name="chiudi" visibility="private" method="_4T1eQxwOEe-urICxG0GjCg">
                  <ownedParameter xmi:id="_4TUg0RwOEe-urICxG0GjCg" name="insiemeAperto" type="_4QRz4BwOEe-urICxG0GjCg"/>
                  <ownedParameter xmi:id="_4TUg0hwOEe-urICxG0GjCg" name="proposteAperte" type="_4S304BwOEe-urICxG0GjCg"/>
                </ownedOperation>
                <ownedOperation xmi:id="_4TUg1BwOEe-urICxG0GjCg" name="proposteChiudibili" isStatic="true" method="_4T2FQBwOEe-urICxG0GjCg">
                  <ownedParameter xmi:id="_4TUg1RwOEe-urICxG0GjCg" name="proposteAperte" type="_4S304BwOEe-urICxG0GjCg"/>
                  <ownedParameter xmi:id="_4TUg1hwOEe-urICxG0GjCg" name="propostaAperta1" type="_4QWsYBwOEe-urICxG0GjCg"/>
                  <ownedParameter xmi:id="_4TVH4BwOEe-urICxG0GjCg" type="_4QWsYBwOEe-urICxG0GjCg" isOrdered="true" direction="return">
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_4TVH4RwOEe-urICxG0GjCg" value="*"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_4TVH4xwOEe-urICxG0GjCg" name="proposteSoddisfacimento1" isStatic="true" method="_4T2FURwOEe-urICxG0GjCg">
                  <ownedParameter xmi:id="_4TVH5BwOEe-urICxG0GjCg" name="proposteAperte" type="_4S304BwOEe-urICxG0GjCg"/>
                  <ownedParameter xmi:id="_4TVH5RwOEe-urICxG0GjCg" name="propostaOriginale" type="_4QWsYBwOEe-urICxG0GjCg"/>
                  <ownedParameter xmi:id="_4TVH5hwOEe-urICxG0GjCg" name="propostaAperta1" type="_4QWsYBwOEe-urICxG0GjCg"/>
                  <ownedParameter xmi:id="_4TVH5xwOEe-urICxG0GjCg" name="proposteChiudibili" type="_4S304BwOEe-urICxG0GjCg"/>
                  <ownedParameter xmi:id="_4TVH6BwOEe-urICxG0GjCg" type="_4QWsYBwOEe-urICxG0GjCg" isOrdered="true" direction="return">
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_4TVH6RwOEe-urICxG0GjCg" value="*"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_4TVu8hwOEe-urICxG0GjCg" name="proposteSoddisfacimento2" isStatic="true" method="_4T2FWBwOEe-urICxG0GjCg">
                  <ownedParameter xmi:id="_4TVu8xwOEe-urICxG0GjCg" name="proposteAperte" type="_4S304BwOEe-urICxG0GjCg"/>
                  <ownedParameter xmi:id="_4TVu9BwOEe-urICxG0GjCg" name="propostaOriginale" type="_4QWsYBwOEe-urICxG0GjCg"/>
                  <ownedParameter xmi:id="_4TVu9RwOEe-urICxG0GjCg" name="propostaAperta1" type="_4QWsYBwOEe-urICxG0GjCg"/>
                  <ownedParameter xmi:id="_4TVu9hwOEe-urICxG0GjCg" name="proposteChiudibili" type="_4S304BwOEe-urICxG0GjCg"/>
                  <ownedParameter xmi:id="_4TVu9xwOEe-urICxG0GjCg" type="_4QWsYBwOEe-urICxG0GjCg" isOrdered="true" direction="return">
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_4TVu-BwOEe-urICxG0GjCg" value="*"/>
                  </ownedParameter>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_4QRz4BwOEe-urICxG0GjCg" name="InsiemeAperto">
                <ownedAttribute xmi:id="_4TrtMBwOEe-urICxG0GjCg" name="comprensorio" type="_4PzSwBwOEe-urICxG0GjCg" isReadOnly="true" association="_4UF84xwOEe-urICxG0GjCg"/>
                <ownedAttribute xmi:id="_4TrtMRwOEe-urICxG0GjCg" name="proposteAperte" type="_4QWsYBwOEe-urICxG0GjCg" isOrdered="true" isReadOnly="true" association="_4UF85hwOEe-urICxG0GjCg">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_4TrtMhwOEe-urICxG0GjCg" value="*"/>
                </ownedAttribute>
                <interfaceRealization xmi:id="_4TW9EBwOEe-urICxG0GjCg" client="_4QRz4BwOEe-urICxG0GjCg" supplier="_4Ss1wBwOEe-urICxG0GjCg" contract="_4Ss1wBwOEe-urICxG0GjCg"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4T2sUxwOEe-urICxG0GjCg" name="InsiemeAperto" specification="_4TBl4BwOEe-urICxG0GjCg">
                  <ownedParameter xmi:id="_4T2sVBwOEe-urICxG0GjCg" name="comprensorio" type="_4PzSwBwOEe-urICxG0GjCg"/>
                  <ownedParameter xmi:id="_4T2sVRwOEe-urICxG0GjCg" type="_4QRz4BwOEe-urICxG0GjCg" direction="return"/>
                  <language>java</language>
                  <body>this.comprensorio = comprensorio;
		this.proposteAperte = new ArrayList&lt;>();
	</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4T2sVhwOEe-urICxG0GjCg" name="addPropostaAperta" specification="_4TBl5RwOEe-urICxG0GjCg">
                  <ownedParameter xmi:id="_4T2sVxwOEe-urICxG0GjCg" name="proposta" type="_4QWsYBwOEe-urICxG0GjCg"/>
                  <language>java</language>
                  <body>this.proposteAperte.add(proposta);
	</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4T2sWBwOEe-urICxG0GjCg" name="addProposteAperte" specification="_4TW9ERwOEe-urICxG0GjCg">
                  <ownedParameter xmi:id="_4T2sWRwOEe-urICxG0GjCg" name="proposteAperte" type="_4S304BwOEe-urICxG0GjCg"/>
                  <language>java</language>
                  <body>for (PropostaAperta propostaAperta : proposteAperte) {
			this.addPropostaAperta(propostaAperta);
		}
	</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4T2sWhwOEe-urICxG0GjCg" name="eliminaPropostaAperta" specification="_4TCM8BwOEe-urICxG0GjCg">
                  <ownedParameter xmi:id="_4T2sWxwOEe-urICxG0GjCg" name="propostaDaEliminare" type="_4QWsYBwOEe-urICxG0GjCg"/>
                  <language>java</language>
                  <body>if (proposteAperte != null) 
			this.proposteAperte.remove(propostaDaEliminare);
		
	</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4T2sXBwOEe-urICxG0GjCg" name="contains" specification="_4TCM8hwOEe-urICxG0GjCg">
                  <ownedParameter xmi:id="_4T2sXRwOEe-urICxG0GjCg" name="proposta" type="_4QWsYBwOEe-urICxG0GjCg"/>
                  <ownedParameter xmi:id="_4T2sXhwOEe-urICxG0GjCg" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return proposteAperte.contains(proposta);
	</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4T2sXxwOEe-urICxG0GjCg" name="esistePropostaAperta" specification="_4TCM9RwOEe-urICxG0GjCg">
                  <ownedParameter xmi:id="_4T2sYBwOEe-urICxG0GjCg" name="propostaApertaInput" type="_4QWsYBwOEe-urICxG0GjCg"/>
                  <ownedParameter xmi:id="_4T2sYRwOEe-urICxG0GjCg" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>for (PropostaAperta propostaAperta : proposteAperte) {
			if (propostaAperta.getID() == propostaApertaInput.getID()) {
				return true;
			}
		}
		
		return false;
	</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4T2sYhwOEe-urICxG0GjCg" name="toString" specification="_4QRz4RwOEe-urICxG0GjCg">
                  <ownedParameter xmi:id="_4T3TYBwOEe-urICxG0GjCg" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>StringBuffer str = new StringBuffer();
 	
 	for (PropostaAperta propostaAperta : proposteAperte) {
			str.append(propostaAperta.toString()+&quot;\n&quot;);
		}
 	
		return str.toString();    	
 </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_4QRz4RwOEe-urICxG0GjCg" name="toString" method="_4T2sYhwOEe-urICxG0GjCg">
                  <ownedParameter xmi:id="_4QRz4hwOEe-urICxG0GjCg" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_4TBl4BwOEe-urICxG0GjCg" name="InsiemeAperto" method="_4T2sUxwOEe-urICxG0GjCg">
                  <eAnnotations xmi:id="_4TBl4hwOEe-urICxG0GjCg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_4TBl4xwOEe-urICxG0GjCg" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_4TBl4RwOEe-urICxG0GjCg" name="comprensorio" type="_4PzSwBwOEe-urICxG0GjCg"/>
                  <ownedParameter xmi:id="_4TBl5BwOEe-urICxG0GjCg" type="_4QRz4BwOEe-urICxG0GjCg" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_4TBl5RwOEe-urICxG0GjCg" name="addPropostaAperta" method="_4T2sVhwOEe-urICxG0GjCg">
                  <ownedParameter xmi:id="_4TBl5hwOEe-urICxG0GjCg" name="proposta" type="_4QWsYBwOEe-urICxG0GjCg"/>
                </ownedOperation>
                <ownedOperation xmi:id="_4TCM8BwOEe-urICxG0GjCg" name="eliminaPropostaAperta" method="_4T2sWhwOEe-urICxG0GjCg">
                  <ownedParameter xmi:id="_4TCM8RwOEe-urICxG0GjCg" name="propostaDaEliminare" type="_4QWsYBwOEe-urICxG0GjCg"/>
                </ownedOperation>
                <ownedOperation xmi:id="_4TCM8hwOEe-urICxG0GjCg" name="contains" method="_4T2sXBwOEe-urICxG0GjCg">
                  <ownedParameter xmi:id="_4TCM8xwOEe-urICxG0GjCg" name="proposta" type="_4QWsYBwOEe-urICxG0GjCg"/>
                  <ownedParameter xmi:id="_4TCM9BwOEe-urICxG0GjCg" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_4TCM9RwOEe-urICxG0GjCg" name="esistePropostaAperta" method="_4T2sXxwOEe-urICxG0GjCg">
                  <ownedParameter xmi:id="_4TCM9hwOEe-urICxG0GjCg" name="propostaApertaInput" type="_4QWsYBwOEe-urICxG0GjCg"/>
                  <ownedParameter xmi:id="_4TCM9xwOEe-urICxG0GjCg" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_4TW9ERwOEe-urICxG0GjCg" name="addProposteAperte" method="_4T2sWBwOEe-urICxG0GjCg">
                  <ownedParameter xmi:id="_4TW9EhwOEe-urICxG0GjCg" name="proposteAperte" type="_4S304BwOEe-urICxG0GjCg"/>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_4QTCABwOEe-urICxG0GjCg" name="InsiemeChiuso">
                <ownedAttribute xmi:id="_4TrtMxwOEe-urICxG0GjCg" name="proposteChiuse" type="_4QXTcRwOEe-urICxG0GjCg" isOrdered="true" isReadOnly="true" association="_4UF86RwOEe-urICxG0GjCg">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_4TrtNBwOEe-urICxG0GjCg" value="*"/>
                </ownedAttribute>
                <interfaceRealization xmi:id="_4TXkIRwOEe-urICxG0GjCg" client="_4QTCABwOEe-urICxG0GjCg" supplier="_4Ss1wBwOEe-urICxG0GjCg" contract="_4Ss1wBwOEe-urICxG0GjCg"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4T3TYRwOEe-urICxG0GjCg" name="InsiemeChiuso" specification="_4QTCARwOEe-urICxG0GjCg">
                  <ownedParameter xmi:id="_4T3TYhwOEe-urICxG0GjCg" type="_4QTCABwOEe-urICxG0GjCg" direction="return"/>
                  <language>java</language>
                  <body>this.proposteChiuse=new ArrayList&lt;>();
		
	</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4T3TYxwOEe-urICxG0GjCg" name="addProposteChiuse" specification="_4TC0ABwOEe-urICxG0GjCg">
                  <ownedParameter xmi:id="_4T3TZBwOEe-urICxG0GjCg" name="propostaChiusa" type="_4QXTcRwOEe-urICxG0GjCg"/>
                  <language>java</language>
                  <body>this.proposteChiuse.add(propostaChiusa);
	</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4T3TZRwOEe-urICxG0GjCg" name="toString" specification="_4QTCBRwOEe-urICxG0GjCg">
                  <ownedParameter xmi:id="_4T3TZhwOEe-urICxG0GjCg" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>StringBuffer str = new StringBuffer();
 	
 	for (PropostaChiusa propostachiusa : proposteChiuse) {
			str.append(propostachiusa.toString()+&quot;\n&quot;);
		}
 	
		return str.toString();    	
 </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_4QTCARwOEe-urICxG0GjCg" name="InsiemeChiuso" method="_4T3TYRwOEe-urICxG0GjCg">
                  <eAnnotations xmi:id="_4QTCAhwOEe-urICxG0GjCg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_4QTCAxwOEe-urICxG0GjCg" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_4QTCBBwOEe-urICxG0GjCg" type="_4QTCABwOEe-urICxG0GjCg" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_4QTCBRwOEe-urICxG0GjCg" name="toString" method="_4T3TZRwOEe-urICxG0GjCg">
                  <ownedParameter xmi:id="_4QTCBhwOEe-urICxG0GjCg" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_4TC0ABwOEe-urICxG0GjCg" name="addProposteChiuse" method="_4T3TYxwOEe-urICxG0GjCg">
                  <ownedParameter xmi:id="_4TC0ARwOEe-urICxG0GjCg" name="propostaChiusa" type="_4QXTcRwOEe-urICxG0GjCg"/>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_4QTpEBwOEe-urICxG0GjCg" name="InsiemeRitirato">
                <ownedAttribute xmi:id="_4TsUQBwOEe-urICxG0GjCg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_4TsUQRwOEe-urICxG0GjCg" value="1L"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_4TsUQhwOEe-urICxG0GjCg" name="proposteRitirate" type="_4QYhkBwOEe-urICxG0GjCg" isOrdered="true" isReadOnly="true" association="_4UGj8RwOEe-urICxG0GjCg">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_4TsUQxwOEe-urICxG0GjCg" value="*"/>
                </ownedAttribute>
                <interfaceRealization xmi:id="_4TYLMBwOEe-urICxG0GjCg" client="_4QTpEBwOEe-urICxG0GjCg" supplier="_4Ss1wBwOEe-urICxG0GjCg" contract="_4Ss1wBwOEe-urICxG0GjCg"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4T3TZxwOEe-urICxG0GjCg" name="InsiemeRitirato" specification="_4QTpERwOEe-urICxG0GjCg">
                  <ownedParameter xmi:id="_4T3TaBwOEe-urICxG0GjCg" type="_4QTpEBwOEe-urICxG0GjCg" direction="return"/>
                  <language>java</language>
                  <body>this.proposteRitirate=new ArrayList&lt;>();
		
	</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4T3TaRwOEe-urICxG0GjCg" name="addProposteRitirate" specification="_4TC0AhwOEe-urICxG0GjCg">
                  <ownedParameter xmi:id="_4T3TahwOEe-urICxG0GjCg" name="propostaRitirata" type="_4QYhkBwOEe-urICxG0GjCg"/>
                  <language>java</language>
                  <body>this.proposteRitirate.add(propostaRitirata);
	</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4T3TaxwOEe-urICxG0GjCg" name="toString" specification="_4QUQIBwOEe-urICxG0GjCg">
                  <ownedParameter xmi:id="_4T3TbBwOEe-urICxG0GjCg" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>StringBuffer str = new StringBuffer();
 	
 	for (PropostaRitirata propostaRitirata : proposteRitirate) {
			str.append(propostaRitirata.toString()+&quot;\n&quot;);
		}
 	
		return str.toString();    	
 </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_4QTpERwOEe-urICxG0GjCg" name="InsiemeRitirato" method="_4T3TZxwOEe-urICxG0GjCg">
                  <eAnnotations xmi:id="_4QTpEhwOEe-urICxG0GjCg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_4QTpExwOEe-urICxG0GjCg" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_4QTpFBwOEe-urICxG0GjCg" type="_4QTpEBwOEe-urICxG0GjCg" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_4QUQIBwOEe-urICxG0GjCg" name="toString" method="_4T3TaxwOEe-urICxG0GjCg">
                  <ownedParameter xmi:id="_4QUQIRwOEe-urICxG0GjCg" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_4TC0AhwOEe-urICxG0GjCg" name="addProposteRitirate" method="_4T3TaRwOEe-urICxG0GjCg">
                  <ownedParameter xmi:id="_4TC0AxwOEe-urICxG0GjCg" name="propostaRitirata" type="_4QYhkBwOEe-urICxG0GjCg"/>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_4QUQIhwOEe-urICxG0GjCg" name="Proposta" isAbstract="true">
                <ownedComment xmi:id="_4T8L5xwOEe-urICxG0GjCg">
                  <body>La classe PropostaDiScambio rappresenta una proposta di scambio tra due prestazioni.

Autore: Daniele Martinelli e Federico Sabbadini</body>
                </ownedComment>
                <ownedAttribute xmi:id="_4TsURBwOEe-urICxG0GjCg" name="status" visibility="protected">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_4TsURhwOEe-urICxG0GjCg" name="richiesta" visibility="protected" type="_4QIC4BwOEe-urICxG0GjCg" association="_4UGj9BwOEe-urICxG0GjCg"/>
                <ownedAttribute xmi:id="_4TsUSBwOEe-urICxG0GjCg" name="offerta" visibility="protected" type="_4QIC4BwOEe-urICxG0GjCg" association="_4UGj9xwOEe-urICxG0GjCg"/>
                <ownedAttribute xmi:id="_4Ts7URwOEe-urICxG0GjCg" name="ID" visibility="protected">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_4Ts7UxwOEe-urICxG0GjCg" name="fruitore" visibility="protected" type="_4P7OkBwOEe-urICxG0GjCg" association="_4UHLARwOEe-urICxG0GjCg"/>
                <interfaceRealization xmi:id="_4TYLMRwOEe-urICxG0GjCg" client="_4QUQIhwOEe-urICxG0GjCg" supplier="_4Ss1wBwOEe-urICxG0GjCg" contract="_4Ss1wBwOEe-urICxG0GjCg"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4T3TbRwOEe-urICxG0GjCg" name="Proposta" specification="_4TDbEBwOEe-urICxG0GjCg">
                  <ownedParameter xmi:id="_4T3TbhwOEe-urICxG0GjCg" name="richiesta" type="_4QIC4BwOEe-urICxG0GjCg"/>
                  <ownedParameter xmi:id="_4T3TbxwOEe-urICxG0GjCg" name="offerta" type="_4QIC4BwOEe-urICxG0GjCg"/>
                  <ownedParameter xmi:id="_4T3TcBwOEe-urICxG0GjCg" name="ID">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_4T3TcRwOEe-urICxG0GjCg" name="fruitore" type="_4P7OkBwOEe-urICxG0GjCg"/>
                  <ownedParameter xmi:id="_4T3TchwOEe-urICxG0GjCg" type="_4QUQIhwOEe-urICxG0GjCg" direction="return"/>
                  <language>java</language>
                  <body>this.richiesta = richiesta;
     this.offerta = offerta;
     this.ID=ID;
     this.fruitore=fruitore;

     setOfferta();
     setStatus();
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4T3TcxwOEe-urICxG0GjCg" name="getID" specification="_4QU3MBwOEe-urICxG0GjCg">
                  <ownedParameter xmi:id="_4T3TdBwOEe-urICxG0GjCg" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return ID;
	</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4T3TdRwOEe-urICxG0GjCg" name="setID" specification="_4QU3MhwOEe-urICxG0GjCg">
                  <ownedParameter xmi:id="_4T3TdhwOEe-urICxG0GjCg" name="iD">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>ID = iD;
	</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4T36cBwOEe-urICxG0GjCg" name="getStatus" specification="_4QU3NBwOEe-urICxG0GjCg">
                  <ownedParameter xmi:id="_4T36cRwOEe-urICxG0GjCg" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return status;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4T36chwOEe-urICxG0GjCg" name="getFruitore" specification="_4QVeQBwOEe-urICxG0GjCg">
                  <ownedParameter xmi:id="_4T36cxwOEe-urICxG0GjCg" type="_4P7OkBwOEe-urICxG0GjCg" direction="return"/>
                  <language>java</language>
                  <body>return fruitore;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4T36dBwOEe-urICxG0GjCg" name="getRichiesta" specification="_4QVeQhwOEe-urICxG0GjCg">
                  <ownedParameter xmi:id="_4T36dRwOEe-urICxG0GjCg" type="_4QIC4BwOEe-urICxG0GjCg" direction="return"/>
                  <language>java</language>
                  <body>return richiesta;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4T36dhwOEe-urICxG0GjCg" name="getOfferta" specification="_4QVeQxwOEe-urICxG0GjCg">
                  <ownedParameter xmi:id="_4T36dxwOEe-urICxG0GjCg" type="_4QIC4BwOEe-urICxG0GjCg" direction="return"/>
                  <language>java</language>
                  <body>return offerta;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4T36eBwOEe-urICxG0GjCg" name="setOfferta" specification="_4QVeRBwOEe-urICxG0GjCg">
                  <language>java</language>
                  <body>int durata = this.richiesta.getDurata();
     Nodo foglia1 = this.richiesta.getFoglia();
     Nodo foglia2 = this.offerta.getFoglia();

     double fattore = foglia1.fattoreFoglia(foglia2);

     durata = (int) (fattore * durata);

     this.offerta.setDurata(durata);
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4T36eRwOEe-urICxG0GjCg" name="toString" specification="_4QVeRRwOEe-urICxG0GjCg">
                  <ownedParameter xmi:id="_4T36ehwOEe-urICxG0GjCg" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>StringBuffer str = new StringBuffer();
 	
 	str.append(&quot;Richiesta &quot; + richiesta.toString());
 	str.append(&quot;Offerta &quot; + offerta.toString());
 	str.append(&quot;ID: &quot; + this.getID() + &quot;\n&quot;);
 	
		return str.toString();    	
 </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_4QU3MBwOEe-urICxG0GjCg" name="getID" method="_4T3TcxwOEe-urICxG0GjCg">
                  <ownedParameter xmi:id="_4QU3MRwOEe-urICxG0GjCg" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_4QU3MhwOEe-urICxG0GjCg" name="setID" method="_4T3TdRwOEe-urICxG0GjCg">
                  <ownedParameter xmi:id="_4QU3MxwOEe-urICxG0GjCg" name="iD">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_4QU3NBwOEe-urICxG0GjCg" name="getStatus" method="_4T36cBwOEe-urICxG0GjCg">
                  <ownedParameter xmi:id="_4QU3NRwOEe-urICxG0GjCg" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_4QVeQBwOEe-urICxG0GjCg" name="getFruitore" method="_4T36chwOEe-urICxG0GjCg">
                  <ownedParameter xmi:id="_4TECIBwOEe-urICxG0GjCg" type="_4P7OkBwOEe-urICxG0GjCg" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_4QVeQRwOEe-urICxG0GjCg" name="setStatus" isAbstract="true"/>
                <ownedOperation xmi:id="_4QVeQhwOEe-urICxG0GjCg" name="getRichiesta" method="_4T36dBwOEe-urICxG0GjCg">
                  <ownedComment xmi:id="_4T8L6BwOEe-urICxG0GjCg">
                    <body>Restituisce la prestazione richiesta nella proposta di scambio.
     *
     * @return La prestazione richiesta.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_4TECIRwOEe-urICxG0GjCg" type="_4QIC4BwOEe-urICxG0GjCg" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_4QVeQxwOEe-urICxG0GjCg" name="getOfferta" method="_4T36dhwOEe-urICxG0GjCg">
                  <ownedComment xmi:id="_4T8L6RwOEe-urICxG0GjCg">
                    <body>Restituisce la prestazione offerta nella proposta di scambio.
     *
     * @return La prestazione offerta.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_4TECIhwOEe-urICxG0GjCg" type="_4QIC4BwOEe-urICxG0GjCg" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_4QVeRBwOEe-urICxG0GjCg" name="setOfferta" method="_4T36eBwOEe-urICxG0GjCg">
                  <ownedComment xmi:id="_4T8L6hwOEe-urICxG0GjCg">
                    <body>Imposta la durata della prestazione offerta in base al fattore di compatibilità tra le foglie delle prestazioni.</body>
                  </ownedComment>
                </ownedOperation>
                <ownedOperation xmi:id="_4QVeRRwOEe-urICxG0GjCg" name="toString" method="_4T36eRwOEe-urICxG0GjCg">
                  <ownedParameter xmi:id="_4QVeRhwOEe-urICxG0GjCg" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_4TDbEBwOEe-urICxG0GjCg" name="Proposta" method="_4T3TbRwOEe-urICxG0GjCg">
                  <eAnnotations xmi:id="_4TDbFRwOEe-urICxG0GjCg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_4TDbFhwOEe-urICxG0GjCg" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_4TDbERwOEe-urICxG0GjCg" name="richiesta" type="_4QIC4BwOEe-urICxG0GjCg"/>
                  <ownedParameter xmi:id="_4TDbEhwOEe-urICxG0GjCg" name="offerta" type="_4QIC4BwOEe-urICxG0GjCg"/>
                  <ownedParameter xmi:id="_4TDbExwOEe-urICxG0GjCg" name="ID">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_4TDbFBwOEe-urICxG0GjCg" name="fruitore" type="_4P7OkBwOEe-urICxG0GjCg"/>
                  <ownedParameter xmi:id="_4TDbFxwOEe-urICxG0GjCg" type="_4QUQIhwOEe-urICxG0GjCg" direction="return"/>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_4QWsYBwOEe-urICxG0GjCg" name="PropostaAperta">
                <generalization xmi:id="_4TEpOBwOEe-urICxG0GjCg" general="_4QUQIhwOEe-urICxG0GjCg"/>
                <ownedAttribute xmi:id="_4Ts7VRwOEe-urICxG0GjCg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_4Ts7VhwOEe-urICxG0GjCg" value="1L"/>
                </ownedAttribute>
                <interfaceRealization xmi:id="_4TYyQBwOEe-urICxG0GjCg" client="_4QWsYBwOEe-urICxG0GjCg" supplier="_4Ss1wBwOEe-urICxG0GjCg" contract="_4Ss1wBwOEe-urICxG0GjCg"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4T36exwOEe-urICxG0GjCg" name="PropostaAperta" specification="_4TEpMBwOEe-urICxG0GjCg">
                  <ownedParameter xmi:id="_4T36fBwOEe-urICxG0GjCg" name="richiesta" type="_4QIC4BwOEe-urICxG0GjCg"/>
                  <ownedParameter xmi:id="_4T36fRwOEe-urICxG0GjCg" name="offerta" type="_4QIC4BwOEe-urICxG0GjCg"/>
                  <ownedParameter xmi:id="_4T36fhwOEe-urICxG0GjCg" name="ID">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_4T36fxwOEe-urICxG0GjCg" name="fruitore" type="_4P7OkBwOEe-urICxG0GjCg"/>
                  <ownedParameter xmi:id="_4T36gBwOEe-urICxG0GjCg" type="_4QWsYBwOEe-urICxG0GjCg" direction="return"/>
                  <language>java</language>
                  <body>super(richiesta, offerta, ID,fruitore);
	  </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4T36gRwOEe-urICxG0GjCg" name="setStatus" specification="_4QWsYRwOEe-urICxG0GjCg">
                  <language>java</language>
                  <body>this.status = &quot;Aperta&quot;;
		
	</body>
                </ownedBehavior>
                <ownedOperation xmi:id="_4QWsYRwOEe-urICxG0GjCg" name="setStatus" method="_4T36gRwOEe-urICxG0GjCg"/>
                <ownedOperation xmi:id="_4TEpMBwOEe-urICxG0GjCg" name="PropostaAperta" method="_4T36exwOEe-urICxG0GjCg">
                  <eAnnotations xmi:id="_4TEpNRwOEe-urICxG0GjCg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_4TEpNhwOEe-urICxG0GjCg" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_4TEpMRwOEe-urICxG0GjCg" name="richiesta" type="_4QIC4BwOEe-urICxG0GjCg"/>
                  <ownedParameter xmi:id="_4TEpMhwOEe-urICxG0GjCg" name="offerta" type="_4QIC4BwOEe-urICxG0GjCg"/>
                  <ownedParameter xmi:id="_4TEpMxwOEe-urICxG0GjCg" name="ID">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_4TEpNBwOEe-urICxG0GjCg" name="fruitore" type="_4P7OkBwOEe-urICxG0GjCg"/>
                  <ownedParameter xmi:id="_4TEpNxwOEe-urICxG0GjCg" type="_4QWsYBwOEe-urICxG0GjCg" direction="return"/>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_4QXTcRwOEe-urICxG0GjCg" name="PropostaChiusa">
                <generalization xmi:id="_4TFQSBwOEe-urICxG0GjCg" general="_4QUQIhwOEe-urICxG0GjCg"/>
                <ownedAttribute xmi:id="_4TtiYBwOEe-urICxG0GjCg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_4TtiYRwOEe-urICxG0GjCg" value="1L"/>
                </ownedAttribute>
                <interfaceRealization xmi:id="_4TYyQRwOEe-urICxG0GjCg" client="_4QXTcRwOEe-urICxG0GjCg" supplier="_4Ss1wBwOEe-urICxG0GjCg" contract="_4Ss1wBwOEe-urICxG0GjCg"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4T36ghwOEe-urICxG0GjCg" name="PropostaChiusa" specification="_4TFQQBwOEe-urICxG0GjCg">
                  <ownedParameter xmi:id="_4T36gxwOEe-urICxG0GjCg" name="richiesta" type="_4QIC4BwOEe-urICxG0GjCg"/>
                  <ownedParameter xmi:id="_4T36hBwOEe-urICxG0GjCg" name="offerta" type="_4QIC4BwOEe-urICxG0GjCg"/>
                  <ownedParameter xmi:id="_4T36hRwOEe-urICxG0GjCg" name="ID">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_4T36hhwOEe-urICxG0GjCg" name="fruitore" type="_4P7OkBwOEe-urICxG0GjCg"/>
                  <ownedParameter xmi:id="_4T36hxwOEe-urICxG0GjCg" type="_4QXTcRwOEe-urICxG0GjCg" direction="return"/>
                  <language>java</language>
                  <body>super(richiesta, offerta, ID,fruitore);
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4T4hgBwOEe-urICxG0GjCg" name="setStatus" specification="_4QX6gBwOEe-urICxG0GjCg">
                  <language>java</language>
                  <body>this.status = &quot;Chiusa&quot;;
		
	</body>
                </ownedBehavior>
                <ownedOperation xmi:id="_4QX6gBwOEe-urICxG0GjCg" name="setStatus" method="_4T4hgBwOEe-urICxG0GjCg"/>
                <ownedOperation xmi:id="_4TFQQBwOEe-urICxG0GjCg" name="PropostaChiusa" method="_4T36ghwOEe-urICxG0GjCg">
                  <eAnnotations xmi:id="_4TFQRRwOEe-urICxG0GjCg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_4TFQRhwOEe-urICxG0GjCg" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_4TFQQRwOEe-urICxG0GjCg" name="richiesta" type="_4QIC4BwOEe-urICxG0GjCg"/>
                  <ownedParameter xmi:id="_4TFQQhwOEe-urICxG0GjCg" name="offerta" type="_4QIC4BwOEe-urICxG0GjCg"/>
                  <ownedParameter xmi:id="_4TFQQxwOEe-urICxG0GjCg" name="ID">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_4TFQRBwOEe-urICxG0GjCg" name="fruitore" type="_4P7OkBwOEe-urICxG0GjCg"/>
                  <ownedParameter xmi:id="_4TFQRxwOEe-urICxG0GjCg" type="_4QXTcRwOEe-urICxG0GjCg" direction="return"/>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_4QYhkBwOEe-urICxG0GjCg" name="PropostaRitirata">
                <generalization xmi:id="_4TF3WBwOEe-urICxG0GjCg" general="_4QUQIhwOEe-urICxG0GjCg"/>
                <ownedAttribute xmi:id="_4TtiYhwOEe-urICxG0GjCg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_4TtiYxwOEe-urICxG0GjCg" value="1L"/>
                </ownedAttribute>
                <interfaceRealization xmi:id="_4TYyQhwOEe-urICxG0GjCg" client="_4QYhkBwOEe-urICxG0GjCg" supplier="_4Ss1wBwOEe-urICxG0GjCg" contract="_4Ss1wBwOEe-urICxG0GjCg"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4T4hgRwOEe-urICxG0GjCg" name="PropostaRitirata" specification="_4TF3UBwOEe-urICxG0GjCg">
                  <ownedParameter xmi:id="_4T4hghwOEe-urICxG0GjCg" name="richiesta" type="_4QIC4BwOEe-urICxG0GjCg"/>
                  <ownedParameter xmi:id="_4T4hgxwOEe-urICxG0GjCg" name="offerta" type="_4QIC4BwOEe-urICxG0GjCg"/>
                  <ownedParameter xmi:id="_4T4hhBwOEe-urICxG0GjCg" name="ID">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_4T4hhRwOEe-urICxG0GjCg" name="fruitore" type="_4P7OkBwOEe-urICxG0GjCg"/>
                  <ownedParameter xmi:id="_4T4hhhwOEe-urICxG0GjCg" type="_4QYhkBwOEe-urICxG0GjCg" direction="return"/>
                  <language>java</language>
                  <body>super(richiesta, offerta, ID,fruitore);
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4T4hhxwOEe-urICxG0GjCg" name="setStatus" specification="_4QYhkRwOEe-urICxG0GjCg">
                  <language>java</language>
                  <body>this.status = &quot;Ritirata&quot;;
		
	</body>
                </ownedBehavior>
                <ownedOperation xmi:id="_4QYhkRwOEe-urICxG0GjCg" name="setStatus" method="_4T4hhxwOEe-urICxG0GjCg"/>
                <ownedOperation xmi:id="_4TF3UBwOEe-urICxG0GjCg" name="PropostaRitirata" method="_4T4hgRwOEe-urICxG0GjCg">
                  <eAnnotations xmi:id="_4TF3VRwOEe-urICxG0GjCg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_4TF3VhwOEe-urICxG0GjCg" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_4TF3URwOEe-urICxG0GjCg" name="richiesta" type="_4QIC4BwOEe-urICxG0GjCg"/>
                  <ownedParameter xmi:id="_4TF3UhwOEe-urICxG0GjCg" name="offerta" type="_4QIC4BwOEe-urICxG0GjCg"/>
                  <ownedParameter xmi:id="_4TF3UxwOEe-urICxG0GjCg" name="ID">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_4TF3VBwOEe-urICxG0GjCg" name="fruitore" type="_4P7OkBwOEe-urICxG0GjCg"/>
                  <ownedParameter xmi:id="_4TF3VxwOEe-urICxG0GjCg" type="_4QYhkBwOEe-urICxG0GjCg" direction="return"/>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_4UFV0RwOEe-urICxG0GjCg" name="" memberEnd="_4UFV0hwOEe-urICxG0GjCg _4TqfFBwOEe-urICxG0GjCg">
                <ownedEnd xmi:id="_4UFV0hwOEe-urICxG0GjCg" name="" type="_4QM7YBwOEe-urICxG0GjCg" association="_4UFV0RwOEe-urICxG0GjCg"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_4UFV1BwOEe-urICxG0GjCg" name="" memberEnd="_4UFV1RwOEe-urICxG0GjCg _4TrGIBwOEe-urICxG0GjCg">
                <ownedEnd xmi:id="_4UFV1RwOEe-urICxG0GjCg" name="" type="_4QM7YBwOEe-urICxG0GjCg" association="_4UFV1BwOEe-urICxG0GjCg"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_4UFV1xwOEe-urICxG0GjCg" name="" memberEnd="_4UFV2BwOEe-urICxG0GjCg _4TrGIhwOEe-urICxG0GjCg">
                <ownedEnd xmi:id="_4UFV2BwOEe-urICxG0GjCg" name="" type="_4QM7YBwOEe-urICxG0GjCg" association="_4UFV1xwOEe-urICxG0GjCg"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_4UF84BwOEe-urICxG0GjCg" name="" memberEnd="_4UF84RwOEe-urICxG0GjCg _4TrGJBwOEe-urICxG0GjCg">
                <ownedEnd xmi:id="_4UF84RwOEe-urICxG0GjCg" name="" type="_4QM7YBwOEe-urICxG0GjCg" association="_4UF84BwOEe-urICxG0GjCg"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_4UF84xwOEe-urICxG0GjCg" name="" memberEnd="_4UF85BwOEe-urICxG0GjCg _4TrtMBwOEe-urICxG0GjCg">
                <ownedEnd xmi:id="_4UF85BwOEe-urICxG0GjCg" name="" type="_4QRz4BwOEe-urICxG0GjCg" association="_4UF84xwOEe-urICxG0GjCg"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_4UF85hwOEe-urICxG0GjCg" name="" memberEnd="_4UF85xwOEe-urICxG0GjCg _4TrtMRwOEe-urICxG0GjCg">
                <ownedEnd xmi:id="_4UF85xwOEe-urICxG0GjCg" name="" type="_4QRz4BwOEe-urICxG0GjCg" association="_4UF85hwOEe-urICxG0GjCg"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_4UF86RwOEe-urICxG0GjCg" name="" memberEnd="_4UF86hwOEe-urICxG0GjCg _4TrtMxwOEe-urICxG0GjCg">
                <ownedEnd xmi:id="_4UF86hwOEe-urICxG0GjCg" name="" type="_4QTCABwOEe-urICxG0GjCg" association="_4UF86RwOEe-urICxG0GjCg"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_4UGj8RwOEe-urICxG0GjCg" name="" memberEnd="_4UGj8hwOEe-urICxG0GjCg _4TsUQhwOEe-urICxG0GjCg">
                <ownedEnd xmi:id="_4UGj8hwOEe-urICxG0GjCg" name="" type="_4QTpEBwOEe-urICxG0GjCg" association="_4UGj8RwOEe-urICxG0GjCg"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_4UGj9BwOEe-urICxG0GjCg" name="" memberEnd="_4UGj9RwOEe-urICxG0GjCg _4TsURhwOEe-urICxG0GjCg">
                <ownedEnd xmi:id="_4UGj9RwOEe-urICxG0GjCg" name="" type="_4QUQIhwOEe-urICxG0GjCg" association="_4UGj9BwOEe-urICxG0GjCg"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_4UGj9xwOEe-urICxG0GjCg" name="" memberEnd="_4UGj-BwOEe-urICxG0GjCg _4TsUSBwOEe-urICxG0GjCg">
                <ownedEnd xmi:id="_4UGj-BwOEe-urICxG0GjCg" name="" type="_4QUQIhwOEe-urICxG0GjCg" association="_4UGj9xwOEe-urICxG0GjCg"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_4UHLARwOEe-urICxG0GjCg" name="" memberEnd="_4UHLAhwOEe-urICxG0GjCg _4Ts7UxwOEe-urICxG0GjCg">
                <ownedEnd xmi:id="_4UHLAhwOEe-urICxG0GjCg" name="" type="_4QUQIhwOEe-urICxG0GjCg" association="_4UHLARwOEe-urICxG0GjCg"/>
              </packagedElement>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_4PvBVBwOEe-urICxG0GjCg" name="Albero">
              <ownedComment xmi:id="_fX6S4C13Ee-8Nr2H9gftQA">
                <body>Questa classe rappresenta un albero gerarchico utilizzato per la gestione delle notizie.
Ogni albero ha una radice, foglie e un utente associato.

Autore: Daniele Martinelli
Autore: Federico Sabbadini</body>
              </ownedComment>
              <ownedAttribute xmi:id="_4TeR1hwOEe-urICxG0GjCg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_4TeR1xwOEe-urICxG0GjCg" value="1L"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_4TeR2BwOEe-urICxG0GjCg" name="radice" type="_4QDKZBwOEe-urICxG0GjCg" isReadOnly="true" association="_4UAdVBwOEe-urICxG0GjCg"/>
              <ownedAttribute xmi:id="_4Te44BwOEe-urICxG0GjCg" name="foglie" type="_4Ss1whwOEe-urICxG0GjCg" isReadOnly="true" association="_4UAdVxwOEe-urICxG0GjCg"/>
              <ownedAttribute xmi:id="_4Te44hwOEe-urICxG0GjCg" name="utente" type="_4QJ4ExwOEe-urICxG0GjCg" association="_4T6WsBwOEe-urICxG0GjCg"/>
              <interfaceRealization xmi:id="_4TKv0BwOEe-urICxG0GjCg" client="_4PvBVBwOEe-urICxG0GjCg" supplier="_4Ss1wBwOEe-urICxG0GjCg" contract="_4Ss1wBwOEe-urICxG0GjCg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4Tv-oBwOEe-urICxG0GjCg" name="Albero" specification="_4SuD4BwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4Tv-oRwOEe-urICxG0GjCg" name="radice" type="_4QDKZBwOEe-urICxG0GjCg"/>
                <ownedParameter xmi:id="_4Tv-ohwOEe-urICxG0GjCg" type="_4PvBVBwOEe-urICxG0GjCg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>if (radice.root()!=null) throw new RootTreeException();
     this.foglie = new ArrayList&lt;Nodo>();
     this.radice = radice;
     addFoglie(radice);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4Tv-oxwOEe-urICxG0GjCg" name="addFoglie" specification="_4Suq8BwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4Tv-pBwOEe-urICxG0GjCg" name="albero" type="_4QDKZBwOEe-urICxG0GjCg"/>
                <language>java</language>
                <body>if (albero.isLeaf()) 
         foglie.add(albero);
     else {
         for (Nodo child : albero.getChildren()) {
             addFoglie(child);
         }
     }
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4Tv-pRwOEe-urICxG0GjCg" name="toString" specification="_4PvoYBwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4Tv-phwOEe-urICxG0GjCg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>StringBuffer bf = new StringBuffer();
     iterative(bf, this.radice, 1);
     return bf.toString();
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4Tv-pxwOEe-urICxG0GjCg" name="iterative" specification="_4TLW4xwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4Tv-qBwOEe-urICxG0GjCg" name="bf" type="_4TLW4RwOEe-urICxG0GjCg"/>
                <ownedParameter xmi:id="_4Tv-qRwOEe-urICxG0GjCg" name="nodo" type="_4QDKZBwOEe-urICxG0GjCg"/>
                <ownedParameter xmi:id="_4Tv-qhwOEe-urICxG0GjCg" name="depth">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>String asterischi = &quot;*&quot;.repeat(depth); // Genera una stringa di asterischi in base al grado di &quot;figlio di&quot;
     String blank = &quot; &quot;.repeat(depth + 1);
     if (nodo.isLeaf()) {
         bf.append(asterischi + &quot; &quot; + nodo.getNome());
     } else {
         bf.append(asterischi + nodo.toString(blank));
         for (Nodo nodoChild : nodo.getChildren()) {
             bf.append(&quot;\n&quot;);
             iterative(bf, nodoChild, depth + 1);
         }
     }
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_4PvoYBwOEe-urICxG0GjCg" name="toString" method="_4Tv-pRwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4PvoYRwOEe-urICxG0GjCg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_4SuD4BwOEe-urICxG0GjCg" name="Albero" method="_4Tv-oBwOEe-urICxG0GjCg" raisedException="_fXZVgC13Ee-8Nr2H9gftQA">
                <eAnnotations xmi:id="_4SuD4hwOEe-urICxG0GjCg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_4SuD4xwOEe-urICxG0GjCg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_4SuD4RwOEe-urICxG0GjCg" name="radice" type="_4QDKZBwOEe-urICxG0GjCg"/>
                <ownedParameter xmi:id="_4SuD5BwOEe-urICxG0GjCg" type="_4PvBVBwOEe-urICxG0GjCg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_4Suq8BwOEe-urICxG0GjCg" name="addFoglie" visibility="private" method="_4Tv-oxwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4Suq8RwOEe-urICxG0GjCg" name="albero" type="_4QDKZBwOEe-urICxG0GjCg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_4TLW4xwOEe-urICxG0GjCg" name="iterative" visibility="private" isStatic="true" method="_4Tv-pxwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4TLW5BwOEe-urICxG0GjCg" name="bf" type="_4TLW4RwOEe-urICxG0GjCg"/>
                <ownedParameter xmi:id="_4TLW5RwOEe-urICxG0GjCg" name="nodo" type="_4QDKZBwOEe-urICxG0GjCg"/>
                <ownedParameter xmi:id="_4TLW5hwOEe-urICxG0GjCg" name="depth">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_4PwPcBwOEe-urICxG0GjCg" name="Application">
              <ownedComment xmi:id="_fX8IFS13Ee-8Nr2H9gftQA">
                <body>Questa classe contiene i metodi statici 
necessari all'esecuzione del sistema

@author Daniele Martinelli
@author Federico Sabbadini</body>
              </ownedComment>
              <ownedAttribute xmi:id="_4Te44xwOEe-urICxG0GjCg" name="NUM_MAX_TENTATIVI" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_4Te45BwOEe-urICxG0GjCg" value="3"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4Tv-rxwOEe-urICxG0GjCg" name="navigaGerarchia" specification="_4SvSBBwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4Tv-sBwOEe-urICxG0GjCg" name="gerarchia" type="_4P_gABwOEe-urICxG0GjCg"/>
                <language>java</language>
                <body>String ger = gerarchia.toStringRadici();
     System.out.println(ger + &quot;\n&quot;);
     
     String nomeRadice = InputDati.leggiStringaNonVuota(&quot;Scegli radice -> &quot;);
     Nodo radice = gerarchia.visualizzaRadice(nomeRadice);
     System.out.println(radice.toNavigationString() + &quot;\n&quot;);
     Nodo child;
             
     do {
         int valoreDominio = InputDati.leggiIntero(&quot;Scegli l'opzione -> &quot;);    
         child = radice.getChildren().get(valoreDominio-1);
         radice = child;
         System.out.println(child.toNavigationString()+ &quot;\n&quot;);
     } while (!child.isLeaf());
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4Tv-sRwOEe-urICxG0GjCg" name="registrazioneC" specification="_4SvSBhwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4Tv-shwOEe-urICxG0GjCg" name="utenza" type="_4QLGMBwOEe-urICxG0GjCg"/>
                <language>java</language>
                <body>Configuratore configuratore = new Configuratore();
	    String id = configuratore.getID();
	    String psswd = configuratore.getPassword();
	    System.out.println(&quot;ID di default: &quot; + id);
	    System.out.println(&quot;Password di default: &quot; + psswd);
	    
	    configuratore.setCredenziali(new Credenziali(id, psswd));
	    configuratore.setIsDefinitivo(false);
	    utenza.addUtente(configuratore);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4Tv-sxwOEe-urICxG0GjCg" name="registrazioneF" specification="_4SvSCBwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4Tv-tBwOEe-urICxG0GjCg" name="utenza" type="_4QLGMBwOEe-urICxG0GjCg"/>
                <ownedParameter xmi:id="_4Tv-tRwOEe-urICxG0GjCg" name="geografia" type="_4P9q0BwOEe-urICxG0GjCg"/>
                <language>java</language>
                <body>String c;
		do {
			c = InputDati.leggiStringaNonVuota(&quot;  Comprensorio: &quot;);
		} while (!geografia.verificaEsistenzaComprensorio(c));
		
	    Credenziali credenziali = primoAccesso(utenza);
	    String indirizzo;
	    do {
	    	indirizzo = InputDati.leggiStringaNonVuota(&quot;  Indirizzo e-mail: &quot;);
		} while (!Fruitore.isValidEmail(indirizzo));
	    
	    Comprensorio comprensorio = geografia.cercaComprensorio(c);

	    Fruitore fruitore = new Fruitore(comprensorio, credenziali, indirizzo);
	    utenza.addUtente(fruitore);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4Tv-thwOEe-urICxG0GjCg" name="primoAccesso" specification="_4Sv5EBwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4Tv-txwOEe-urICxG0GjCg" name="utenza" type="_4QLGMBwOEe-urICxG0GjCg"/>
                <ownedParameter xmi:id="_4Tv-uBwOEe-urICxG0GjCg" type="_4P1vABwOEe-urICxG0GjCg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>String ID;
	    do {
	        ID = InputDati.leggiStringaNonVuota(&quot;  ID: &quot;);
	        if (utenza.verificaEsistenzaID(ID)) System.out.println(&quot; ! ID già utilizzato ! &quot;);
	    } while (utenza.verificaEsistenzaID(ID));

	    String PSSW = InputDati.leggiStringaNonVuota(&quot;  Password: &quot;);
	    return new Credenziali(ID, PSSW);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4Tv-uRwOEe-urICxG0GjCg" name="login" specification="_4Sv5ExwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4Tv-uhwOEe-urICxG0GjCg" name="utenza" type="_4QLGMBwOEe-urICxG0GjCg"/>
                <ownedParameter xmi:id="_4Tv-uxwOEe-urICxG0GjCg" name="type">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
                </ownedParameter>
                <ownedParameter xmi:id="_4Tv-vBwOEe-urICxG0GjCg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>int accesso = 2;
	    for (int i = 0; i &lt; NUM_MAX_TENTATIVI; i++) {
	        System.out.println(&quot;Inserisci dati di login: &quot;);
	        String ID = InputDati.leggiStringaNonVuota(&quot;  ID: &quot;);
	        String PSSW = InputDati.leggiStringaNonVuota(&quot;  Password: &quot;);
	        accesso = autenticazione(utenza, ID, PSSW, type);
	        if (accesso != 1) 
	            break;	        
	    }
	    return accesso;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4Tv-vRwOEe-urICxG0GjCg" name="autenticazione" specification="_4Sv5FxwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4Tv-vhwOEe-urICxG0GjCg" name="utenza" type="_4QLGMBwOEe-urICxG0GjCg"/>
                <ownedParameter xmi:id="_4Tv-vxwOEe-urICxG0GjCg" name="ID">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_4Tv-wBwOEe-urICxG0GjCg" name="PSSW">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_4Tv-wRwOEe-urICxG0GjCg" name="type">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
                </ownedParameter>
                <ownedParameter xmi:id="_4Tv-whwOEe-urICxG0GjCg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>Utente utenteDiSessione;
		if (type == Configuratore.TIPOUTENTE) {
			utenteDiSessione = utenza.autenticazioneConfiguratore(ID, PSSW);
		} else {
			utenteDiSessione = utenza.autenticazioneFruitore(ID, PSSW);
		}
		
		utenza.setUtenteDiSessione(utenteDiSessione);
	    if (utenteDiSessione == null) {
	    	if (type == Configuratore.TIPOUTENTE)
	    		System.out.println(&quot; ! Non esiste alcun configuratore con queste credenziali !&quot;);
	    	else
	    		System.out.println(&quot; ! Non esiste alcun fruitore con queste credenziali !&quot;);
	        return 1;
	    } else if (!utenteDiSessione.IsDefinitivo() &amp;&amp; type == Configuratore.TIPOUTENTE) {
	    	System.out.println(&quot;Scegli nuove credenziali: &quot;);
	        Credenziali credenzialiRegistrazione = primoAccesso(utenza);
	        utenteDiSessione.setCredenziali(credenzialiRegistrazione);
	        utenteDiSessione.setIsDefinitivo(true);
	        return 2;
	    } else {
	        System.out.println(&quot;-> Utente riconosciuto&quot;);
	        return 2;
	    }
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4Tv-wxwOEe-urICxG0GjCg" name="creaComprensorio" specification="_4SwgIBwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4Tv-xBwOEe-urICxG0GjCg" name="geografia" type="_4P9q0BwOEe-urICxG0GjCg"/>
                <language>java</language>
                <body>String nome;
		do {
			nome = InputDati.leggiStringaNonVuota(&quot;Nome: &quot;);
		} while (geografia.verificaEsistenzaComprensorio(nome));
		
	    Comprensorio comprensorio = new Comprensorio(nome);
	    System.out.println(&quot;Inserisci comprensorio (Exit per uscire) &quot;);
	    String comune;

	    do {
	        comune = InputDati.leggiStringaNonVuota(&quot;  comune -> &quot;);
	        comprensorio.addComune(comune);
	    } while (!comune.equalsIgnoreCase(&quot;Exit&quot;));

	    int size = comprensorio.getComprensorio().size();
	    comprensorio.getComprensorio().remove(size - 1);

	    geografia.addComprensorio(comprensorio);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4Tv-xRwOEe-urICxG0GjCg" name="creaRadice" specification="_4SwgIhwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4Tv-xhwOEe-urICxG0GjCg" name="gerarchia" type="_4P_gABwOEe-urICxG0GjCg"/>
                <ownedParameter xmi:id="_4Tv-xxwOEe-urICxG0GjCg" type="_4QDKZBwOEe-urICxG0GjCg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>String radice;
	    do {
	        radice = InputDati.leggiStringaNonVuota(&quot;Nome radice -> &quot;);
	    } while (gerarchia.verificaEsistenzaNomeRadice(radice));

	    String campo = InputDati.leggiStringaNonVuota(&quot;Campo -> &quot;);
	    Nodo root = new Nodo(radice, null, campo);

	    creaValoriDominio(root);

	    return root;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4TwlsBwOEe-urICxG0GjCg" name="creaValoriDominio" specification="_4SwgJRwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4TwlsRwOEe-urICxG0GjCg" name="nodo" type="_4QDKZBwOEe-urICxG0GjCg"/>
                <language>java</language>
                <body>int num = 0;
	    do {
	        num++;
	        String valoreDominio = InputDati.leggiStringaNonVuota(num + &quot;' valore del dominio -> &quot;);
	        if (InputDati.yesOrNo(&quot;  Vuoi inserire una descrizione di &quot; + valoreDominio + &quot;? &quot;)) {
	            String descrizioneDominio = InputDati.leggiStringaNonVuota(&quot;Descrizione -> &quot;);
	            nodo.addElementiDominio(valoreDominio, descrizioneDominio);
	        } else {
	            nodo.addElementiDominio(valoreDominio);
	        }
	    } while (InputDati.yesOrNo(&quot;Vuoi aggiugere un altro elemento al dominio? &quot;));
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4TwlshwOEe-urICxG0GjCg" name="creaNodiFiglio" specification="_4TL98BwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4TwlsxwOEe-urICxG0GjCg" name="nodoParent" type="_4QDKZBwOEe-urICxG0GjCg"/>
                <ownedParameter xmi:id="_4TwltBwOEe-urICxG0GjCg" name="gerarchia" type="_4P_gABwOEe-urICxG0GjCg"/>
                <ownedParameter xmi:id="_4TwltRwOEe-urICxG0GjCg" name="radice" type="_4QDKZBwOEe-urICxG0GjCg"/>
                <ownedParameter xmi:id="_4TwlthwOEe-urICxG0GjCg" name="foglieAttuali" type="_4Ss1whwOEe-urICxG0GjCg"/>
                <language>java</language>
                <body>int numFigli = 0;
	    do {
	        numFigli++;
	        System.out.println(&quot;\n&quot; + numFigli + &quot;' figlio (di &quot; + nodoParent.getNome() 
	        + &quot; [&quot; +nodoParent.getDominio(numFigli)+ &quot;]): &quot;);
   
	        String nome;
	        do {
	            nome = InputDati.leggiStringaNonVuota(&quot;Nome -> &quot;);
	        } while (radice.verificaEsistenzaNome(nome));

	        boolean isFoglia = InputDati.yesOrNo(&quot;È foglia? &quot;);
	        Nodo nodoChild;
	        if (isFoglia) {
	            nodoChild = new Nodo(nome, radice.getNome());
	            foglieAttuali.add(nodoChild);
	        } else {
	            nodoChild = creaNonFoglia(nome, radice);
	        }

	        try {
	            nodoParent.addChild(nodoChild);
	        } catch (Exception e) {
	            e.getMessage();
	        }
	    } while (numFigli &lt; nodoParent.getDominio().size());

	    for (Nodo nodo : nodoParent.getChildren()) {
	        if (!nodo.isLeaf()) {
	            creaNodiFiglio(nodo, gerarchia, radice, foglieAttuali);
	        }
	    }
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4TwltxwOEe-urICxG0GjCg" name="creaNonFoglia" specification="_4SwgJxwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4TwluBwOEe-urICxG0GjCg" name="nome">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_4TwluRwOEe-urICxG0GjCg" name="radice" type="_4QDKZBwOEe-urICxG0GjCg"/>
                <ownedParameter xmi:id="_4TwluhwOEe-urICxG0GjCg" type="_4QDKZBwOEe-urICxG0GjCg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>String campo = InputDati.leggiStringaNonVuota(&quot;Campo -> &quot;);
	    Nodo nodoChild = new Nodo(nome, radice.getNome(), campo);

	    creaValoriDominio(nodoChild);

	    return nodoChild;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4TwluxwOEe-urICxG0GjCg" name="creaFattoriConversione" specification="_4TMlABwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4TwlvBwOEe-urICxG0GjCg" name="gerarchia" type="_4P_gABwOEe-urICxG0GjCg"/>
                <ownedParameter xmi:id="_4TwlvRwOEe-urICxG0GjCg" name="foglieAttuali" type="_4Ss1whwOEe-urICxG0GjCg"/>
                <language>java</language>
                <body>System.out.println(&quot;\nInserimento fattori di conversione:&quot;);
     do {
         Nodo nodo1 = chiediFoglia(&quot;Foglia 1:&quot;, gerarchia);
         Nodo nodo2 = chiediFoglia(&quot;Foglia 2:&quot;, gerarchia);

         double fattoreDiConversione = chiediFattoreConversione(gerarchia);

         boolean condizione = !foglieAttuali.contains(nodo1)
                 &amp;&amp; !foglieAttuali.contains(nodo2);
         if (!condizione) {
             nodo1.addFattoreConversione(nodo2, fattoreDiConversione);
             nodo2.addFattoreConversione(nodo1, 1/fattoreDiConversione);
         }
     } while (InputDati.yesOrNo(&quot;Vuoi continuare l'inserimento? &quot;));

     Nodo.addTransitivoFattoreConversione(gerarchia);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4TwlvhwOEe-urICxG0GjCg" name="chiediFoglia" specification="_4SwgKxwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4TwlvxwOEe-urICxG0GjCg" name="messaggio">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_4TwlwBwOEe-urICxG0GjCg" name="gerarchia" type="_4P_gABwOEe-urICxG0GjCg"/>
                <ownedParameter xmi:id="_4TwlwRwOEe-urICxG0GjCg" type="_4QDKZBwOEe-urICxG0GjCg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>Nodo nodo;
	    do {
	        System.out.println(messaggio);
	        String foglia = InputDati.leggiStringaNonVuota(&quot;  Nome -> &quot;);
	        String radice = InputDati.leggiStringaNonVuota(&quot;  Radice -> &quot;);
	        nodo = gerarchia.visualizzaFoglia(foglia, radice);
	    } while (nodo == null );
	    return nodo;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4TwlwhwOEe-urICxG0GjCg" name="chiediFattoreConversione" specification="_4SxHMhwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4TwlwxwOEe-urICxG0GjCg" name="gerarchia" type="_4P_gABwOEe-urICxG0GjCg"/>
                <ownedParameter xmi:id="_4TwlxBwOEe-urICxG0GjCg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <language>java</language>
                <body>double fattoreDiConversione;
	    do {
	        fattoreDiConversione = InputDati.leggiDouble(&quot;Fattore di conversione -> &quot;);
	    } while (!Nodo.verificaFattoreConversione(fattoreDiConversione));
	    return fattoreDiConversione;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4TwlxRwOEe-urICxG0GjCg" name="stampaFattori" specification="_4SxHNRwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4TwlxhwOEe-urICxG0GjCg" name="gerarchia" type="_4P_gABwOEe-urICxG0GjCg"/>
                <language>java</language>
                <body>String foglia = InputDati.leggiStringaNonVuota(&quot;Inserisci nome foglia: &quot;);
	    String radice = InputDati.leggiStringaNonVuota(&quot;Inserisci radice della gerarchia della foglia: &quot;);
	    Nodo nodo = gerarchia.visualizzaFoglia(foglia, radice);
	    if (nodo == null)
	        System.out.println(&quot;  Non è stata trovata nessuna corrispondenza&quot;);
	    else
	        System.out.println(nodo.toStringFactors());
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_fX5Ewy13Ee-8Nr2H9gftQA" name="proponiScambio" specification="_fXpNIC13Ee-8Nr2H9gftQA">
                <ownedParameter xmi:id="_fX5ExC13Ee-8Nr2H9gftQA" name="utenza" type="_4QLGMBwOEe-urICxG0GjCg"/>
                <ownedParameter xmi:id="_fX5ExS13Ee-8Nr2H9gftQA" name="gerarchia" type="_4P_gABwOEe-urICxG0GjCg"/>
                <ownedParameter xmi:id="_fX5Exi13Ee-8Nr2H9gftQA" name="commercio" type="_fXliwC13Ee-8Nr2H9gftQA"/>
                <language>java</language>
                <body>String nomePrestazione;
     String nomeRadicePrestazione;
     Nodo fogliaRichiesta;
     InsiemeAperto insiemeAperto = commercio.getInsiemeApertoDiSessione();
     do {
         nomePrestazione = InputDati.leggiStringaNonVuota(&quot;Inserisci richiesta [foglia di appartenenza] -> &quot;);
         nomeRadicePrestazione = InputDati.leggiStringaNonVuota(&quot;Inserisci radice -> &quot;);    
         fogliaRichiesta = gerarchia.visualizzaFoglia(nomePrestazione, nomeRadicePrestazione);
     } while (fogliaRichiesta == null);
     
     int durata = InputDati.leggiInteroPositivo(&quot;Inserisci durata -> &quot;);
     
     Nodo fogliaOfferta;
     do {
         nomePrestazione = InputDati.leggiStringaNonVuota(&quot;Inserisci offerta [foglia di appartenenza] -> &quot;);
         nomeRadicePrestazione = InputDati.leggiStringaNonVuota(&quot;Inserisci radice -> &quot;);    
         fogliaOfferta = gerarchia.visualizzaFoglia(nomePrestazione, nomeRadicePrestazione);
     } while (fogliaOfferta == null);
     
     PrestazioneOpera offerta = new PrestazioneOpera(fogliaOfferta);
     PrestazioneOpera richiesta = new PrestazioneOpera(fogliaRichiesta, durata);
     Fruitore fruitore = (Fruitore) utenza.getUtenteDiSessione();
     PropostaAperta proposta = new PropostaAperta(richiesta, offerta, commercio.numProposte(),fruitore);
    
     System.out.println(&quot;\nOfferta: &quot;);
     System.out.println(&quot;[&quot; + offerta.getNome() + &quot;, &quot;+ offerta.getDurata() + &quot; ore]&quot;);
     
     if (InputDati.yesOrNo(&quot;Confermi l'offerta?&quot;)) {
         fruitore.addProposte(proposta);
         insiemeAperto.addPropostaAperta(proposta);
			commercio.cercaProposteChiudibili(insiemeAperto);            
     } else {
			commercio.decrementaNumProposte();
		}

 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_fX5Exy13Ee-8Nr2H9gftQA" name="visualizzaProposte" specification="_fXp0My13Ee-8Nr2H9gftQA">
                <ownedParameter xmi:id="_fX5EyC13Ee-8Nr2H9gftQA" name="commercio" type="_fXliwC13Ee-8Nr2H9gftQA"/>
                <language>java</language>
                <body>System.out.println();
		String proposteA =commercio.visualizzaProposteAperte();
		String proposteC =commercio.visualizzaProposteChiuse();
		String proposteR =commercio.visualizzaProposteRitirate();
		if (!proposteA.isBlank()) {
			System.out.println(&quot;Proposte Aperte: \n{&quot; + proposteA + &quot;}\n&quot;);
		}
		if (!proposteC.isBlank()) {
			System.out.println(&quot;\nProposte Chiuse: \n{&quot; + proposteC + &quot;}\n&quot;);
		}
		if (!proposteR.isBlank()) {
			System.out.println( &quot;\nProposte Ritirate: \n{&quot; + proposteR + &quot;}&quot;);
		}

	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_fX5r0C13Ee-8Nr2H9gftQA" name="visualizzaProposteFoglia" specification="_fXp0NS13Ee-8Nr2H9gftQA">
                <ownedParameter xmi:id="_fX5r0S13Ee-8Nr2H9gftQA" name="commercio" type="_fXliwC13Ee-8Nr2H9gftQA"/>
                <ownedParameter xmi:id="_fX5r0i13Ee-8Nr2H9gftQA" name="gerarchia" type="_4P_gABwOEe-urICxG0GjCg"/>
                <language>java</language>
                <body>Nodo foglia = chiediFoglia(&quot;Foglia: &quot;, gerarchia);
		String proposteA =commercio.visualizzaProposteAperte(foglia);
		String proposteC =commercio.visualizzaProposteChiuse(foglia);
		String proposteR =commercio.visualizzaProposteRitirate(foglia);
		
		System.out.println();
		if (!proposteA.isBlank()) {
			System.out.println(&quot;Proposte Aperte: \n{&quot; + proposteA + &quot;}\n&quot;);
		}
		if (!proposteC.isBlank()) {
			System.out.println(&quot;\nProposte Chiuse: \n{&quot; + proposteC + &quot;}\n&quot;);
		}
		if (!proposteR.isBlank()) {
			System.out.println(&quot;\nProposte Ritirate: \n{&quot; + proposteR + &quot;}&quot;);
		}
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_fX5r0y13Ee-8Nr2H9gftQA" name="ritiraProposte" specification="_fXqbQS13Ee-8Nr2H9gftQA">
                <ownedParameter xmi:id="_fX5r1C13Ee-8Nr2H9gftQA" name="commercio" type="_fXliwC13Ee-8Nr2H9gftQA"/>
                <language>java</language>
                <body>String proposte = commercio.visualizzaProposteAperte();
		

		int s1;
		PropostaAperta proposta;
		System.out.println(&quot;Proposte da ritirare: \n\n&quot; + proposte);
		
		if (!proposte.isBlank() &amp;&amp; InputDati.yesOrNo(&quot;\nVuoi ritirare una proposta? \n&quot;) ) {
			do {
				 s1 = InputDati.leggiInteroNonNegativo(&quot;\nInserisci ID proposta: &quot;);
				 
			} while ((proposta = commercio.cercaProposta(s1)) == null);
			
			commercio.ritira(proposta);
		}
		else
			System.out.println(&quot;Non ci sono proposte (aperte) ritirabili&quot;);

	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_fX5r1S13Ee-8Nr2H9gftQA" name="visualizzaInsiemiChiusi" specification="_fXqbQy13Ee-8Nr2H9gftQA">
                <ownedParameter xmi:id="_fX5r1i13Ee-8Nr2H9gftQA" name="commercio" type="_fXliwC13Ee-8Nr2H9gftQA"/>
                <language>java</language>
                <body>String proposteC =commercio.visualizzaProposteChiuseCommercio();
		
		System.out.println();
		if (!proposteC.isBlank()) {
			System.out.println(&quot; Insiemi Chiusi: \n&quot; + proposteC);
		}
	
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_4SvSBBwOEe-urICxG0GjCg" name="navigaGerarchia" isStatic="true" method="_4Tv-rxwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4SvSBRwOEe-urICxG0GjCg" name="gerarchia" type="_4P_gABwOEe-urICxG0GjCg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_4SvSBhwOEe-urICxG0GjCg" name="registrazioneC" isStatic="true" method="_4Tv-sRwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4SvSBxwOEe-urICxG0GjCg" name="utenza" type="_4QLGMBwOEe-urICxG0GjCg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_4SvSCBwOEe-urICxG0GjCg" name="registrazioneF" isStatic="true" method="_4Tv-sxwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4SvSCRwOEe-urICxG0GjCg" name="utenza" type="_4QLGMBwOEe-urICxG0GjCg"/>
                <ownedParameter xmi:id="_4SvSChwOEe-urICxG0GjCg" name="geografia" type="_4P9q0BwOEe-urICxG0GjCg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_4Sv5EBwOEe-urICxG0GjCg" name="primoAccesso" visibility="private" isStatic="true" method="_4Tv-thwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4Sv5ERwOEe-urICxG0GjCg" name="utenza" type="_4QLGMBwOEe-urICxG0GjCg"/>
                <ownedParameter xmi:id="_4Sv5EhwOEe-urICxG0GjCg" type="_4P1vABwOEe-urICxG0GjCg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_4Sv5ExwOEe-urICxG0GjCg" name="login" isStatic="true" method="_4Tv-uRwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4Sv5FBwOEe-urICxG0GjCg" name="utenza" type="_4QLGMBwOEe-urICxG0GjCg"/>
                <ownedParameter xmi:id="_4Sv5FRwOEe-urICxG0GjCg" name="type">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
                </ownedParameter>
                <ownedParameter xmi:id="_4Sv5FhwOEe-urICxG0GjCg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_4Sv5FxwOEe-urICxG0GjCg" name="autenticazione" visibility="private" isStatic="true" method="_4Tv-vRwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4Sv5GBwOEe-urICxG0GjCg" name="utenza" type="_4QLGMBwOEe-urICxG0GjCg"/>
                <ownedParameter xmi:id="_4Sv5GRwOEe-urICxG0GjCg" name="ID">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_4Sv5GhwOEe-urICxG0GjCg" name="PSSW">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_4Sv5GxwOEe-urICxG0GjCg" name="type">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
                </ownedParameter>
                <ownedParameter xmi:id="_4Sv5HBwOEe-urICxG0GjCg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_4SwgIBwOEe-urICxG0GjCg" name="creaComprensorio" isStatic="true" method="_4Tv-wxwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4SwgIRwOEe-urICxG0GjCg" name="geografia" type="_4P9q0BwOEe-urICxG0GjCg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_4SwgIhwOEe-urICxG0GjCg" name="creaRadice" isStatic="true" method="_4Tv-xRwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4SwgIxwOEe-urICxG0GjCg" name="gerarchia" type="_4P_gABwOEe-urICxG0GjCg"/>
                <ownedParameter xmi:id="_4SwgJBwOEe-urICxG0GjCg" type="_4QDKZBwOEe-urICxG0GjCg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_4SwgJRwOEe-urICxG0GjCg" name="creaValoriDominio" visibility="private" isStatic="true" method="_4TwlsBwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4SwgJhwOEe-urICxG0GjCg" name="nodo" type="_4QDKZBwOEe-urICxG0GjCg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_4SwgJxwOEe-urICxG0GjCg" name="creaNonFoglia" visibility="private" isStatic="true" method="_4TwltxwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4SwgKBwOEe-urICxG0GjCg" name="nome">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_4SwgKRwOEe-urICxG0GjCg" name="radice" type="_4QDKZBwOEe-urICxG0GjCg"/>
                <ownedParameter xmi:id="_4SwgKhwOEe-urICxG0GjCg" type="_4QDKZBwOEe-urICxG0GjCg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_4SwgKxwOEe-urICxG0GjCg" name="chiediFoglia" visibility="private" isStatic="true" method="_4TwlvhwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4SwgLBwOEe-urICxG0GjCg" name="messaggio">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_4SxHMBwOEe-urICxG0GjCg" name="gerarchia" type="_4P_gABwOEe-urICxG0GjCg"/>
                <ownedParameter xmi:id="_4SxHMRwOEe-urICxG0GjCg" type="_4QDKZBwOEe-urICxG0GjCg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_4SxHMhwOEe-urICxG0GjCg" name="chiediFattoreConversione" visibility="private" isStatic="true" method="_4TwlwhwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4SxHMxwOEe-urICxG0GjCg" name="gerarchia" type="_4P_gABwOEe-urICxG0GjCg"/>
                <ownedParameter xmi:id="_4SxHNBwOEe-urICxG0GjCg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_4SxHNRwOEe-urICxG0GjCg" name="stampaFattori" isStatic="true" method="_4TwlxRwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4SxHNhwOEe-urICxG0GjCg" name="gerarchia" type="_4P_gABwOEe-urICxG0GjCg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_4TL98BwOEe-urICxG0GjCg" name="creaNodiFiglio" isStatic="true" method="_4TwlshwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4TL98RwOEe-urICxG0GjCg" name="nodoParent" type="_4QDKZBwOEe-urICxG0GjCg"/>
                <ownedParameter xmi:id="_4TL98hwOEe-urICxG0GjCg" name="gerarchia" type="_4P_gABwOEe-urICxG0GjCg"/>
                <ownedParameter xmi:id="_4TL98xwOEe-urICxG0GjCg" name="radice" type="_4QDKZBwOEe-urICxG0GjCg"/>
                <ownedParameter xmi:id="_4TL99BwOEe-urICxG0GjCg" name="foglieAttuali" type="_4Ss1whwOEe-urICxG0GjCg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_4TMlABwOEe-urICxG0GjCg" name="creaFattoriConversione" isStatic="true" method="_4TwluxwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4TMlARwOEe-urICxG0GjCg" name="gerarchia" type="_4P_gABwOEe-urICxG0GjCg"/>
                <ownedParameter xmi:id="_4TMlAhwOEe-urICxG0GjCg" name="foglieAttuali" type="_4Ss1whwOEe-urICxG0GjCg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_fXpNIC13Ee-8Nr2H9gftQA" name="proponiScambio" isStatic="true" method="_fX5Ewy13Ee-8Nr2H9gftQA" raisedException="_fXajoC13Ee-8Nr2H9gftQA">
                <ownedParameter xmi:id="_fXp0MC13Ee-8Nr2H9gftQA" name="utenza" type="_4QLGMBwOEe-urICxG0GjCg"/>
                <ownedParameter xmi:id="_fXp0MS13Ee-8Nr2H9gftQA" name="gerarchia" type="_4P_gABwOEe-urICxG0GjCg"/>
                <ownedParameter xmi:id="_fXp0Mi13Ee-8Nr2H9gftQA" name="commercio" type="_fXliwC13Ee-8Nr2H9gftQA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_fXp0My13Ee-8Nr2H9gftQA" name="visualizzaProposte" isStatic="true" method="_fX5Exy13Ee-8Nr2H9gftQA">
                <ownedParameter xmi:id="_fXp0NC13Ee-8Nr2H9gftQA" name="commercio" type="_fXliwC13Ee-8Nr2H9gftQA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_fXp0NS13Ee-8Nr2H9gftQA" name="visualizzaProposteFoglia" isStatic="true" method="_fX5r0C13Ee-8Nr2H9gftQA">
                <ownedParameter xmi:id="_fXp0Ni13Ee-8Nr2H9gftQA" name="commercio" type="_fXliwC13Ee-8Nr2H9gftQA"/>
                <ownedParameter xmi:id="_fXqbQC13Ee-8Nr2H9gftQA" name="gerarchia" type="_4P_gABwOEe-urICxG0GjCg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_fXqbQS13Ee-8Nr2H9gftQA" name="ritiraProposte" isStatic="true" method="_fX5r0y13Ee-8Nr2H9gftQA">
                <ownedParameter xmi:id="_fXqbQi13Ee-8Nr2H9gftQA" name="commercio" type="_fXliwC13Ee-8Nr2H9gftQA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_fXqbQy13Ee-8Nr2H9gftQA" name="visualizzaInsiemiChiusi" isStatic="true" method="_fX5r1S13Ee-8Nr2H9gftQA">
                <ownedParameter xmi:id="_fXrCUC13Ee-8Nr2H9gftQA" name="commercio" type="_fXliwC13Ee-8Nr2H9gftQA"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_4PzSwBwOEe-urICxG0GjCg" name="Comprensorio">
              <ownedComment xmi:id="_fX6S4S13Ee-8Nr2H9gftQA">
                <body>La classe Comprensorio rappresenta un insieme di comuni.
Gli oggetti di questa classe contengono una lista di comuni
all'interno di un determinato territorio.

Autore: Daniele Martinelli e Federico Sabbadini</body>
              </ownedComment>
              <ownedAttribute xmi:id="_4Tff8BwOEe-urICxG0GjCg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_4Tff8RwOEe-urICxG0GjCg" value="1L"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_4Tff8hwOEe-urICxG0GjCg" name="nome">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_4Tff8xwOEe-urICxG0GjCg" name="comprensorio" type="_4Ss1whwOEe-urICxG0GjCg" isReadOnly="true" association="_4UBEYRwOEe-urICxG0GjCg"/>
              <interfaceRealization xmi:id="_4TMlBBwOEe-urICxG0GjCg" client="_4PzSwBwOEe-urICxG0GjCg" supplier="_4Ss1wBwOEe-urICxG0GjCg" contract="_4Ss1wBwOEe-urICxG0GjCg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4TxMwBwOEe-urICxG0GjCg" name="Comprensorio" specification="_4PzSwRwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4TxMwRwOEe-urICxG0GjCg" name="nome">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_4TxMwhwOEe-urICxG0GjCg" type="_4PzSwBwOEe-urICxG0GjCg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>this.comprensorio = new ArrayList&lt;>();
     this.nome = nome;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4TxMwxwOEe-urICxG0GjCg" name="addComune" specification="_4Pz50BwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4TxMxBwOEe-urICxG0GjCg" name="luogo">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>this.comprensorio.add(luogo);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4TxMxRwOEe-urICxG0GjCg" name="toString" specification="_4Pz50hwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4TxMxhwOEe-urICxG0GjCg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>StringBuilder sb = new StringBuilder();
     sb.append(this.nome).append(&quot;\n&quot;);
     for (String comune : comprensorio) {
         sb.append(&quot; - &quot;).append(comune).append(&quot;\n&quot;);
     }
     return sb.toString();
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_4PzSwRwOEe-urICxG0GjCg" name="Comprensorio" method="_4TxMwBwOEe-urICxG0GjCg">
                <eAnnotations xmi:id="_4PzSwxwOEe-urICxG0GjCg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_4PzSxBwOEe-urICxG0GjCg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_4PzSwhwOEe-urICxG0GjCg" name="nome">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_4PzSxRwOEe-urICxG0GjCg" type="_4PzSwBwOEe-urICxG0GjCg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_4Pz50BwOEe-urICxG0GjCg" name="addComune" method="_4TxMwxwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4Pz50RwOEe-urICxG0GjCg" name="luogo">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_4Pz50hwOEe-urICxG0GjCg" name="toString" method="_4TxMxRwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4Pz50xwOEe-urICxG0GjCg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_4Pz51BwOEe-urICxG0GjCg" name="ConfLoginFailException">
              <ownedComment xmi:id="_4T6WtBwOEe-urICxG0GjCg">
                <body>Eccezione personalizzata per gestire il caso 
in cui un tentativo di login da parte di un configuratore 
fallisca a causa di credenziali errate.</body>
              </ownedComment>
              <generalization xmi:id="_4TNMEhwOEe-urICxG0GjCg" general="_4TNMEBwOEe-urICxG0GjCg"/>
              <ownedAttribute xmi:id="_4TgHABwOEe-urICxG0GjCg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_4TgHARwOEe-urICxG0GjCg" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4TxMxxwOEe-urICxG0GjCg" name="ConfLoginFailException" specification="_4P0g4BwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4TxMyBwOEe-urICxG0GjCg" type="_4Pz51BwOEe-urICxG0GjCg" direction="return"/>
                <language>java</language>
                <body>super(&quot;Credenziali di accesso del configuratore non valide!&quot;);
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_4P0g4BwOEe-urICxG0GjCg" name="ConfLoginFailException" method="_4TxMxxwOEe-urICxG0GjCg">
                <eAnnotations xmi:id="_4P0g4RwOEe-urICxG0GjCg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_4P0g4hwOEe-urICxG0GjCg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_4P0g4xwOEe-urICxG0GjCg" type="_4Pz51BwOEe-urICxG0GjCg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_4P0g5BwOEe-urICxG0GjCg" name="Configuratore">
              <ownedComment xmi:id="_epHTNi13Ee-8Nr2H9gftQA">
                <body>La classe Configuratore rappresenta un utente con privilegi di configurazione.
Estende la classe astratta Utente.

Autore: Daniele Martinelli e Federico Sabbadini</body>
              </ownedComment>
              <generalization xmi:id="_4SyVVRwOEe-urICxG0GjCg" general="_4QJ4ExwOEe-urICxG0GjCg"/>
              <ownedAttribute xmi:id="_4TgHAhwOEe-urICxG0GjCg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_4TgHAxwOEe-urICxG0GjCg" value="1L"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_4TgHBBwOEe-urICxG0GjCg" name="TIPOUTENTE" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_4TgHBRwOEe-urICxG0GjCg" value="'c'"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_4TNzIBwOEe-urICxG0GjCg" client="_4P0g5BwOEe-urICxG0GjCg" supplier="_4Ss1wBwOEe-urICxG0GjCg" contract="_4Ss1wBwOEe-urICxG0GjCg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4TxMyRwOEe-urICxG0GjCg" name="Configuratore" specification="_4SyVUBwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4TxMyhwOEe-urICxG0GjCg" name="credenziali" type="_4P1vABwOEe-urICxG0GjCg"/>
                <ownedParameter xmi:id="_4TxMyxwOEe-urICxG0GjCg" type="_4P0g5BwOEe-urICxG0GjCg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(TIPOUTENTE, credenziali);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4TxMzBwOEe-urICxG0GjCg" name="Configuratore" specification="_4P1H8BwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4TxMzRwOEe-urICxG0GjCg" type="_4P0g5BwOEe-urICxG0GjCg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(TIPOUTENTE, Credenziali.credenzialiPredefinite());
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4TxMzhwOEe-urICxG0GjCg" name="setIsDefinitivo" specification="_4P1H9BwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4TxMzxwOEe-urICxG0GjCg" name="x">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>this.credenziali.setDefinitive(x);
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_4P1H8BwOEe-urICxG0GjCg" name="Configuratore" method="_4TxMzBwOEe-urICxG0GjCg">
                <eAnnotations xmi:id="_4P1H8RwOEe-urICxG0GjCg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_4P1H8hwOEe-urICxG0GjCg" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_epH6QS13Ee-8Nr2H9gftQA">
                  <body>Costruttore della classe Configuratore.
     * Crea un nuovo configuratore con le credenziali predefinite.</body>
                </ownedComment>
                <ownedParameter xmi:id="_4P1H8xwOEe-urICxG0GjCg" type="_4P0g5BwOEe-urICxG0GjCg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_4P1H9BwOEe-urICxG0GjCg" name="setIsDefinitivo" method="_4TxMzhwOEe-urICxG0GjCg">
                <ownedComment xmi:id="_epH6Qi13Ee-8Nr2H9gftQA">
                  <body>Imposta la definitività delle credenziali.
     * Per un configuratore appena creato è false.
     * 
     * @param x La definitività da impostare.</body>
                </ownedComment>
                <ownedParameter xmi:id="_4P1H9RwOEe-urICxG0GjCg" name="x">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_4SyVUBwOEe-urICxG0GjCg" name="Configuratore" method="_4TxMyRwOEe-urICxG0GjCg">
                <eAnnotations xmi:id="_4SyVUhwOEe-urICxG0GjCg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_4SyVUxwOEe-urICxG0GjCg" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_epH6QC13Ee-8Nr2H9gftQA">
                  <body>Costruttore della classe Configuratore.
     * Crea un nuovo configuratore con le credenziali specificate.
     * 
     * @param credenziali Le credenziali associate al configuratore</body>
                </ownedComment>
                <ownedParameter xmi:id="_4SyVURwOEe-urICxG0GjCg" name="credenziali" type="_4P1vABwOEe-urICxG0GjCg"/>
                <ownedParameter xmi:id="_4SyVVBwOEe-urICxG0GjCg" type="_4P0g5BwOEe-urICxG0GjCg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_4P1vABwOEe-urICxG0GjCg" name="Credenziali">
              <ownedComment xmi:id="_epH6Qy13Ee-8Nr2H9gftQA">
                <body>La classe Credenziali rappresenta le credenziali di accesso di un utente.
Ogni credenziale è composta da un ID (identificativo dell'utente) e una password.
Inoltre, tiene traccia se le credenziali sono definitive o meno.
Se un utente si è appena registrato avrà delle credenziali 
non definitive fino alla loro modifica.

Autore: Daniele Martinelli e Federico Sabbadini</body>
              </ownedComment>
              <ownedAttribute xmi:id="_4TgHBhwOEe-urICxG0GjCg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_4TgHBxwOEe-urICxG0GjCg" value="1L"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_4TgHCBwOEe-urICxG0GjCg" name="IDLENTGH" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_4TgHCRwOEe-urICxG0GjCg" value="6"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_4TguEBwOEe-urICxG0GjCg" name="PSSWLENTGH" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_4TguERwOEe-urICxG0GjCg" value="8"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_4TguEhwOEe-urICxG0GjCg" name="IDCHAR" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_4TguExwOEe-urICxG0GjCg" value="&quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_4TguFBwOEe-urICxG0GjCg" name="PSSWCHAR" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_4TguFRwOEe-urICxG0GjCg" value="&quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!?@^&amp;%$£&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_4TguFhwOEe-urICxG0GjCg" name="ID">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_4TguFxwOEe-urICxG0GjCg" name="password">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_4TguGBwOEe-urICxG0GjCg" name="definitive">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_4TNzIRwOEe-urICxG0GjCg" client="_4P1vABwOEe-urICxG0GjCg" supplier="_4Ss1wBwOEe-urICxG0GjCg" contract="_4Ss1wBwOEe-urICxG0GjCg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4TxM0BwOEe-urICxG0GjCg" name="Credenziali" specification="_4P1vARwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4TxM0RwOEe-urICxG0GjCg" name="ID">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_4TxM0hwOEe-urICxG0GjCg" name="password">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_4TxM0xwOEe-urICxG0GjCg" type="_4P1vABwOEe-urICxG0GjCg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>this.ID = ID;
     this.password = password;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4TxM1BwOEe-urICxG0GjCg" name="credenzialiPredefinite" specification="_4P2WEBwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4TxM1RwOEe-urICxG0GjCg" type="_4P1vABwOEe-urICxG0GjCg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>// Genera un ID e una password casuali
     String userID = Estrattore.estraiString(IDCHAR, IDLENTGH);
     String userPSSW = Estrattore.estraiString(PSSWCHAR, PSSWLENTGH);
     return new Credenziali(userID.toString(), userPSSW.toString());
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_4P1vARwOEe-urICxG0GjCg" name="Credenziali" method="_4TxM0BwOEe-urICxG0GjCg">
                <eAnnotations xmi:id="_4P1vBBwOEe-urICxG0GjCg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_4P1vBRwOEe-urICxG0GjCg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_4P1vAhwOEe-urICxG0GjCg" name="ID">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_4P1vAxwOEe-urICxG0GjCg" name="password">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_4P1vBhwOEe-urICxG0GjCg" type="_4P1vABwOEe-urICxG0GjCg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_4P2WEBwOEe-urICxG0GjCg" name="credenzialiPredefinite" isStatic="true" method="_4TxM1BwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4Sy8YBwOEe-urICxG0GjCg" type="_4P1vABwOEe-urICxG0GjCg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_4P2WERwOEe-urICxG0GjCg" name="DefaultInitializer">
              <ownedComment xmi:id="_fX7hFi13Ee-8Nr2H9gftQA">
                <body>Classe per l'inizializzazione predefinita del sistema.

Autore: Daniele Martinelli e Federico Sabbadini</body>
              </ownedComment>
              <ownedAttribute xmi:id="_4ThVKRwOEe-urICxG0GjCg" name="DEFAULT_NAME_COMMUNITY_0" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_4ThVKhwOEe-urICxG0GjCg" value="&quot;Roma&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_4Th8PRwOEe-urICxG0GjCg" name="gerarchia" type="_4P_gABwOEe-urICxG0GjCg" isReadOnly="true" association="_4UBEZBwOEe-urICxG0GjCg"/>
              <ownedAttribute xmi:id="_4Th8PhwOEe-urICxG0GjCg" name="utenza" visibility="private" type="_4QLGMBwOEe-urICxG0GjCg" isReadOnly="true" association="_4UBEZxwOEe-urICxG0GjCg"/>
              <ownedAttribute xmi:id="_4TijQBwOEe-urICxG0GjCg" name="geografia" type="_4P9q0BwOEe-urICxG0GjCg" isReadOnly="true" association="_4UBrcRwOEe-urICxG0GjCg"/>
              <ownedAttribute xmi:id="_4TijQRwOEe-urICxG0GjCg" name="commercio" type="_fXliwC13Ee-8Nr2H9gftQA" isReadOnly="true" association="_4UBrdBwOEe-urICxG0GjCg"/>
              <ownedAttribute xmi:id="_fXuFoC13Ee-8Nr2H9gftQA" name="ROOT_NAME_0" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_fXuFoS13Ee-8Nr2H9gftQA" value="&quot;Lezioni di musica&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_fXuFoi13Ee-8Nr2H9gftQA" name="ROOT_FIELD_0" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_fXuFoy13Ee-8Nr2H9gftQA" value="&quot;Tipo&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_fXuFpC13Ee-8Nr2H9gftQA" name="ROOT_DOMAIN_0" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_fXuFpS13Ee-8Nr2H9gftQA" value="*"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_fXuFpy13Ee-8Nr2H9gftQA" value="{&quot;Teoria&quot;, &quot;Pratica&quot;}"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_fXussC13Ee-8Nr2H9gftQA" name="CHILD_NAME_00" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_fXussS13Ee-8Nr2H9gftQA" value="&quot;Lezioni di storia della musica&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_fXussi13Ee-8Nr2H9gftQA" name="CHILD_NAME_01" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_fXussy13Ee-8Nr2H9gftQA" value="&quot;Lezioni di chitarra&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_fXustC13Ee-8Nr2H9gftQA" name="FACTOR_VAL_00" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_fXustS13Ee-8Nr2H9gftQA" value="1.5"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_fXusti13Ee-8Nr2H9gftQA" name="ROOT_NAME_1" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_fXusty13Ee-8Nr2H9gftQA" value="&quot;Allenamento sportivo&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_fXusuC13Ee-8Nr2H9gftQA" name="ROOT_FIELD_1" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_fXusuS13Ee-8Nr2H9gftQA" value="&quot;Tipologia&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_fXusui13Ee-8Nr2H9gftQA" name="ROOT_DOMAIN_1" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_fXvTwC13Ee-8Nr2H9gftQA" value="*"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_fXvTwi13Ee-8Nr2H9gftQA" value="{&quot;Individuale&quot;, &quot;Collettivo&quot;}"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_fXvTwy13Ee-8Nr2H9gftQA" name="CHILD_NAME_10" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_fXvTxC13Ee-8Nr2H9gftQA" value="&quot;Allenamento di tennis&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_fXvTxS13Ee-8Nr2H9gftQA" name="CHILD_NAME_11" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_fXvTxi13Ee-8Nr2H9gftQA" value="&quot;Allenamento di calcio&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_fXvTxy13Ee-8Nr2H9gftQA" name="FACTOR_VAL_10" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_fXvTyC13Ee-8Nr2H9gftQA" value="1.5"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_fXvTyS13Ee-8Nr2H9gftQA" name="FACTOR_VAL_11" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_fXvTyi13Ee-8Nr2H9gftQA" value="1.5"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_fXv60C13Ee-8Nr2H9gftQA" name="ROOT_NAME_2" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_fXv60S13Ee-8Nr2H9gftQA" value="&quot;Ripetizioni scolastiche&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_fXv60i13Ee-8Nr2H9gftQA" name="ROOT_FIELD_2" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_fXv60y13Ee-8Nr2H9gftQA" value="&quot;Livello&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_fXv61C13Ee-8Nr2H9gftQA" name="ROOT_DOMAIN_2" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_fXv61S13Ee-8Nr2H9gftQA" value="*"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_fXv61y13Ee-8Nr2H9gftQA" value="{&quot;Scuola media&quot;, &quot;Scuola superiore&quot;,}"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_fXv62C13Ee-8Nr2H9gftQA" name="CHILD_NAME_20" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_fXv62S13Ee-8Nr2H9gftQA" value="&quot;Ripetizioni di matematica base&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_fXwh4C13Ee-8Nr2H9gftQA" name="CHILD_NAME_21" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_fXwh4S13Ee-8Nr2H9gftQA" value="&quot;Ripetizioni di matematica avanzata&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_fXwh4i13Ee-8Nr2H9gftQA" name="FACTOR_VAL_20" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_fXwh4y13Ee-8Nr2H9gftQA" value="1.2"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_fXwh5C13Ee-8Nr2H9gftQA" name="FACTOR_VAL_21" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_fXwh5S13Ee-8Nr2H9gftQA" value="2"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_fXwh5i13Ee-8Nr2H9gftQA" name="DEFAULT_COMMUNITY_01" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_fXwh5y13Ee-8Nr2H9gftQA" value="&quot;Fiumicino&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_fXwh6C13Ee-8Nr2H9gftQA" name="DEFAULT_COMMUNITY_02" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_fXwh6S13Ee-8Nr2H9gftQA" value="&quot;Tivoli&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_fXwh6i13Ee-8Nr2H9gftQA" name="DEFAULT_COMMUNITY_03" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_fXwh6y13Ee-8Nr2H9gftQA" value="&quot;Frascati&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_fXxI8C13Ee-8Nr2H9gftQA" name="DEFAULT_NAME_COMMUNITY_1" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_fXxI8S13Ee-8Nr2H9gftQA" value="&quot;Milano&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_fXxI8i13Ee-8Nr2H9gftQA" name="DEFAULT_COMMUNITY_11" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_fXxI8y13Ee-8Nr2H9gftQA" value="&quot;Rho&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_fXxI9C13Ee-8Nr2H9gftQA" name="DEFAULT_COMMUNITY_12" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_fXxI9S13Ee-8Nr2H9gftQA" value="&quot;Cinisello Balsamo&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_fXxI9i13Ee-8Nr2H9gftQA" name="DEFAULT_COMMUNITY_13" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_fXxI9y13Ee-8Nr2H9gftQA" value="&quot;Sesto San Giovanni&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_fXxI-C13Ee-8Nr2H9gftQA" name="DEFAULT_NAME_COMMUNITY_2" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_fXxI-S13Ee-8Nr2H9gftQA" value="&quot;Napoli&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_fXxwAC13Ee-8Nr2H9gftQA" name="DEFAULT_COMMUNITY_21" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_fXxwAS13Ee-8Nr2H9gftQA" value="&quot;Pozzuoli&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_fXxwAi13Ee-8Nr2H9gftQA" name="DEFAULT_COMMUNITY_22" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_fXxwAy13Ee-8Nr2H9gftQA" value="&quot;Casoria&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_fXxwBC13Ee-8Nr2H9gftQA" name="DEFAULT_COMMUNITY_23" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_fXxwBS13Ee-8Nr2H9gftQA" value="&quot;Portici&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_fXxwBi13Ee-8Nr2H9gftQA" name="DEFAULT_C1_USERNAME" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_fXxwBy13Ee-8Nr2H9gftQA" value="&quot;federico&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_fXxwCC13Ee-8Nr2H9gftQA" name="DEFAULT_C1_PASSWORD" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_fXxwCS13Ee-8Nr2H9gftQA" value="&quot;sabbadini&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_fXyXEC13Ee-8Nr2H9gftQA" name="DEFAULT_C2_USERNAME" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_fXyXES13Ee-8Nr2H9gftQA" value="&quot;daniele&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_fXyXEi13Ee-8Nr2H9gftQA" name="DEFAULT_C2_PASSWORD" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_fXyXEy13Ee-8Nr2H9gftQA" value="&quot;martinelli&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_fXyXFC13Ee-8Nr2H9gftQA" name="DEFAULT_F1_USERNAME" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_fXyXFS13Ee-8Nr2H9gftQA" value="&quot;user1&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_fXyXFi13Ee-8Nr2H9gftQA" name="DEFAULT_F1_PASSWORD" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_fXyXFy13Ee-8Nr2H9gftQA" value="&quot;user1&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_fXyXGC13Ee-8Nr2H9gftQA" name="DEFAULT_F1_EMAIL" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_fXyXGS13Ee-8Nr2H9gftQA" value="&quot;user1@unibs.it&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_fXyXGi13Ee-8Nr2H9gftQA" name="DEFAULT_F2_USERNAME" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_fXy-IC13Ee-8Nr2H9gftQA" value="&quot;user2&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_fXy-IS13Ee-8Nr2H9gftQA" name="DEFAULT_F2_PASSWORD" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_fXy-Ii13Ee-8Nr2H9gftQA" value="&quot;user2&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_fXy-Iy13Ee-8Nr2H9gftQA" name="DEFAULT_F2_EMAIL" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_fXy-JC13Ee-8Nr2H9gftQA" value="&quot;user2@unibs.it&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_fXy-JS13Ee-8Nr2H9gftQA" name="DEFAULT_F3_USERNAME" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_fXy-Ji13Ee-8Nr2H9gftQA" value="&quot;user3&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_fXy-Jy13Ee-8Nr2H9gftQA" name="DEFAULT_F3_PASSWORD" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_fXzlMC13Ee-8Nr2H9gftQA" value="&quot;user3&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_fXzlMS13Ee-8Nr2H9gftQA" name="DEFAULT_F3_EMAIL" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_fXzlMi13Ee-8Nr2H9gftQA" value="&quot;user3@unibs.it&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_fXzlMy13Ee-8Nr2H9gftQA" name="COMMERCIO_VAL_00" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_fXzlNC13Ee-8Nr2H9gftQA" value="4"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_fXzlNS13Ee-8Nr2H9gftQA" name="COMMERCIO_VAL_01" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_fXzlNi13Ee-8Nr2H9gftQA" value="6"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_fXzlNy13Ee-8Nr2H9gftQA" name="COMMERCIO_VAL_02" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_fXzlOC13Ee-8Nr2H9gftQA" value="9"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_fXzlOS13Ee-8Nr2H9gftQA" name="COMMERCIO_VAL_03" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_fXzlOi13Ee-8Nr2H9gftQA" value="4"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_fX0MQC13Ee-8Nr2H9gftQA" name="COMMERCIO_VAL_04" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_fX0MQS13Ee-8Nr2H9gftQA" value="16"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_fX0MQi13Ee-8Nr2H9gftQA" name="COMMERCIO_VAL_05" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_fX0MQy13Ee-8Nr2H9gftQA" value="12"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_fX0MRC13Ee-8Nr2H9gftQA" name="COMMERCIO_VAL_06" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_fX0MRS13Ee-8Nr2H9gftQA" value="2"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_fX0MRi13Ee-8Nr2H9gftQA" name="COMMERCIO_VAL_07" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_fX0MRy13Ee-8Nr2H9gftQA" value="10"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_fX0MSC13Ee-8Nr2H9gftQA" name="COMMERCIO_VAL_10" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_fX0MSS13Ee-8Nr2H9gftQA" value="4"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_fX0zUC13Ee-8Nr2H9gftQA" name="COMMERCIO_VAL_11" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_fX0zUS13Ee-8Nr2H9gftQA" value="7"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_fX0zUi13Ee-8Nr2H9gftQA" name="COMMERCIO_VAL_12" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_fX0zUy13Ee-8Nr2H9gftQA" value="9"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_fX0zVC13Ee-8Nr2H9gftQA" name="COMMERCIO_VAL_13" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_fX0zVS13Ee-8Nr2H9gftQA" value="4"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_fX0zVi13Ee-8Nr2H9gftQA" name="COMMERCIO_VAL_14" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_fX1aYC13Ee-8Nr2H9gftQA" value="4"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_fX1aYS13Ee-8Nr2H9gftQA" name="COMMERCIO_VAL_15" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_fX1aYi13Ee-8Nr2H9gftQA" value="12"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_fX1aYy13Ee-8Nr2H9gftQA" name="COMMERCIO_VAL_16" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_fX1aZC13Ee-8Nr2H9gftQA" value="18"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_fX1aZS13Ee-8Nr2H9gftQA" name="COMMERCIO_VAL_17" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_fX1aZi13Ee-8Nr2H9gftQA" value="4"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_fX1aZy13Ee-8Nr2H9gftQA" name="defaultInitializer" visibility="private" isStatic="true" type="_4P2WERwOEe-urICxG0GjCg" association="_fX99QC13Ee-8Nr2H9gftQA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4TxM1hwOEe-urICxG0GjCg" name="DefaultInitializer" specification="_4P29IBwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4TxM1xwOEe-urICxG0GjCg" type="_4P2WERwOEe-urICxG0GjCg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>this.geografia = defaultWorld();
     this.utenza = defaultAccess();
     this.gerarchia = defaultTree();
     try {
			this.commercio = defaultCommercio();
		} catch (NodeNotLeafException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4TxM2BwOEe-urICxG0GjCg" name="defaultTree" specification="_4P3kMxwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4TxM2RwOEe-urICxG0GjCg" type="_4P_gABwOEe-urICxG0GjCg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>Gerarchia gerarchia = new Gerarchia();

 
     try {
     // Creazione del nodo radice
     Nodo nodo0 = new Nodo(ROOT_NAME_0, null, ROOT_FIELD_0);
     for (String domainValue : ROOT_DOMAIN_0) {
         nodo0.addElementiDominio(domainValue);
     }

     // Creazione dei nodi figli
     Nodo nodo00 = new Nodo(CHILD_NAME_00, ROOT_NAME_0);
     Nodo nodo01 = new Nodo(CHILD_NAME_01, ROOT_NAME_0);

         nodo0.addChild(nodo00);
         nodo0.addChild(nodo01);

         // Aggiunta dei nodi all'albero e definizione dei fattori di conversione
         nodo00.addFattoreConversione(nodo01, FACTOR_VAL_00);
         nodo01.addFattoreConversione(nodo00, 1/FACTOR_VAL_00);
         
         Albero albero0 = new Albero(nodo0);
       
         albero0.setUtente(utenza.autenticazioneConfiguratore(DEFAULT_C1_USERNAME, DEFAULT_C1_PASSWORD));
         gerarchia.addAlbero(albero0);
         Nodo.addTransitivoFattoreConversione(gerarchia);
         
         
     // Creazione del nodo radice
         Nodo nodo1 = new Nodo(ROOT_NAME_1, null, ROOT_FIELD_1);
     for (String domainValue : ROOT_DOMAIN_1) {
         nodo1.addElementiDominio(domainValue);
     }

     // Creazione dei nodi figli
     Nodo nodo10 = new Nodo(CHILD_NAME_10, ROOT_NAME_1);
     Nodo nodo11 = new Nodo(CHILD_NAME_11, ROOT_NAME_1);
     
         nodo1.addChild(nodo10);
         nodo1.addChild(nodo11);

         // Aggiunta dei nodi all'albero e definizione dei fattori di conversione
         nodo10.addFattoreConversione(nodo11, FACTOR_VAL_10);
         nodo11.addFattoreConversione(nodo10, 1/FACTOR_VAL_10);
         
         nodo01.addFattoreConversione(nodo10, FACTOR_VAL_11);
         nodo10.addFattoreConversione(nodo01, 1/FACTOR_VAL_11);
         Albero albero1 = new Albero(nodo1);
       
         albero1.setUtente(utenza.autenticazioneConfiguratore(DEFAULT_C1_USERNAME, DEFAULT_C1_PASSWORD));
         gerarchia.addAlbero(albero1);
         Nodo.addTransitivoFattoreConversione(gerarchia);
         
         
     // Creazione del nodo radice
         Nodo nodo2 = new Nodo(ROOT_NAME_2, null, ROOT_FIELD_2);
     for (String domainValue : ROOT_DOMAIN_2) {
         nodo2.addElementiDominio(domainValue);
     }


     // Creazione dei nodi figli
     Nodo nodo20 = new Nodo(CHILD_NAME_20, ROOT_NAME_2);
     Nodo nodo21 = new Nodo(CHILD_NAME_21, ROOT_NAME_2);
     
         nodo2.addChild(nodo20);
         nodo2.addChild(nodo21);

         // Aggiunta dei nodi all'albero e definizione dei fattori di conversione
         nodo20.addFattoreConversione(nodo21, FACTOR_VAL_20);
         nodo21.addFattoreConversione(nodo20, 1/FACTOR_VAL_20);
         
         nodo20.addFattoreConversione(nodo00, FACTOR_VAL_21);
         nodo00.addFattoreConversione(nodo20, 1/FACTOR_VAL_21);
         Albero albero2 = new Albero(nodo2);
       
         albero2.setUtente(utenza.autenticazioneConfiguratore(DEFAULT_C2_USERNAME, DEFAULT_C2_PASSWORD));
         gerarchia.addAlbero(albero2); 
         Nodo.addTransitivoFattoreConversione(gerarchia);
     
     } catch (Exception e) {
         System.out.println(e.getMessage());
     }
     
     return gerarchia;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4TxM2hwOEe-urICxG0GjCg" name="defaultAccess" specification="_4P3kNBwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4TxM2xwOEe-urICxG0GjCg" type="_4QLGMBwOEe-urICxG0GjCg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>Utenza utenza = new Utenza();

     // Creazione delle credenziali di default per l'utente configuratore admin
     Credenziali credC1= new Credenziali(DEFAULT_C1_USERNAME, DEFAULT_C1_PASSWORD);
     credC1.setDefinitive(true);
     Configuratore configuratore1 = new Configuratore(credC1);
     Credenziali credC2= new Credenziali(DEFAULT_C2_USERNAME, DEFAULT_C2_PASSWORD);
     credC2.setDefinitive(true);
     Configuratore configuratore2 = new Configuratore(credC2);
     utenza.addUtente(configuratore1);
     utenza.addUtente(configuratore2);

     
     // Creazione delle credenziali di default per l'utente fruitore user
     Credenziali credF1 = new Credenziali(DEFAULT_F1_USERNAME, DEFAULT_F1_PASSWORD);
     Fruitore fruitore1 = 
     		new Fruitore(geografia.getGeografia().get(0), credF1, 
     				DEFAULT_F1_EMAIL);
     Credenziali credF2 = new Credenziali(DEFAULT_F2_USERNAME, DEFAULT_F2_PASSWORD);
     Fruitore fruitore2 = 
     		new Fruitore(geografia.getGeografia().get(1), credF2, 
     				DEFAULT_F2_EMAIL);
     Credenziali credF3 = new Credenziali(DEFAULT_F3_USERNAME, DEFAULT_F3_PASSWORD);
     Fruitore fruitore3 = 
     		new Fruitore(geografia.getGeografia().get(0), credF3, 
     				DEFAULT_F3_EMAIL);
     utenza.addUtente(fruitore1);
     utenza.addUtente(fruitore2);
     utenza.addUtente(fruitore3);
     
     return utenza;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4Txz0BwOEe-urICxG0GjCg" name="defaultCommercio" specification="_4P3kNhwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_fX5Ewi13Ee-8Nr2H9gftQA" type="_fXliwC13Ee-8Nr2H9gftQA" direction="return"/>
                <language>java</language>
                <body>Commercio commercio = new Commercio();
 	
 	
 	Fruitore fruitore0 = (Fruitore)utenza.getUtenti().get(2);
 	commercio.setUtenteDiSessione(fruitore0);
 	InsiemeAperto insiemeAperto0 = new InsiemeAperto(fruitore0.getComprensorioAppartenenza());

		PrestazioneOpera r00 = new PrestazioneOpera(gerarchia.getFoglie().get(0), COMMERCIO_VAL_00);
		PrestazioneOpera o00 = new PrestazioneOpera(gerarchia.getFoglie().get(1));
		PropostaAperta proposta00 = new PropostaAperta(r00, o00, commercio.numProposte(),fruitore0);
		
		PrestazioneOpera r01 = new PrestazioneOpera(gerarchia.getFoglie().get(3), COMMERCIO_VAL_10);
		PrestazioneOpera o01 = new PrestazioneOpera(gerarchia.getFoglie().get(1));
		PropostaAperta proposta01 = new PropostaAperta(r01, o01, commercio.numProposte(),fruitore0);
	
		PrestazioneOpera r02 = new PrestazioneOpera(gerarchia.getFoglie().get(2), COMMERCIO_VAL_02);
		PrestazioneOpera o02 = new PrestazioneOpera(gerarchia.getFoglie().get(0));
		PropostaAperta proposta02 = new PropostaAperta(r02, o02, commercio.numProposte(),fruitore0);
		
		PrestazioneOpera r03 = new PrestazioneOpera(gerarchia.getFoglie().get(2), COMMERCIO_VAL_03);
		PrestazioneOpera o03 = new PrestazioneOpera(gerarchia.getFoglie().get(4));
		PropostaAperta proposta03 = new PropostaAperta(r03, o03, commercio.numProposte(),fruitore0);
		
 	PrestazioneOpera r04 = new PrestazioneOpera(gerarchia.getFoglie().get(3), COMMERCIO_VAL_04);
 	PrestazioneOpera o04 = new PrestazioneOpera(gerarchia.getFoglie().get(5));
		PropostaAperta proposta04 = new PropostaAperta(r04, o04, commercio.numProposte(),fruitore0);
	
		PrestazioneOpera r05 = new PrestazioneOpera(gerarchia.getFoglie().get(5), COMMERCIO_VAL_05);
		PrestazioneOpera o05 = new PrestazioneOpera(gerarchia.getFoglie().get(2));
		PropostaAperta proposta05 = new PropostaAperta(r05, o05, commercio.numProposte(),fruitore0);
		
		PrestazioneOpera r06 = new PrestazioneOpera(gerarchia.getFoglie().get(0), COMMERCIO_VAL_06);
		PrestazioneOpera o06 = new PrestazioneOpera(gerarchia.getFoglie().get(4));
		PropostaAperta proposta06 = new PropostaAperta(r06, o06, commercio.numProposte(),fruitore0);
		
 	PrestazioneOpera r07 = new PrestazioneOpera(gerarchia.getFoglie().get(3), COMMERCIO_VAL_07);
 	PrestazioneOpera o07 = new PrestazioneOpera(gerarchia.getFoglie().get(0));
		PropostaAperta proposta07 = new PropostaAperta(r07, o07, commercio.numProposte(),fruitore0);
		
		insiemeAperto0.addPropostaAperta(proposta00);		
		insiemeAperto0.addPropostaAperta(proposta01);
		insiemeAperto0.addPropostaAperta(proposta02);
		insiemeAperto0.addPropostaAperta(proposta03);		
		insiemeAperto0.addPropostaAperta(proposta04);
		insiemeAperto0.addPropostaAperta(proposta05);
		insiemeAperto0.addPropostaAperta(proposta06);
		insiemeAperto0.addPropostaAperta(proposta07);
 
		
 	Fruitore fruitore2 = (Fruitore)utenza.getUtenti().get(4);
 	commercio.setUtenteDiSessione(fruitore2);
 	
 	PrestazioneOpera r10 = new PrestazioneOpera(gerarchia.getFoglie().get(1), COMMERCIO_VAL_01);
 	PrestazioneOpera o10 = new PrestazioneOpera(gerarchia.getFoglie().get(2));
		PropostaAperta proposta10 = new PropostaAperta(r10, o10, commercio.numProposte(),fruitore2);
		
		insiemeAperto0.addPropostaAperta(proposta10);
		
		commercio.addInsiemiAperti(insiemeAperto0);
		commercio.cercaProposteChiudibili(insiemeAperto0); 
		
 	Fruitore fruitore1 = (Fruitore)utenza.getUtenti().get(3);
 	commercio.setUtenteDiSessione(fruitore1);
 	InsiemeAperto insiemeAperto1 = new InsiemeAperto(fruitore1.getComprensorioAppartenenza());

		

		
 	PrestazioneOpera r11 = new PrestazioneOpera(gerarchia.getFoglie().get(4), COMMERCIO_VAL_11);
 	PrestazioneOpera o11 = new PrestazioneOpera(gerarchia.getFoglie().get(2));
		PropostaAperta proposta11 = new PropostaAperta(r11, o11, commercio.numProposte(),fruitore1);
	
		PrestazioneOpera r12 = new PrestazioneOpera(gerarchia.getFoglie().get(3), COMMERCIO_VAL_12);
		PrestazioneOpera o12 = new PrestazioneOpera(gerarchia.getFoglie().get(0));
		PropostaAperta proposta12 = new PropostaAperta(r12, o12, commercio.numProposte(),fruitore1);
		
		PrestazioneOpera r13 = new PrestazioneOpera(gerarchia.getFoglie().get(1), COMMERCIO_VAL_13);
		PrestazioneOpera o13 = new PrestazioneOpera(gerarchia.getFoglie().get(4));
		PropostaAperta proposta13 = new PropostaAperta(r13, o13, commercio.numProposte(),fruitore1);
		
 	PrestazioneOpera r14 = new PrestazioneOpera(gerarchia.getFoglie().get(2), COMMERCIO_VAL_14);
 	PrestazioneOpera o14 = new PrestazioneOpera(gerarchia.getFoglie().get(5));
		PropostaAperta proposta14 = new PropostaAperta(r14, o14, commercio.numProposte(),fruitore1);
	
		PrestazioneOpera r15 = new PrestazioneOpera(gerarchia.getFoglie().get(5), COMMERCIO_VAL_15);
		PrestazioneOpera o15 = new PrestazioneOpera(gerarchia.getFoglie().get(2));
		PropostaAperta proposta15 = new PropostaAperta(r15, o15, commercio.numProposte(),fruitore1);
		
		PrestazioneOpera r16 = new PrestazioneOpera(gerarchia.getFoglie().get(3), COMMERCIO_VAL_16);
		PrestazioneOpera o16 = new PrestazioneOpera(gerarchia.getFoglie().get(4));
		PropostaAperta proposta16 = new PropostaAperta(r16, o16, commercio.numProposte(),fruitore1);
		
 	PrestazioneOpera r17 = new PrestazioneOpera(gerarchia.getFoglie().get(1), COMMERCIO_VAL_17);
 	PrestazioneOpera o17 = new PrestazioneOpera(gerarchia.getFoglie().get(2));
		PropostaAperta proposta17 = new PropostaAperta(r17, o17, commercio.numProposte(),fruitore1);

		
		
		insiemeAperto1.addPropostaAperta(proposta11);
		insiemeAperto1.addPropostaAperta(proposta12);
		insiemeAperto1.addPropostaAperta(proposta13);		
		insiemeAperto1.addPropostaAperta(proposta14);
		insiemeAperto1.addPropostaAperta(proposta15);
		
		insiemeAperto1.addPropostaAperta(proposta16);		
		insiemeAperto1.addPropostaAperta(proposta17);

		
		commercio.addInsiemiAperti(insiemeAperto1);
		commercio.cercaProposteChiudibili(insiemeAperto1); 
		
		commercio.ritira(proposta16);
		commercio.ritira(proposta17);

 	return commercio;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4Txz0hwOEe-urICxG0GjCg" name="defaultWorld" specification="_4P3kNxwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4Txz0xwOEe-urICxG0GjCg" type="_4P9q0BwOEe-urICxG0GjCg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>Geografia geografia = new Geografia();
     
     Comprensorio comprensorio1 = new Comprensorio(DEFAULT_NAME_COMMUNITY_0);
     comprensorio1.addComune(DEFAULT_COMMUNITY_01);
     comprensorio1.addComune(DEFAULT_COMMUNITY_02);
     comprensorio1.addComune(DEFAULT_COMMUNITY_03);
     
     Comprensorio comprensorio2 = new Comprensorio(DEFAULT_NAME_COMMUNITY_1);
     comprensorio2.addComune(DEFAULT_COMMUNITY_11);
     comprensorio2.addComune(DEFAULT_COMMUNITY_12);
     comprensorio2.addComune(DEFAULT_COMMUNITY_13);
     
     Comprensorio comprensorio3 = new Comprensorio(DEFAULT_NAME_COMMUNITY_2);
     comprensorio3.addComune(DEFAULT_COMMUNITY_21);
     comprensorio3.addComune(DEFAULT_COMMUNITY_22);
     comprensorio3.addComune(DEFAULT_COMMUNITY_23);
     
     geografia.addComprensorio(comprensorio1);
     geografia.addComprensorio(comprensorio2);
     geografia.addComprensorio(comprensorio3);

     return geografia;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_fX4dsy13Ee-8Nr2H9gftQA" name="getDefaultInitializer" specification="_fUGJ4C13Ee-8Nr2H9gftQA">
                <ownedParameter xmi:id="_fX4dtC13Ee-8Nr2H9gftQA" type="_4P2WERwOEe-urICxG0GjCg" direction="return"/>
                <language>java</language>
                <body>if (defaultInitializer == null)
 		defaultInitializer= new DefaultInitializer(); 
 	return defaultInitializer;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_fX5EwC13Ee-8Nr2H9gftQA" name="getUtenza" specification="_fUGJ4i13Ee-8Nr2H9gftQA">
                <ownedParameter xmi:id="_fX5EwS13Ee-8Nr2H9gftQA" type="_4QLGMBwOEe-urICxG0GjCg" direction="return"/>
                <language>java</language>
                <body>return this.utenza;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_4P29IBwOEe-urICxG0GjCg" name="DefaultInitializer" visibility="private" method="_4TxM1hwOEe-urICxG0GjCg">
                <eAnnotations xmi:id="_4P3kMBwOEe-urICxG0GjCg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_4P3kMRwOEe-urICxG0GjCg" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_fX8IEC13Ee-8Nr2H9gftQA">
                  <body>Costruttore che inizializza gli oggetti di default.</body>
                </ownedComment>
                <ownedParameter xmi:id="_4P3kMhwOEe-urICxG0GjCg" type="_4P2WERwOEe-urICxG0GjCg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_4P3kMxwOEe-urICxG0GjCg" name="defaultTree" method="_4TxM2BwOEe-urICxG0GjCg">
                <ownedComment xmi:id="_fX8IEi13Ee-8Nr2H9gftQA">
                  <body>Crea e restituisce un albero gerarchico di default.
     * 
     * @return L'albero gerarchico di default</body>
                </ownedComment>
                <ownedParameter xmi:id="_4SzjcBwOEe-urICxG0GjCg" type="_4P_gABwOEe-urICxG0GjCg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_4P3kNBwOEe-urICxG0GjCg" name="defaultAccess" method="_4TxM2hwOEe-urICxG0GjCg">
                <ownedComment xmi:id="_fX8IEy13Ee-8Nr2H9gftQA">
                  <body>Crea e restituisce un'utenza di default.
     * 
     * @return L'utenza di default</body>
                </ownedComment>
                <ownedParameter xmi:id="_4SzjcRwOEe-urICxG0GjCg" type="_4QLGMBwOEe-urICxG0GjCg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_4P3kNhwOEe-urICxG0GjCg" name="defaultCommercio" visibility="private" method="_4Txz0BwOEe-urICxG0GjCg" raisedException="_fXajoC13Ee-8Nr2H9gftQA">
                <ownedParameter xmi:id="_4SzjcxwOEe-urICxG0GjCg" type="_fXliwC13Ee-8Nr2H9gftQA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_4P3kNxwOEe-urICxG0GjCg" name="defaultWorld" method="_4Txz0hwOEe-urICxG0GjCg">
                <ownedComment xmi:id="_fX8IFC13Ee-8Nr2H9gftQA">
                  <body>Crea e restituisce una geografia di default.
     * 
     * @return La geografia di default</body>
                </ownedComment>
                <ownedParameter xmi:id="_4SzjdBwOEe-urICxG0GjCg" type="_4P9q0BwOEe-urICxG0GjCg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_fUGJ4C13Ee-8Nr2H9gftQA" name="getDefaultInitializer" isStatic="true" method="_fX4dsy13Ee-8Nr2H9gftQA">
                <ownedParameter xmi:id="_fUGJ4S13Ee-8Nr2H9gftQA" type="_4P2WERwOEe-urICxG0GjCg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_fUGJ4i13Ee-8Nr2H9gftQA" name="getUtenza" method="_fX5EwC13Ee-8Nr2H9gftQA">
                <ownedComment xmi:id="_fX8IES13Ee-8Nr2H9gftQA">
                  <body>Restituisce la gestione utenza predefinita.
     * 
     * @return La gestione utenza predefinita</body>
                </ownedComment>
                <ownedParameter xmi:id="_fUGJ4y13Ee-8Nr2H9gftQA" type="_4QLGMBwOEe-urICxG0GjCg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_4P4yUBwOEe-urICxG0GjCg" name="FileManager">
              <ownedComment xmi:id="_fX7hCS13Ee-8Nr2H9gftQA">
                <body>DataManager è una classe utilizzata per gestire il caricamento e il salvataggio dei dati da e verso file di testo.
Supporta il caricamento e il salvataggio di oggetti delle classi Gerarchia, Geografia e Utenza.

Autore: Daniele Martinelli e Federico Sabbadini</body>
              </ownedComment>
              <ownedAttribute xmi:id="_4TijQhwOEe-urICxG0GjCg" name="SAVE_G_ERR" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_4TijQxwOEe-urICxG0GjCg" value="&quot;Errore durante il salvataggio della gerarchia su file: &quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_4TijRBwOEe-urICxG0GjCg" name="SAVE_U_ERR" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_4TijRRwOEe-urICxG0GjCg" value="&quot;Errore durante il salvataggio dell' utenza su file: &quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_4TijRhwOEe-urICxG0GjCg" name="SAVE_GE_ERR" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_4TijRxwOEe-urICxG0GjCg" value="&quot;Errore durante il salvataggio della geografia su file: &quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_4TijSBwOEe-urICxG0GjCg" name="SAVE_C_ERR" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_4TijSRwOEe-urICxG0GjCg" value="&quot;Errore durante il salvataggio del commercio su file: &quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_4TijShwOEe-urICxG0GjCg" name="UPLOAD_U_ERR" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_4TijSxwOEe-urICxG0GjCg" value="&quot;Errore durante il caricamento dell' utenza: &quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_4TjKUBwOEe-urICxG0GjCg" name="UPLOAD_G_ERR" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_4TjKURwOEe-urICxG0GjCg" value="&quot;Errore durante il caricamento della gerarchia: &quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_4TjKUhwOEe-urICxG0GjCg" name="UPLOAD_GE_ERR" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_4TjKUxwOEe-urICxG0GjCg" value="&quot;Errore durante il caricamento della geografia: &quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_4TjKVBwOEe-urICxG0GjCg" name="UPLOAD_C_ERR" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_4TjKVRwOEe-urICxG0GjCg" value="&quot;Errore durante il caricamento del commercio: &quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_4TjKVhwOEe-urICxG0GjCg" name="UTENZA_FILE" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_4TjKVxwOEe-urICxG0GjCg" value="&quot;utenza.txt&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_4TjKWBwOEe-urICxG0GjCg" name="GERARCHIA_FILE" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_4TjKWRwOEe-urICxG0GjCg" value="&quot;gerarchia.txt&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_4TjKWhwOEe-urICxG0GjCg" name="GEOGRAFIA_FILE" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_4TjKWxwOEe-urICxG0GjCg" value="&quot;geografia.txt&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_4TjKXBwOEe-urICxG0GjCg" name="COMMERCIO_FILE" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <eAnnotations xmi:id="_fT7x0C13Ee-8Nr2H9gftQA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_fT8Y4C13Ee-8Nr2H9gftQA" key="ConstantWithGetter"/>
                </eAnnotations>
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_4TjKXRwOEe-urICxG0GjCg" value="&quot;commercio.txt&quot;"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4Txz1BwOEe-urICxG0GjCg" name="getGerarchiaFile" specification="_4P5ZYBwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4Txz1RwOEe-urICxG0GjCg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return GERARCHIA_FILE;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4Txz1hwOEe-urICxG0GjCg" name="getCommercioFile" specification="_4P6AcBwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4Txz1xwOEe-urICxG0GjCg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return COMMERCIO_FILE;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4Txz2BwOEe-urICxG0GjCg" name="getUtenzaFile" specification="_4P6AchwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4Txz2RwOEe-urICxG0GjCg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return UTENZA_FILE;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4Txz2hwOEe-urICxG0GjCg" name="getGeografiaFile" specification="_4P6AdBwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4Txz2xwOEe-urICxG0GjCg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return GEOGRAFIA_FILE;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4Txz3BwOEe-urICxG0GjCg" name="caricaGerarchia" specification="_4P6AdhwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4Txz3RwOEe-urICxG0GjCg" type="_4P_gABwOEe-urICxG0GjCg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>try (ObjectInputStream inputStream = new ObjectInputStream(new FileInputStream(getGerarchiaFile()))) {
         return (Gerarchia) inputStream.readObject();
     } catch (IOException | ClassNotFoundException e) {
         System.err.println(UPLOAD_G_ERR + e.getMessage());
         return null;
     }
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4Txz3hwOEe-urICxG0GjCg" name="salvaSuFile" specification="_4S0KgRwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4Txz3xwOEe-urICxG0GjCg" name="gerarchia" type="_4P_gABwOEe-urICxG0GjCg"/>
                <language>java</language>
                <body>try (ObjectOutputStream outputStream = new ObjectOutputStream(new FileOutputStream(getGerarchiaFile()))) {
         outputStream.writeObject(gerarchia);
     } catch (IOException e) {
         System.err.println(SAVE_G_ERR + e.getMessage());
     }
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4Txz4BwOEe-urICxG0GjCg" name="caricaUtenza" specification="_4P6AdxwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4Txz4RwOEe-urICxG0GjCg" type="_4QLGMBwOEe-urICxG0GjCg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>try (ObjectInputStream inputStream = new ObjectInputStream(new FileInputStream(getUtenzaFile()))) {
         return (Utenza) inputStream.readObject();
     } catch (IOException | ClassNotFoundException e) {
         System.err.println(UPLOAD_U_ERR + e.getMessage());
         return null;
     }
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4Txz4hwOEe-urICxG0GjCg" name="salvaSuFile" specification="_4S0xkhwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4Txz4xwOEe-urICxG0GjCg" name="utenza" type="_4QLGMBwOEe-urICxG0GjCg"/>
                <language>java</language>
                <body>try (ObjectOutputStream outputStream = new ObjectOutputStream(new FileOutputStream(getUtenzaFile()))) {
         outputStream.writeObject(utenza);
     } catch (IOException e) {
         System.err.println(SAVE_U_ERR + e.getMessage());
     }
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4Txz5BwOEe-urICxG0GjCg" name="caricaGeografia" specification="_4P6AeBwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4Txz5RwOEe-urICxG0GjCg" type="_4P9q0BwOEe-urICxG0GjCg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>try (ObjectInputStream inputStream = new ObjectInputStream(new FileInputStream(getGeografiaFile()))) {
         return (Geografia) inputStream.readObject();
     } catch (IOException | ClassNotFoundException e) {
         System.err.println(UPLOAD_GE_ERR + e.getMessage());
         return null;
     }
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4Txz5hwOEe-urICxG0GjCg" name="salvaSuFile" specification="_4S0xlRwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4Txz5xwOEe-urICxG0GjCg" name="geografia" type="_4P9q0BwOEe-urICxG0GjCg"/>
                <language>java</language>
                <body>try (ObjectOutputStream outputStream = new ObjectOutputStream(new FileOutputStream(getGeografiaFile()))) {
         outputStream.writeObject(geografia);
     } catch (IOException e) {
         System.err.println(SAVE_GE_ERR + e.getMessage());
     }
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4Txz6BwOEe-urICxG0GjCg" name="caricaCommercio" specification="_4P6ngBwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_fX4dsC13Ee-8Nr2H9gftQA" type="_fXliwC13Ee-8Nr2H9gftQA" direction="return"/>
                <language>java</language>
                <body>try (ObjectInputStream inputStream = new ObjectInputStream(new FileInputStream(getCommercioFile()))) {
         return (Commercio) inputStream.readObject();
     } catch (IOException | ClassNotFoundException e) {
         System.err.println(UPLOAD_C_ERR + e.getMessage());
         return null;
     }
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_fX4dsS13Ee-8Nr2H9gftQA" name="salvaSuFile" specification="_fXliwi13Ee-8Nr2H9gftQA">
                <ownedParameter xmi:id="_fX4dsi13Ee-8Nr2H9gftQA" name="commercio" type="_fXliwC13Ee-8Nr2H9gftQA"/>
                <language>java</language>
                <body>try (ObjectOutputStream outputStream = new ObjectOutputStream(new FileOutputStream(getCommercioFile()))) {
         outputStream.writeObject(commercio);
     } catch (IOException e) {
         System.err.println(SAVE_C_ERR + e.getMessage());
     }
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_4P5ZYBwOEe-urICxG0GjCg" name="getGerarchiaFile" isStatic="true" method="_4Txz1BwOEe-urICxG0GjCg">
                <ownedComment xmi:id="_fX7hCi13Ee-8Nr2H9gftQA">
                  <body>Restituisce il percorso del file utilizzato per la memorizzazione della gerarchia.
     * 
     * @return Il percorso del file della gerarchia</body>
                </ownedComment>
                <ownedParameter xmi:id="_4P5ZYRwOEe-urICxG0GjCg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_4P6AcBwOEe-urICxG0GjCg" name="getCommercioFile" isStatic="true" method="_4Txz1hwOEe-urICxG0GjCg">
                <ownedComment xmi:id="_fX7hCy13Ee-8Nr2H9gftQA">
                  <body>Restituisce il percorso del file utilizzato per la memorizzazione del commercio.
     * 
     * @return Il percorso del file del commercio</body>
                </ownedComment>
                <ownedParameter xmi:id="_4P6AcRwOEe-urICxG0GjCg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_4P6AchwOEe-urICxG0GjCg" name="getUtenzaFile" isStatic="true" method="_4Txz2BwOEe-urICxG0GjCg">
                <ownedComment xmi:id="_fX7hDC13Ee-8Nr2H9gftQA">
                  <body>Restituisce il percorso del file utilizzato per la memorizzazione dell' utenza.
     * 
     * @return Il percorso del file delL' utenza</body>
                </ownedComment>
                <ownedParameter xmi:id="_4P6AcxwOEe-urICxG0GjCg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_4P6AdBwOEe-urICxG0GjCg" name="getGeografiaFile" isStatic="true" method="_4Txz2hwOEe-urICxG0GjCg">
                <ownedComment xmi:id="_fX7hDS13Ee-8Nr2H9gftQA">
                  <body>Restituisce il percorso del file utilizzato per la memorizzazione della geografia.
     * 
     * @return Il percorso del file della geografia</body>
                </ownedComment>
                <ownedParameter xmi:id="_4P6AdRwOEe-urICxG0GjCg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_4P6AdhwOEe-urICxG0GjCg" name="caricaGerarchia" isStatic="true" method="_4Txz3BwOEe-urICxG0GjCg">
                <ownedComment xmi:id="_fX7hDi13Ee-8Nr2H9gftQA">
                  <body>Carica la gerarchia da un file di testo.
     * 
     * @return La gerarchia caricata, null in caso di errore durante il caricamento.</body>
                </ownedComment>
                <ownedParameter xmi:id="_4S0KgBwOEe-urICxG0GjCg" type="_4P_gABwOEe-urICxG0GjCg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_4P6AdxwOEe-urICxG0GjCg" name="caricaUtenza" isStatic="true" method="_4Txz4BwOEe-urICxG0GjCg">
                <ownedComment xmi:id="_fX7hEC13Ee-8Nr2H9gftQA">
                  <body>Carica l' utenza da un file di testo.
     * 
     * @return L' utenza caricata, null in caso di errore durante il caricamento.</body>
                </ownedComment>
                <ownedParameter xmi:id="_4S0xkRwOEe-urICxG0GjCg" type="_4QLGMBwOEe-urICxG0GjCg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_4P6AeBwOEe-urICxG0GjCg" name="caricaGeografia" isStatic="true" method="_4Txz5BwOEe-urICxG0GjCg">
                <ownedComment xmi:id="_fX7hEi13Ee-8Nr2H9gftQA">
                  <body>Carica la geografia da un file di testo.
     * 
     * @return La geografia caricata, null in caso di errore durante il caricamento.</body>
                </ownedComment>
                <ownedParameter xmi:id="_4S0xlBwOEe-urICxG0GjCg" type="_4P9q0BwOEe-urICxG0GjCg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_4P6ngBwOEe-urICxG0GjCg" name="caricaCommercio" isStatic="true" method="_4Txz6BwOEe-urICxG0GjCg">
                <ownedComment xmi:id="_fX7hFC13Ee-8Nr2H9gftQA">
                  <body>Carica il commercio da un file di testo.
     * 
     * @return Il commercio caricato, null in caso di errore durante il caricamento.</body>
                </ownedComment>
                <ownedParameter xmi:id="_4S0xlxwOEe-urICxG0GjCg" type="_fXliwC13Ee-8Nr2H9gftQA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_4S0KgRwOEe-urICxG0GjCg" name="salvaSuFile" isStatic="true" method="_4Txz3hwOEe-urICxG0GjCg">
                <ownedComment xmi:id="_fX7hDy13Ee-8Nr2H9gftQA">
                  <body>Salva la gerarchia su un file di testo.
     * 
     * @param gerarchia La gerarchia da salvare.</body>
                </ownedComment>
                <ownedParameter xmi:id="_4S0xkBwOEe-urICxG0GjCg" name="gerarchia" type="_4P_gABwOEe-urICxG0GjCg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_4S0xkhwOEe-urICxG0GjCg" name="salvaSuFile" isStatic="true" method="_4Txz4hwOEe-urICxG0GjCg">
                <ownedComment xmi:id="_fX7hES13Ee-8Nr2H9gftQA">
                  <body>Salva l' utenza su un file di testo.
     * 
     * @param gestioneUtenza L' utenza da salvare.</body>
                </ownedComment>
                <ownedParameter xmi:id="_4S0xkxwOEe-urICxG0GjCg" name="utenza" type="_4QLGMBwOEe-urICxG0GjCg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_4S0xlRwOEe-urICxG0GjCg" name="salvaSuFile" isStatic="true" method="_4Txz5hwOEe-urICxG0GjCg">
                <ownedComment xmi:id="_fX7hEy13Ee-8Nr2H9gftQA">
                  <body>Salva la geografia su un file di testo.
     * 
     * @param geografia La geografia da salvare.</body>
                </ownedComment>
                <ownedParameter xmi:id="_4S0xlhwOEe-urICxG0GjCg" name="geografia" type="_4P9q0BwOEe-urICxG0GjCg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_fXliwi13Ee-8Nr2H9gftQA" name="salvaSuFile" isStatic="true" method="_fX4dsS13Ee-8Nr2H9gftQA">
                <ownedComment xmi:id="_fX7hFS13Ee-8Nr2H9gftQA">
                  <body>Salva il commercio su un file di testo.
     * 
     * @param Il commercio da salvare.</body>
                </ownedComment>
                <ownedParameter xmi:id="_fXliwy13Ee-8Nr2H9gftQA" name="commercio" type="_fXliwC13Ee-8Nr2H9gftQA"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_4P7OkBwOEe-urICxG0GjCg" name="Fruitore">
              <ownedComment xmi:id="_fX7hAy13Ee-8Nr2H9gftQA">
                <body>La classe Fruitore rappresenta un utente con privilegi di configurazione.
Estende la classe astratta Utente.

Autore: Daniele Martinelli e Federico Sabbadini</body>
              </ownedComment>
              <generalization xmi:id="_4S2mxBwOEe-urICxG0GjCg" general="_4QJ4ExwOEe-urICxG0GjCg"/>
              <ownedAttribute xmi:id="_4TjxYBwOEe-urICxG0GjCg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_4TjxYRwOEe-urICxG0GjCg" value="1L"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_4TjxZBwOEe-urICxG0GjCg" name="EMAIL_PATTERN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_4TjxZRwOEe-urICxG0GjCg" value="&quot;^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}$&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_4TjxZhwOEe-urICxG0GjCg" name="pattern" visibility="private" isLeaf="true" isStatic="true" type="_4S1_sRwOEe-urICxG0GjCg" isReadOnly="true" association="_4UBrdxwOEe-urICxG0GjCg">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_4TjxZxwOEe-urICxG0GjCg" value="Pattern.compile(EMAIL_PATTERN)"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_4TjxaBwOEe-urICxG0GjCg" name="indirizzo" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_4TjxaRwOEe-urICxG0GjCg" name="comprensorioAppartenenza" type="_4PzSwBwOEe-urICxG0GjCg" association="_4T69zRwOEe-urICxG0GjCg"/>
              <ownedAttribute xmi:id="_4TjxahwOEe-urICxG0GjCg" name="proposte" visibility="private" type="_4Ss1whwOEe-urICxG0GjCg" association="_4UCSgRwOEe-urICxG0GjCg"/>
              <ownedAttribute xmi:id="_fXtekC13Ee-8Nr2H9gftQA" name="TIPO_UTENTE" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_fXtekS13Ee-8Nr2H9gftQA" value="'f'"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_4TOaMBwOEe-urICxG0GjCg" client="_4P7OkBwOEe-urICxG0GjCg" supplier="_4Ss1wBwOEe-urICxG0GjCg" contract="_4Ss1wBwOEe-urICxG0GjCg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4Tya4BwOEe-urICxG0GjCg" name="Fruitore" specification="_4S1_sxwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4Tya4RwOEe-urICxG0GjCg" name="comprensorioAppartenenza" type="_4PzSwBwOEe-urICxG0GjCg"/>
                <ownedParameter xmi:id="_4Tya4hwOEe-urICxG0GjCg" name="credenziali" type="_4P1vABwOEe-urICxG0GjCg"/>
                <ownedParameter xmi:id="_4Tya4xwOEe-urICxG0GjCg" name="indirizzo">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_4Tya5BwOEe-urICxG0GjCg" type="_4P7OkBwOEe-urICxG0GjCg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(TIPO_UTENTE, credenziali);
     this.indirizzo = indirizzo;
     this.comprensorioAppartenenza = comprensorioAppartenenza;
     this.proposte = new ArrayList&lt;>();
     setIsDefinitivo(true);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4Tya5RwOEe-urICxG0GjCg" name="setIndirizzo" specification="_4P71oBwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4Tya5hwOEe-urICxG0GjCg" name="indirizzo">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>this.indirizzo = indirizzo;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4Tya5xwOEe-urICxG0GjCg" name="getProposte" specification="_4P71ohwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4Tya6BwOEe-urICxG0GjCg" type="_4Ss1whwOEe-urICxG0GjCg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return proposte;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4Tya6xwOEe-urICxG0GjCg" name="setIsDefinitivo" specification="_4P8csRwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4Tya7BwOEe-urICxG0GjCg" name="x">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>this.credenziali.setDefinitive(x);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4Tya7RwOEe-urICxG0GjCg" name="isValidEmail" specification="_4P9DwRwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4Tya7hwOEe-urICxG0GjCg" name="email">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_4Tya7xwOEe-urICxG0GjCg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Matcher matcher = pattern.matcher(email);
     return matcher.matches();
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_fX32oC13Ee-8Nr2H9gftQA" name="addProposte" specification="_fXk7sS13Ee-8Nr2H9gftQA">
                <ownedParameter xmi:id="_fX32oS13Ee-8Nr2H9gftQA" name="proposta" type="_fXkUoC13Ee-8Nr2H9gftQA"/>
                <language>java</language>
                <body>this.proposte.add(proposta);
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_4P71oBwOEe-urICxG0GjCg" name="setIndirizzo" method="_4Tya5RwOEe-urICxG0GjCg">
                <ownedComment xmi:id="_fX7hBS13Ee-8Nr2H9gftQA">
                  <body>Imposta l'indirizzo del fruitore.
     * 
     * @param indirizzo L'indirizzo da impostare per il fruitore.</body>
                </ownedComment>
                <ownedParameter xmi:id="_4P71oRwOEe-urICxG0GjCg" name="indirizzo">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_4P71ohwOEe-urICxG0GjCg" name="getProposte" method="_4Tya5xwOEe-urICxG0GjCg">
                <ownedComment xmi:id="_fX7hBi13Ee-8Nr2H9gftQA">
                  <body>Restituisce le proposte di scambio del fruitore.
     * 
     * @return Le proposte di scambio del fruitore.</body>
                </ownedComment>
                <ownedParameter xmi:id="_4TPBQBwOEe-urICxG0GjCg" type="_4Ss1whwOEe-urICxG0GjCg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_4P8csRwOEe-urICxG0GjCg" name="setIsDefinitivo" method="_4Tya6xwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4P8cshwOEe-urICxG0GjCg" name="x">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_4P9DwRwOEe-urICxG0GjCg" name="isValidEmail" isStatic="true" method="_4Tya7RwOEe-urICxG0GjCg">
                <ownedComment xmi:id="_fX7hCC13Ee-8Nr2H9gftQA">
                  <body>Verifica se un indirizzo email è valido.
     * 
     * @param email L'indirizzo email da verificare.
     * @return True se l'indirizzo email è valido, False altrimenti.</body>
                </ownedComment>
                <ownedParameter xmi:id="_4P9DwhwOEe-urICxG0GjCg" name="email">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_4P9DwxwOEe-urICxG0GjCg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_4S1_sxwOEe-urICxG0GjCg" name="Fruitore" method="_4Tya4BwOEe-urICxG0GjCg">
                <eAnnotations xmi:id="_4S1_txwOEe-urICxG0GjCg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_4S2mwBwOEe-urICxG0GjCg" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_fX7hBC13Ee-8Nr2H9gftQA">
                  <body>Costruttore della classe Fruitore.
     * Crea un nuovo fruitore con le credenziali specificate.
     * 
     * @param comprensorioAppartenenza Il comprensorio a cui il fruitore appartiene.
     * @param credenziali              Le credenziali associate al fruitore.
     * @param indirizzo                L'indirizzo del fruitore.</body>
                </ownedComment>
                <ownedParameter xmi:id="_4S1_tBwOEe-urICxG0GjCg" name="comprensorioAppartenenza" type="_4PzSwBwOEe-urICxG0GjCg"/>
                <ownedParameter xmi:id="_4S1_tRwOEe-urICxG0GjCg" name="credenziali" type="_4P1vABwOEe-urICxG0GjCg"/>
                <ownedParameter xmi:id="_4S1_thwOEe-urICxG0GjCg" name="indirizzo">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_4S2mwRwOEe-urICxG0GjCg" type="_4P7OkBwOEe-urICxG0GjCg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_fXk7sS13Ee-8Nr2H9gftQA" name="addProposte" method="_fX32oC13Ee-8Nr2H9gftQA">
                <ownedComment xmi:id="_fX7hBy13Ee-8Nr2H9gftQA">
                  <body>Aggiunge una proposta di scambio alla lista delle proposte del fruitore.
     * 
     * @param proposta La proposta di scambio da aggiungere.</body>
                </ownedComment>
                <ownedParameter xmi:id="_fXk7si13Ee-8Nr2H9gftQA" name="proposta" type="_fXkUoC13Ee-8Nr2H9gftQA"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_4P9q0BwOEe-urICxG0GjCg" name="Geografia">
              <ownedComment xmi:id="_fX6S4i13Ee-8Nr2H9gftQA">
                <body>La classe Geografia rappresenta l'insieme di tutti i comprensori del sistema.

Autore: Daniele Martinelli e Federico Sabbadini</body>
              </ownedComment>
              <ownedAttribute xmi:id="_4TkYchwOEe-urICxG0GjCg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_4TkYcxwOEe-urICxG0GjCg" value="1L"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_4TkYdBwOEe-urICxG0GjCg" name="geografia" type="_4Ss1whwOEe-urICxG0GjCg" isReadOnly="true" association="_4UCShBwOEe-urICxG0GjCg"/>
              <ownedAttribute xmi:id="_icUpoC14Ee-8Nr2H9gftQA" name="comprensorioAppartenenza_1" visibility="public" type="_4PzSwBwOEe-urICxG0GjCg" association="_icUpoS14Ee-8Nr2H9gftQA"/>
              <interfaceRealization xmi:id="_4TPoUBwOEe-urICxG0GjCg" client="_4P9q0BwOEe-urICxG0GjCg" supplier="_4Ss1wBwOEe-urICxG0GjCg" contract="_4Ss1wBwOEe-urICxG0GjCg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4Tya8BwOEe-urICxG0GjCg" name="Geografia" specification="_4P-R4BwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4Tya8RwOEe-urICxG0GjCg" type="_4P9q0BwOEe-urICxG0GjCg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>this.geografia = new ArrayList&lt;>();
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4Tya8hwOEe-urICxG0GjCg" name="addComprensorio" specification="_4S3N0BwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4Tya8xwOEe-urICxG0GjCg" name="comprensorio" type="_4PzSwBwOEe-urICxG0GjCg"/>
                <language>java</language>
                <body>this.geografia.add(comprensorio);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4Tya9BwOEe-urICxG0GjCg" name="cercaComprensorio" specification="_4P-R5BwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4Tya9RwOEe-urICxG0GjCg" name="nome">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_4Tya9hwOEe-urICxG0GjCg" type="_4PzSwBwOEe-urICxG0GjCg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>for (Comprensorio comprensorio : geografia) {
         if (comprensorio.getNome().equals(nome))
             return comprensorio;
     }
     return null;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4Tya9xwOEe-urICxG0GjCg" name="verificaEsistenzaComprensorio" specification="_4P-R5hwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4Tya-BwOEe-urICxG0GjCg" name="nome">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_4Tya-RwOEe-urICxG0GjCg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return cercaComprensorio(nome) != null;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4Tya-hwOEe-urICxG0GjCg" name="toString" specification="_4P-48BwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4Tya-xwOEe-urICxG0GjCg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>StringBuilder sb = new StringBuilder();
     for (Comprensorio comprensorio : geografia) {
         sb.append(comprensorio.toString());
         sb.append(&quot;\n&quot;);
     }
     return sb.toString();
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_4P-R4BwOEe-urICxG0GjCg" name="Geografia" method="_4Tya8BwOEe-urICxG0GjCg">
                <eAnnotations xmi:id="_4P-R4RwOEe-urICxG0GjCg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_4P-R4hwOEe-urICxG0GjCg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_4P-R4xwOEe-urICxG0GjCg" type="_4P9q0BwOEe-urICxG0GjCg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_4P-R5BwOEe-urICxG0GjCg" name="cercaComprensorio" method="_4Tya9BwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4P-R5RwOEe-urICxG0GjCg" name="nome">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_4S3N0hwOEe-urICxG0GjCg" type="_4PzSwBwOEe-urICxG0GjCg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_4P-R5hwOEe-urICxG0GjCg" name="verificaEsistenzaComprensorio" method="_4Tya9xwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4P-R5xwOEe-urICxG0GjCg" name="nome">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_4P-R6BwOEe-urICxG0GjCg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_4P-48BwOEe-urICxG0GjCg" name="toString" method="_4Tya-hwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4P-48RwOEe-urICxG0GjCg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_4S3N0BwOEe-urICxG0GjCg" name="addComprensorio" method="_4Tya8hwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4S3N0RwOEe-urICxG0GjCg" name="comprensorio" type="_4PzSwBwOEe-urICxG0GjCg"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_4P_gABwOEe-urICxG0GjCg" name="Gerarchia">
              <ownedComment xmi:id="_epH6RC13Ee-8Nr2H9gftQA">
                <body>La classe Gerarchia rappresenta l'insieme di tutti gli 
alberi nel sistema e gestisce le operazioni su di essi.

Autore: Daniele Martinelli e Federico Sabbadini</body>
              </ownedComment>
              <ownedAttribute xmi:id="_4Tk_gRwOEe-urICxG0GjCg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_4Tk_ghwOEe-urICxG0GjCg" value="1L"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_4Tk_gxwOEe-urICxG0GjCg" name="alberi" visibility="private" type="_4Ss1whwOEe-urICxG0GjCg" association="_4UC5kRwOEe-urICxG0GjCg"/>
              <ownedAttribute xmi:id="_4Tk_hhwOEe-urICxG0GjCg" name="radici" visibility="private" type="_4Ss1whwOEe-urICxG0GjCg" association="_4UDgoRwOEe-urICxG0GjCg"/>
              <ownedAttribute xmi:id="_4TlmkhwOEe-urICxG0GjCg" name="foglie" type="_4Ss1whwOEe-urICxG0GjCg" isReadOnly="true" association="_4UDgpBwOEe-urICxG0GjCg"/>
              <ownedAttribute xmi:id="_uFS34C14Ee-8Nr2H9gftQA" name="comprensorioAppartenenza_1_1" visibility="public" type="_4PvBVBwOEe-urICxG0GjCg" association="_uFS34S14Ee-8Nr2H9gftQA"/>
              <interfaceRealization xmi:id="_4TPoURwOEe-urICxG0GjCg" client="_4P_gABwOEe-urICxG0GjCg" supplier="_4Ss1wBwOEe-urICxG0GjCg" contract="_4Ss1wBwOEe-urICxG0GjCg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4Tya_BwOEe-urICxG0GjCg" name="Gerarchia" specification="_4P_gARwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4Tya_RwOEe-urICxG0GjCg" type="_4P_gABwOEe-urICxG0GjCg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>this.alberi = new ArrayList&lt;>();
     this.radici = new ArrayList&lt;>();
     this.foglie = new ArrayList&lt;>();
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4Tya_hwOEe-urICxG0GjCg" name="addAlbero" specification="_4S304hwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4Tya_xwOEe-urICxG0GjCg" name="albero" type="_4PvBVBwOEe-urICxG0GjCg"/>
                <language>java</language>
                <body>alberi.add(albero);
     radici.add(albero.getRadice());
     foglie.addAll(albero.getFoglie());
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4TybABwOEe-urICxG0GjCg" name="verificaEsistenzaNomeRadice" specification="_4QAHEBwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4TybARwOEe-urICxG0GjCg" name="nome">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_4TybAhwOEe-urICxG0GjCg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>for (Nodo albero : radici) {
         if (albero.getNome().equals(nome)) {
             return true;
         }
     }
     return false;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4TzB8BwOEe-urICxG0GjCg" name="visualizzaFoglia" specification="_4QAHExwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4TzB8RwOEe-urICxG0GjCg" name="nomeNodo">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_4TzB8hwOEe-urICxG0GjCg" name="root">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_4TzB8xwOEe-urICxG0GjCg" type="_4QDKZBwOEe-urICxG0GjCg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return visualizza(nomeNodo, root, this.radici);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4TzB9BwOEe-urICxG0GjCg" name="visualizzaRadice" specification="_4QAHFhwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4TzB9RwOEe-urICxG0GjCg" name="root">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_4TzB9hwOEe-urICxG0GjCg" type="_4QDKZBwOEe-urICxG0GjCg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>for (Nodo nodo : this.radici) 
         if (nodo.getNome().equals(root)) 
         	return nodo;
     return null;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4TzB9xwOEe-urICxG0GjCg" name="visualizza" specification="_4TPoUhwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4TzB-BwOEe-urICxG0GjCg" name="nomeNodo">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_4TzB-RwOEe-urICxG0GjCg" name="root">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_4TzB-hwOEe-urICxG0GjCg" name="list" type="_4S304BwOEe-urICxG0GjCg"/>
                <ownedParameter xmi:id="_4TzB-xwOEe-urICxG0GjCg" type="_4QDKZBwOEe-urICxG0GjCg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>for (Nodo nodo : list) {
         if (nodo.getNome().equals(root)) {
             for (Nodo nodoChild : nodo.getChildren()) {
                 if (nodoChild.isLeaf()) {
                     if (nodoChild.getNome().equals(nomeNodo))
                         return nodoChild;
                 } else {
                     Nodo foundNode = visualizza(nomeNodo, nodoChild.getNome(), nodo.getChildren());
                     if (foundNode != null) {
                         return foundNode;
                     }
                 }
             }
         }
     }
     return null;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4TzB_BwOEe-urICxG0GjCg" name="toString" specification="_4QAHGBwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4TzB_RwOEe-urICxG0GjCg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>StringBuilder builder = new StringBuilder();
     
     for (Nodo nodo : radici)  {
         builder.append(&quot;\n\n&quot;);
         try {
             builder.append(new Albero(nodo).toString());
         } catch (Exception e) {
             e.printStackTrace();
         }

     }
     return builder.toString();     
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4TzB_hwOEe-urICxG0GjCg" name="toStringRadici" specification="_4QAuJBwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4TzB_xwOEe-urICxG0GjCg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>StringBuffer bf = new StringBuffer();
     
     for (Nodo nodo : this.radici)  {
         bf.append(&quot;\n* &quot; + nodo.getNome());

     }
     return bf.toString();
         
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_4P_gARwOEe-urICxG0GjCg" name="Gerarchia" method="_4Tya_BwOEe-urICxG0GjCg">
                <eAnnotations xmi:id="_4P_gAhwOEe-urICxG0GjCg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_4P_gAxwOEe-urICxG0GjCg" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_epH6RS13Ee-8Nr2H9gftQA">
                  <body>Costruttore della classe Gerarchia.</body>
                </ownedComment>
                <ownedParameter xmi:id="_4P_gBBwOEe-urICxG0GjCg" type="_4P_gABwOEe-urICxG0GjCg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_4QAHEBwOEe-urICxG0GjCg" name="verificaEsistenzaNomeRadice" method="_4TybABwOEe-urICxG0GjCg">
                <ownedComment xmi:id="_epH6Ry13Ee-8Nr2H9gftQA">
                  <body>Verifica se esiste un nodo radice con il dato nome nella gerarchia.
     * 
     * @param nome Il nome del nodo radice da cercare
     * @return true se esiste un nodo radice con il nome specificato, false altrimenti</body>
                </ownedComment>
                <ownedParameter xmi:id="_4QAHERwOEe-urICxG0GjCg" name="nome">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_4QAHEhwOEe-urICxG0GjCg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_4QAHExwOEe-urICxG0GjCg" name="visualizzaFoglia" method="_4TzB8BwOEe-urICxG0GjCg">
                <ownedComment xmi:id="_epH6SC13Ee-8Nr2H9gftQA">
                  <body>Restituisce il nodo corrispondente al nome specificato nella gerarchia.
     * 
     * @param nomeNodo Il nome del nodo da cercare
     * @param root La radice della gerarchia
     * @return Il nodo corrispondente al nome specificato, null se non trovato</body>
                </ownedComment>
                <ownedParameter xmi:id="_4QAHFBwOEe-urICxG0GjCg" name="nomeNodo">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_4QAHFRwOEe-urICxG0GjCg" name="root">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_4S305BwOEe-urICxG0GjCg" type="_4QDKZBwOEe-urICxG0GjCg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_4QAHFhwOEe-urICxG0GjCg" name="visualizzaRadice" method="_4TzB9BwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4QAHFxwOEe-urICxG0GjCg" name="root">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_4S305RwOEe-urICxG0GjCg" type="_4QDKZBwOEe-urICxG0GjCg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_4QAHGBwOEe-urICxG0GjCg" name="toString" method="_4TzB_BwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4QAuIBwOEe-urICxG0GjCg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_4QAuJBwOEe-urICxG0GjCg" name="toStringRadici" method="_4TzB_hwOEe-urICxG0GjCg">
                <ownedComment xmi:id="_epH6Si13Ee-8Nr2H9gftQA">
                  <body>Restituisce una rappresentazione testuale della 
     * gerarchia (di tutti i suoi alberi).
     * 
     * @param alberi La lista degli alberi di nodi
     * @return Una stringa che rappresenta la gerarchia</body>
                </ownedComment>
                <ownedParameter xmi:id="_4QAuJRwOEe-urICxG0GjCg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_4S304hwOEe-urICxG0GjCg" name="addAlbero" method="_4Tya_hwOEe-urICxG0GjCg">
                <ownedComment xmi:id="_epH6Ri13Ee-8Nr2H9gftQA">
                  <body>Aggiunge un albero alla gerarchia.
     * 
     * @param albero Il nodo radice dell'albero da aggiungere</body>
                </ownedComment>
                <ownedParameter xmi:id="_4S304xwOEe-urICxG0GjCg" name="albero" type="_4PvBVBwOEe-urICxG0GjCg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_4TPoUhwOEe-urICxG0GjCg" name="visualizza" visibility="private" isStatic="true" method="_4TzB9xwOEe-urICxG0GjCg">
                <ownedComment xmi:id="_epH6SS13Ee-8Nr2H9gftQA">
                  <body>Restituisce il nodo corrispondente al nome specificato nella gerarchia.
     * 
     * @param nomeNodo Il nome del nodo da cercare
     * @param root La radice della gerarchia
     * @param list La lista di nodi in cui cercare
     * @return Il nodo corrispondente al nome specificato, null se non trovato</body>
                </ownedComment>
                <ownedParameter xmi:id="_4TPoUxwOEe-urICxG0GjCg" name="nomeNodo">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_4TPoVBwOEe-urICxG0GjCg" name="root">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_4TPoVRwOEe-urICxG0GjCg" name="list" type="_4S304BwOEe-urICxG0GjCg"/>
                <ownedParameter xmi:id="_4TQPYBwOEe-urICxG0GjCg" type="_4QDKZBwOEe-urICxG0GjCg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_4QBVMBwOEe-urICxG0GjCg" name="LeafHasChildrenException">
              <ownedComment xmi:id="_4T692xwOEe-urICxG0GjCg">
                <body>Eccezione personalizzata per gestire il caso in cui unafoglia 
tenti di aggiungere figli, il che non è consentito.</body>
              </ownedComment>
              <generalization xmi:id="_4TQPYhwOEe-urICxG0GjCg" general="_4TNMEBwOEe-urICxG0GjCg"/>
              <ownedAttribute xmi:id="_4TlmlBwOEe-urICxG0GjCg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_4TmNoBwOEe-urICxG0GjCg" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4TzCABwOEe-urICxG0GjCg" name="LeafHasChildrenException" specification="_4QB8QBwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4TzCARwOEe-urICxG0GjCg" type="_4QBVMBwOEe-urICxG0GjCg" direction="return"/>
                <language>java</language>
                <body>super(&quot;Le foglie non possono avere figli&quot;);
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_4QB8QBwOEe-urICxG0GjCg" name="LeafHasChildrenException" method="_4TzCABwOEe-urICxG0GjCg">
                <eAnnotations xmi:id="_4QB8QRwOEe-urICxG0GjCg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_4QB8QhwOEe-urICxG0GjCg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_4QB8QxwOEe-urICxG0GjCg" type="_4QBVMBwOEe-urICxG0GjCg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_4QB8RBwOEe-urICxG0GjCg" name="Main">
              <ownedComment xmi:id="_fX6S4y13Ee-8Nr2H9gftQA">
                <body>Classe Main per l'esecuzione del programma.

Autore: Daniele Martinelli e Federico Sabbadini</body>
              </ownedComment>
              <ownedAttribute xmi:id="_4TmNoRwOEe-urICxG0GjCg" name="vociC" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_4TmNohwOEe-urICxG0GjCg" value="*"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_4TmNpBwOEe-urICxG0GjCg" value="{&quot;Introdurre comprensorio geografico&quot;, &quot;Introdurre albero&quot;, &quot;Visualizza comprensorio&quot;, &#xA;&#x9;&#x9;&#x9;&quot;Visualizza gerarchia&quot;, &quot;Visualizza fattori di conversione&quot;, &quot;Visualizza proposte&quot;, &quot;Visualizza insiemi chiusi&quot;}"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_4TmNphwOEe-urICxG0GjCg" name="vociF" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_4TmNpxwOEe-urICxG0GjCg" value="*"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_4Tm0sBwOEe-urICxG0GjCg" value="{&quot;Naviga nella gerarchia&quot;, &quot;Proponi uno scambio&quot;, &quot;Visualizza proposte&quot;, &quot;Ritira Proposte&quot;}"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_4Tm0shwOEe-urICxG0GjCg" name="vociAccesso" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_4Tm0sxwOEe-urICxG0GjCg" value="*"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_4Tm0tRwOEe-urICxG0GjCg" value="{&quot;Registrazione&quot;,&quot;Login&quot;}"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4TzCAhwOEe-urICxG0GjCg" name="main" specification="_4QCjUBwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4TzCAxwOEe-urICxG0GjCg" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_4TzCBBwOEe-urICxG0GjCg" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>MyMenu menuAccesso = new MyMenu(&quot;Menu accesso&quot;, vociAccesso);
	    MyMenu menuC = new MyMenu(&quot;Menu principale&quot;, vociC);
	    MyMenu menuF = new MyMenu(&quot;Menu principale&quot;, vociF);

     // Caricamento da file
     Utenza utenza = FileManager.caricaUtenza();
     Gerarchia gerarchia = FileManager.caricaGerarchia();
     Geografia geografia = FileManager.caricaGeografia();
     Commercio commercio = FileManager.caricaCommercio();

     if (utenza == null || gerarchia == null || geografia == null || commercio == null) {
         // Inizializzazione predefinita degli oggetti solo se non sono stati caricati da file
         DefaultInitializer defaultInitializer = DefaultInitializer.getDefaultInitializer();
         if (gerarchia == null)
         	gerarchia = defaultInitializer.getGerarchia();
         if (utenza == null)
         	utenza = defaultInitializer.getUtenza();
         if (geografia == null)
         	geografia = defaultInitializer.getGeografia();
         if (commercio == null)
         	commercio = defaultInitializer.getCommercio();

     } else {
         System.out.println(&quot;Lettura da file: &quot; 
                + FileManager.getUtenzaFile() 
         + &quot;, &quot; + FileManager.getGerarchiaFile() 
         + &quot;, &quot; + FileManager.getGeografiaFile()
         + &quot;, &quot; + FileManager.getCommercioFile());
     }

	    boolean tipoFunzionamento = false;
	    int accesso;
	    do {
	        accesso = menuAccesso.scegli();
	        switch (accesso) {
	            case 1:
	            	if (InputDati.yesOrNo(&quot;Vuoi essere un fruitore? &quot;)) {
	                    System.out.print(geografia.toString());
		            	Application.registrazioneF(utenza, geografia);
	            	}

	            	else
	            		Application.registrazioneC(utenza);
	                break;

	            case 2:
	            	if (InputDati.yesOrNo(&quot;Sei un fruitore?&quot;)) {
	            		
	            		accesso = Application.login(utenza, Fruitore.TIPO_UTENTE);
	            		tipoFunzionamento=false;
	            	} else {
	            		accesso = Application.login(utenza, Configuratore.TIPOUTENTE);
	            		tipoFunzionamento=true;
	            	}
	                break;

	            default:
	                break;
	        }
	    } while (accesso == 1);

	    //modalità configuratre
     int scelta;
	    if (accesso != 0 &amp;&amp; tipoFunzionamento) {
	        do {
	            scelta = menuC.scegli();
	            switch (scelta) {

	                case 1:
	                	Application.creaComprensorio(geografia);
	                    break;

	                case 2:
	                    ArrayList&lt;Nodo> foglieAttuali = new ArrayList&lt;>();
	                    Nodo root = Application.creaRadice(gerarchia);
	                    Application.creaNodiFiglio(root, gerarchia, root, foglieAttuali);
	                    gerarchia.addAlbero(new Albero(root));
	                    Application.creaFattoriConversione(gerarchia, foglieAttuali);
	                    break;

	                case 3:
	                    System.out.print(geografia.toString());
	                    break;

	                case 4:
	                	String ger = gerarchia.toString();
	                    System.out.println(ger);
	                    break;

	                case 5:
	                	Application.stampaFattori(gerarchia);
	                    break;
	                    
	                case 6:
	                	Application.visualizzaProposteFoglia(commercio, gerarchia);
	                    break;
	                    
	                case 7:
	                	Application.visualizzaInsiemiChiusi(commercio);
	                    break;

	                default:
	                    break;
	            }
	        } while (scelta != 0);
	    }
	    
	    
	    //modalità fruitore
	    if (accesso != 0 &amp;&amp; !tipoFunzionamento) {
	    	commercio.setUtenteDiSessione((Fruitore)utenza.getUtenteDiSessione());
	    	
		    do {
	            scelta = menuF.scegli();
	            switch (scelta) {

	                case 1:
	                	Application.navigaGerarchia(gerarchia);
							
	                    break;
	                    
	                case 2:
	                	Application.proponiScambio(utenza, gerarchia, commercio);
		                break;
		                
	                case 3:
	                	Application.visualizzaProposte(commercio);
	                break;
	                
	                case 4:
	                	Application.ritiraProposte(commercio);
	                break;

	                default:
	                    break;
	            }
	        } while (scelta != 0);
	    }

	    FileManager.salvaSuFile(gerarchia);
	    FileManager.salvaSuFile(utenza);
	    FileManager.salvaSuFile(geografia);
	    FileManager.salvaSuFile(commercio);
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_4QCjUBwOEe-urICxG0GjCg" name="main" isStatic="true" method="_4TzCAhwOEe-urICxG0GjCg" raisedException="_fXZVgC13Ee-8Nr2H9gftQA _fXajoC13Ee-8Nr2H9gftQA">
                <ownedParameter xmi:id="_4QCjURwOEe-urICxG0GjCg" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_4QCjUhwOEe-urICxG0GjCg" value="*"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_4QCjUxwOEe-urICxG0GjCg" name="NodeNotLeafException">
              <generalization xmi:id="_4TQ2cBwOEe-urICxG0GjCg" general="_4TNMEBwOEe-urICxG0GjCg"/>
              <ownedAttribute xmi:id="_4Tm0txwOEe-urICxG0GjCg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_4Tm0uBwOEe-urICxG0GjCg" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4TzCBRwOEe-urICxG0GjCg" name="NodeNotLeafException" specification="_4QDKYBwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4TzCBhwOEe-urICxG0GjCg" type="_4QCjUxwOEe-urICxG0GjCg" direction="return"/>
                <language>java</language>
                <body>super(&quot;Il nodo non e' foglia! &quot;);
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_4QDKYBwOEe-urICxG0GjCg" name="NodeNotLeafException" method="_4TzCBRwOEe-urICxG0GjCg">
                <eAnnotations xmi:id="_4QDKYRwOEe-urICxG0GjCg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_4QDKYhwOEe-urICxG0GjCg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_4QDKYxwOEe-urICxG0GjCg" type="_4QCjUxwOEe-urICxG0GjCg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_4QDKZBwOEe-urICxG0GjCg" name="Nodo">
              <ownedComment xmi:id="_fX658S13Ee-8Nr2H9gftQA">
                <body>La classe Nodo rappresenta un nodo all'interno di un albero.
Ogni nodo può essere una foglia o una non foglia.
Se un nodo è una foglia, contiene i fattori di conversione verso altri nodi.
Se un nodo è una non foglia, può avere figli e contiene informazioni sul campo e sul dominio.

Autore: Daniele Martinelli e Federico Sabbadini</body>
              </ownedComment>
              <ownedAttribute xmi:id="_4Tm0uRwOEe-urICxG0GjCg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_4TnbwBwOEe-urICxG0GjCg" value="1L"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_4TnbwRwOEe-urICxG0GjCg" name="nome" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_4TnbwhwOEe-urICxG0GjCg" name="isLeaf" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_4TnbxBwOEe-urICxG0GjCg" name="root" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_4TnbxhwOEe-urICxG0GjCg" name="children" type="_4QDKZBwOEe-urICxG0GjCg" isOrdered="true" isReadOnly="true" association="_4UDgpxwOEe-urICxG0GjCg">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_4TnbxxwOEe-urICxG0GjCg" value="*"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_4TnbyBwOEe-urICxG0GjCg" name="campo" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_4ToC0RwOEe-urICxG0GjCg" name="dominio" type="_4S304BwOEe-urICxG0GjCg" isReadOnly="true" association="_4UEHsRwOEe-urICxG0GjCg"/>
              <ownedAttribute xmi:id="_4ToC0xwOEe-urICxG0GjCg" name="MIN_FATTORECONVERSIONE" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_4ToC1BwOEe-urICxG0GjCg" value="0.5"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_4ToC1RwOEe-urICxG0GjCg" name="MAX_FATTORECONVERSIONE" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_4ToC1hwOEe-urICxG0GjCg" value="2.0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_4ToC1xwOEe-urICxG0GjCg" name="fattori" type="_4S5DABwOEe-urICxG0GjCg" isReadOnly="true" association="_4UEHtBwOEe-urICxG0GjCg"/>
              <interfaceRealization xmi:id="_4TQ2cRwOEe-urICxG0GjCg" client="_4QDKZBwOEe-urICxG0GjCg" supplier="_4Ss1wBwOEe-urICxG0GjCg" contract="_4Ss1wBwOEe-urICxG0GjCg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4TzCCRwOEe-urICxG0GjCg" name="Nodo" specification="_4QDxcBwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4TzCChwOEe-urICxG0GjCg" name="nome">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_4TzCCxwOEe-urICxG0GjCg" name="root">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_4TzCDBwOEe-urICxG0GjCg" name="campo">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_4TzCDRwOEe-urICxG0GjCg" type="_4QDKZBwOEe-urICxG0GjCg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>this.root = root;
		this.campo = campo;
		this.nome = nome;
		this.isLeaf = false;
		this.children = new ArrayList&lt;>();
		this.dominio = new ArrayList&lt;>();
		
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4TzCDhwOEe-urICxG0GjCg" name="Nodo" specification="_4QEYgxwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4TzCDxwOEe-urICxG0GjCg" name="nome">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_4TzCEBwOEe-urICxG0GjCg" name="root">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_4TzCERwOEe-urICxG0GjCg" type="_4QDKZBwOEe-urICxG0GjCg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>this.nome = nome;
		this.root = root;
		this.isLeaf = true;
		this.fattori = new HashMap&lt;Nodo, Double>();
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4TzpABwOEe-urICxG0GjCg" name="isLeaf" specification="_4QEYiRwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4TzpARwOEe-urICxG0GjCg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return isLeaf;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4TzpAhwOEe-urICxG0GjCg" name="root" specification="_4QEYixwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4TzpAxwOEe-urICxG0GjCg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return root;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4TzpBBwOEe-urICxG0GjCg" name="getCampo" specification="_4QEYjRwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4TzpBRwOEe-urICxG0GjCg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return campo;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4TzpBhwOEe-urICxG0GjCg" name="getDominio" specification="_4QE_kBwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4TzpBxwOEe-urICxG0GjCg" name="i">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_4TzpCBwOEe-urICxG0GjCg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String[] ret = this.dominio.get(i - 1);
		return ret[0];
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4TzpCRwOEe-urICxG0GjCg" name="addElementiDominio" specification="_4QE_kxwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4TzpChwOEe-urICxG0GjCg" name="valore">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_4TzpCxwOEe-urICxG0GjCg" name="descrizione">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>this.dominio.add(new String[] { valore, descrizione });
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4TzpDBwOEe-urICxG0GjCg" name="addElementiDominio" specification="_4QE_lhwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4TzpDRwOEe-urICxG0GjCg" name="valore">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>this.dominio.add(new String[] { valore });
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4TzpDhwOEe-urICxG0GjCg" name="addChild" specification="_4S6RIBwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4TzpDxwOEe-urICxG0GjCg" name="child" type="_4QDKZBwOEe-urICxG0GjCg"/>
                <language>java</language>
                <body>if (this.isLeaf)
			throw new LeafHasChildrenException();
		this.children.add(child);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4TzpEBwOEe-urICxG0GjCg" name="toString" specification="_4QE_mBwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4TzpERwOEe-urICxG0GjCg" name="blank">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_4TzpEhwOEe-urICxG0GjCg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>StringBuffer bf = new StringBuffer();
		bf.append(&quot; &quot; + nome + &quot;\n&quot; );
		bf.append(blank + &quot;campo: &quot; + campo + &quot;\n&quot; );
		bf.append(blank + toStringDomain() + &quot;\n&quot; );
		bf.append(blank + toStringChildren());
		
		return bf.toString();
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4TzpExwOEe-urICxG0GjCg" name="toStringFactors" specification="_4QE_mxwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4TzpFBwOEe-urICxG0GjCg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return toStringF(this.nome);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4TzpFRwOEe-urICxG0GjCg" name="toStringDomain" specification="_4QFmoRwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4TzpFhwOEe-urICxG0GjCg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>StringBuffer bf = new StringBuffer();
		bf.append(&quot;dominio: [&quot;);
		for (String[] elem : this.dominio) {
			bf.append(&quot;(valore: &quot; + elem[0].toString());
			if (elem.length > 1)
				bf.append(&quot;, descrizione: &quot; + elem[1].toString());
			bf.append(&quot;)&quot;);
		}
		bf.append(&quot;]&quot;);
		return bf.toString();
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4TzpFxwOEe-urICxG0GjCg" name="toStringChildren" specification="_4QFmoxwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4TzpGBwOEe-urICxG0GjCg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>StringBuffer bf = new StringBuffer();
		int num = this.children.size();
		if (num == 1)
			bf.append(num + &quot; figlio: [&quot;);
		else
			bf.append(num + &quot; figli: [&quot;);
		for (Nodo nodo : this.children) {
			bf.append(&quot;(&quot; + nodo.getNome());
			bf.append(&quot;)&quot;);
		}
		bf.append(&quot;]&quot;);
		return bf.toString();
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4TzpGRwOEe-urICxG0GjCg" name="verificaEsistenzaNome" specification="_4QFmpRwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4TzpGhwOEe-urICxG0GjCg" name="nome">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_4TzpGxwOEe-urICxG0GjCg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return verifica(nome, this);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4TzpHBwOEe-urICxG0GjCg" name="verifica" specification="_4S6RIhwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4TzpHRwOEe-urICxG0GjCg" name="nome">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_4TzpHhwOEe-urICxG0GjCg" name="radice" type="_4QDKZBwOEe-urICxG0GjCg"/>
                <ownedParameter xmi:id="_4TzpHxwOEe-urICxG0GjCg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>if (radice.isLeaf()) {
         return radice.getNome().equals(nome);
     } else {
         for (Nodo nodo : radice.getChildren()) {
             if (nodo.getNome().equals(nome) || verifica(nome, nodo)) {
                 return true;
             }
         }
         return false;
     }
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4TzpIBwOEe-urICxG0GjCg" name="toNavigationString" specification="_4QFmqBwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4TzpIRwOEe-urICxG0GjCg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>StringBuilder b = new StringBuilder();
 	b.append(&quot; nome: &quot; + this.nome);
 	
 	if (!this.isLeaf) {
     	b.append(&quot;\n |campo: &quot; + this.campo);
     	b.append(&quot;\n |dominio: &quot;);
     	int var = 0;
     	for (String[] valore : this.dominio) {
     		var++;
 			b.append(&quot;\n  &quot; + var + &quot; - &quot; + valore[0]);
 			if (valore.length>1)
 				b.append(&quot;, &quot; + valore [1]);
 		}
 	}	else
 		b.append(&quot; |foglia!|&quot;);
 	return b.toString();
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4TzpIhwOEe-urICxG0GjCg" name="fattoreFoglia" specification="_4S6RJhwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4TzpIxwOEe-urICxG0GjCg" name="nodo" type="_4QDKZBwOEe-urICxG0GjCg"/>
                <ownedParameter xmi:id="_4TzpJBwOEe-urICxG0GjCg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <language>java</language>
                <body>if (fattori.containsKey(nodo))
			return fattori.get(nodo);
		return 0;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4TzpJRwOEe-urICxG0GjCg" name="addFattoreConversione" specification="_4TRdghwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4TzpJhwOEe-urICxG0GjCg" name="foglia" type="_4QDKZBwOEe-urICxG0GjCg"/>
                <ownedParameter xmi:id="_4TzpJxwOEe-urICxG0GjCg" name="fattore" type="_4TRdgBwOEe-urICxG0GjCg"/>
                <language>java</language>
                <body>fattori.put(foglia, fattore);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4T0QEBwOEe-urICxG0GjCg" name="verificaFattoreConversione" specification="_4QGNsBwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4T0QERwOEe-urICxG0GjCg" name="fattore">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <ownedParameter xmi:id="_4T0QEhwOEe-urICxG0GjCg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return (fattore >= MIN_FATTORECONVERSIONE &amp;&amp; fattore &lt;= MAX_FATTORECONVERSIONE);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4T0QExwOEe-urICxG0GjCg" name="addTransitivoFattoreConversione" specification="_4S64MBwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4T0QFBwOEe-urICxG0GjCg" name="gerarchia" type="_4P_gABwOEe-urICxG0GjCg"/>
                <language>java</language>
                <body>for (Nodo nodo1 : gerarchia.getFoglie()) {
         for (Nodo nodo2 : gerarchia.getFoglie()) {
             if (!nodo1.equals(nodo2) &amp;&amp; nodo1.fattoreFoglia(nodo2) == 0) {
                 Double fattore = calcTransitivo(nodo1, nodo2, new ArrayList&lt;>());
                 if (fattore != null) {
                 	nodo1.addFattoreConversione(nodo2, fattore);
                 }
             }
         }
     }
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4T0QFRwOEe-urICxG0GjCg" name="calcTransitivo" specification="_4TRdhRwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4T0QFhwOEe-urICxG0GjCg" name="nodo1" type="_4QDKZBwOEe-urICxG0GjCg"/>
                <ownedParameter xmi:id="_4T0QFxwOEe-urICxG0GjCg" name="nodo2" type="_4QDKZBwOEe-urICxG0GjCg"/>
                <ownedParameter xmi:id="_4T0QGBwOEe-urICxG0GjCg" name="visitati" type="_4S304BwOEe-urICxG0GjCg"/>
                <ownedParameter xmi:id="_4T0QGRwOEe-urICxG0GjCg" type="_4TRdgBwOEe-urICxG0GjCg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>Map&lt;Nodo, Double> fact = nodo1.getFattori();
     if (nodo1.equals(nodo2)) {
         return 1.0;
     } else if (nodo1.fattoreFoglia(nodo2) != 0) {
         return nodo1.fattoreFoglia(nodo2);
     } else {
         if (fact.isEmpty())
             return null;
         for (Map.Entry&lt;Nodo, Double> entry : fact.entrySet()) {
             Nodo key = entry.getKey();
             if (!visitati.contains(key)) {
                 visitati.add(key);
                 Double val = calcTransitivo(key, nodo2, visitati);
                 if (val != null) {
                     return entry.getValue() * val;
                 }
             }
         }
     }
     return null; // Restituiamo null se non è possibile calcolare il fattore di conversione
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4T0QHBwOEe-urICxG0GjCg" name="toStringF" specification="_4QGNtRwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4T0QHRwOEe-urICxG0GjCg" name="nome">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_4T0QHhwOEe-urICxG0GjCg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>StringBuffer bf = new StringBuffer();
		for (Entry&lt;Nodo, Double> fatt : this.fattori.entrySet()) {
			Nodo key = fatt.getKey();
			Double val = fatt.getValue();
			if (!nome.equals(key.getNome())) {
				// Formatta il double con un massimo di tre decimali
				String formattedVal = String.format(&quot;%.3f&quot;, val);
				bf.append(nome + &quot; - &quot; + key.getNome() + &quot; - &quot; + formattedVal);
				bf.append(&quot;\n&quot;);
			}
		}
		return bf.toString();
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_4QDxcBwOEe-urICxG0GjCg" name="Nodo" method="_4TzCCRwOEe-urICxG0GjCg">
                <eAnnotations xmi:id="_4QEYgBwOEe-urICxG0GjCg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_4QEYgRwOEe-urICxG0GjCg" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_fX658i13Ee-8Nr2H9gftQA">
                  <body>Costruttore non foglia.
	 * 
	 * @param nome   Il nome del nodo.
	 * @param isRoot True se il nodo è la radice dell'albero, false altrimenti.
	 * @param campo  Il campo associato al nodo (valido solo per i nodi non foglia).</body>
                </ownedComment>
                <ownedParameter xmi:id="_4QDxcRwOEe-urICxG0GjCg" name="nome">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_4QDxchwOEe-urICxG0GjCg" name="root">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_4QDxcxwOEe-urICxG0GjCg" name="campo">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_4QEYghwOEe-urICxG0GjCg" type="_4QDKZBwOEe-urICxG0GjCg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_4QEYgxwOEe-urICxG0GjCg" name="Nodo" method="_4TzCDhwOEe-urICxG0GjCg">
                <eAnnotations xmi:id="_4QEYhhwOEe-urICxG0GjCg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_4QEYhxwOEe-urICxG0GjCg" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_fX658y13Ee-8Nr2H9gftQA">
                  <body>Costruttore foglia.
	 * Una foglia non può essere radice, in quanto una radice 
	 * deve avere necessariamente almeno un figlio.
	 * 
	 * @param nome Il nome del nodo.</body>
                </ownedComment>
                <ownedParameter xmi:id="_4QEYhBwOEe-urICxG0GjCg" name="nome">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_4QEYhRwOEe-urICxG0GjCg" name="root">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_4QEYiBwOEe-urICxG0GjCg" type="_4QDKZBwOEe-urICxG0GjCg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_4QEYiRwOEe-urICxG0GjCg" name="isLeaf" method="_4TzpABwOEe-urICxG0GjCg">
                <ownedComment xmi:id="_fX659C13Ee-8Nr2H9gftQA">
                  <body>Verifica se il nodo è una foglia.
	 * 
	 * @return True se il nodo è una foglia, altrimenti False.</body>
                </ownedComment>
                <ownedParameter xmi:id="_4QEYihwOEe-urICxG0GjCg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_4QEYixwOEe-urICxG0GjCg" name="root" method="_4TzpAhwOEe-urICxG0GjCg">
                <ownedComment xmi:id="_fX659S13Ee-8Nr2H9gftQA">
                  <body>Verifica se il nodo è una radice.
	 * 
	 * @return True se il nodo è una radice, altrimenti False.</body>
                </ownedComment>
                <ownedParameter xmi:id="_4QEYjBwOEe-urICxG0GjCg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_4QEYjRwOEe-urICxG0GjCg" name="getCampo" method="_4TzpBBwOEe-urICxG0GjCg">
                <ownedComment xmi:id="_fX659i13Ee-8Nr2H9gftQA">
                  <body>Restituisce il campo associato al nodo.
	 * 
	 * @return Il campo associato al nodo.</body>
                </ownedComment>
                <ownedParameter xmi:id="_4QEYjhwOEe-urICxG0GjCg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_4QE_kBwOEe-urICxG0GjCg" name="getDominio" method="_4TzpBhwOEe-urICxG0GjCg">
                <ownedComment xmi:id="_fX659y13Ee-8Nr2H9gftQA">
                  <body>Restituisce il valore del dominio associato all'i-esimo figlio.
	 * 
	 * @param i L'indice del figlio.
	 * @return Il valore del dominio associato al nodo.</body>
                </ownedComment>
                <ownedParameter xmi:id="_4QE_kRwOEe-urICxG0GjCg" name="i">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_4QE_khwOEe-urICxG0GjCg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_4QE_kxwOEe-urICxG0GjCg" name="addElementiDominio" method="_4TzpCRwOEe-urICxG0GjCg">
                <ownedComment xmi:id="_fX65-C13Ee-8Nr2H9gftQA">
                  <body>Aggiunge un elemento al dominio del nodo.
	 * 
	 * @param valore       Il valore da aggiungere al dominio.
	 * @param descrizione  La descrizione associata al valore.</body>
                </ownedComment>
                <ownedParameter xmi:id="_4QE_lBwOEe-urICxG0GjCg" name="valore">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_4QE_lRwOEe-urICxG0GjCg" name="descrizione">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_4QE_lhwOEe-urICxG0GjCg" name="addElementiDominio" method="_4TzpDBwOEe-urICxG0GjCg">
                <ownedComment xmi:id="_fX65-S13Ee-8Nr2H9gftQA">
                  <body>Aggiunge un elemento al dominio del nodo.
	 * 
	 * @param valore Il valore da aggiungere al dominio.</body>
                </ownedComment>
                <ownedParameter xmi:id="_4QE_lxwOEe-urICxG0GjCg" name="valore">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_4QE_mBwOEe-urICxG0GjCg" name="toString" method="_4TzpEBwOEe-urICxG0GjCg">
                <ownedComment xmi:id="_fX65-y13Ee-8Nr2H9gftQA">
                  <body>Genera una stringa del dominio associato al nodo.
	 * 
	 * @return Una stringa rappresentante il dominio associato al nodo.</body>
                </ownedComment>
                <ownedParameter xmi:id="_4QE_mRwOEe-urICxG0GjCg" name="blank">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_4QE_mhwOEe-urICxG0GjCg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_4QE_mxwOEe-urICxG0GjCg" name="toStringFactors" method="_4TzpExwOEe-urICxG0GjCg">
                <ownedComment xmi:id="_fX65_C13Ee-8Nr2H9gftQA">
                  <body>Genera una stringa delle relazioni di una foglia con le altre foglie.
	 * 
	 * @return Una stringa rappresentante le relazioni con le foglie.</body>
                </ownedComment>
                <ownedParameter xmi:id="_4QFmoBwOEe-urICxG0GjCg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_4QFmoRwOEe-urICxG0GjCg" name="toStringDomain" visibility="private" method="_4TzpFRwOEe-urICxG0GjCg">
                <ownedComment xmi:id="_fX65_S13Ee-8Nr2H9gftQA">
                  <body>Genera una stringa del dominio associato al nodo.
	 * 
	 * @return Una stringa rappresentante il dominio associato al nodo.</body>
                </ownedComment>
                <ownedParameter xmi:id="_4QFmohwOEe-urICxG0GjCg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_4QFmoxwOEe-urICxG0GjCg" name="toStringChildren" visibility="private" method="_4TzpFxwOEe-urICxG0GjCg">
                <ownedComment xmi:id="_fX65_i13Ee-8Nr2H9gftQA">
                  <body>Genera una rappresentazione testuale dei figli del nodo.
	 * 
	 * @return Una stringa rappresentante i figli del nodo.</body>
                </ownedComment>
                <ownedParameter xmi:id="_4QFmpBwOEe-urICxG0GjCg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_4QFmpRwOEe-urICxG0GjCg" name="verificaEsistenzaNome" method="_4TzpGRwOEe-urICxG0GjCg">
                <ownedComment xmi:id="_fX65_y13Ee-8Nr2H9gftQA">
                  <body>Verifica se esiste un nodo non radice con il dato nome sotto il nodo radice specificato.
     * 
     * @param nome Il nome del nodo da cercare
     * @param radice Il nodo radice sotto il quale cercare
     * @return true se esiste un nodo con il nome specificato sotto il nodo radice, false altrimenti</body>
                </ownedComment>
                <ownedParameter xmi:id="_4QFmphwOEe-urICxG0GjCg" name="nome">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_4QFmpxwOEe-urICxG0GjCg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_4QFmqBwOEe-urICxG0GjCg" name="toNavigationString" method="_4TzpIBwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4QFmqRwOEe-urICxG0GjCg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_4QGNsBwOEe-urICxG0GjCg" name="verificaFattoreConversione" isStatic="true" method="_4T0QEBwOEe-urICxG0GjCg">
                <ownedComment xmi:id="_fX66Ay13Ee-8Nr2H9gftQA">
                  <body>Verifica se un dato fattore di conversione è valido.
     * 
     * @param fattore Il fattore di conversione da verificare
     * @return true se il fattore è compreso nell'intervallo consentito, false altrimenti</body>
                </ownedComment>
                <ownedParameter xmi:id="_4QGNsRwOEe-urICxG0GjCg" name="fattore">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <ownedParameter xmi:id="_4QGNshwOEe-urICxG0GjCg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_4QGNtRwOEe-urICxG0GjCg" name="toStringF" method="_4T0QHBwOEe-urICxG0GjCg">
                <ownedComment xmi:id="_fX7hAi13Ee-8Nr2H9gftQA">
                  <body>Genera una stringa delle relazioni di una foglia con le altre foglie.
	 * 
	 * @return Una stringa rappresentante le relazioni con le foglie.</body>
                </ownedComment>
                <ownedParameter xmi:id="_4QGNthwOEe-urICxG0GjCg" name="nome">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_4QGNtxwOEe-urICxG0GjCg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_4S6RIBwOEe-urICxG0GjCg" name="addChild" method="_4TzpDhwOEe-urICxG0GjCg" raisedException="_fXbKsC13Ee-8Nr2H9gftQA">
                <ownedComment xmi:id="_fX65-i13Ee-8Nr2H9gftQA">
                  <body>Aggiunge un nodo figlio a questo nodo.
	 * 
	 * @param child Il nodo figlio da aggiungere.
	 * @throws LeafHasChildrenException Se il nodo è una foglia, non può avere figli.</body>
                </ownedComment>
                <ownedParameter xmi:id="_4S6RIRwOEe-urICxG0GjCg" name="child" type="_4QDKZBwOEe-urICxG0GjCg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_4S6RIhwOEe-urICxG0GjCg" name="verifica" visibility="private" isStatic="true" method="_4TzpHBwOEe-urICxG0GjCg">
                <ownedComment xmi:id="_fX66AC13Ee-8Nr2H9gftQA">
                  <body>Verifica se esiste un nodo non radice con il dato nome sotto il nodo radice specificato.
     * 
     * @param nome Il nome del nodo da cercare
     * @param radice Il nodo radice sotto il quale cercare
     * @return true se esiste un nodo con il nome specificato sotto il nodo radice, false altrimenti</body>
                </ownedComment>
                <ownedParameter xmi:id="_4S6RIxwOEe-urICxG0GjCg" name="nome">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_4S6RJBwOEe-urICxG0GjCg" name="radice" type="_4QDKZBwOEe-urICxG0GjCg"/>
                <ownedParameter xmi:id="_4S6RJRwOEe-urICxG0GjCg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_4S6RJhwOEe-urICxG0GjCg" name="fattoreFoglia" method="_4TzpIhwOEe-urICxG0GjCg">
                <ownedComment xmi:id="_fX66AS13Ee-8Nr2H9gftQA">
                  <body>Verifica se esiste un fattore di conversione con una data foglia.
	 * 
	 * @param foglia La foglia con cui verificare la relazione.
	 * @return true se esiste una relazione di conversione con la foglia, false altrimenti.</body>
                </ownedComment>
                <ownedParameter xmi:id="_4S6RJxwOEe-urICxG0GjCg" name="nodo" type="_4QDKZBwOEe-urICxG0GjCg"/>
                <ownedParameter xmi:id="_4S6RKBwOEe-urICxG0GjCg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_4S64MBwOEe-urICxG0GjCg" name="addTransitivoFattoreConversione" isStatic="true" method="_4T0QExwOEe-urICxG0GjCg">
                <ownedComment xmi:id="_fX7hAC13Ee-8Nr2H9gftQA">
                  <body>Aggiunge i fattori di conversione transitivi tra TUTTE le coppie di foglie nella gerarchia.
     * 
     * @param gerarchia La gerarchia su cui operare</body>
                </ownedComment>
                <ownedParameter xmi:id="_4S64MRwOEe-urICxG0GjCg" name="gerarchia" type="_4P_gABwOEe-urICxG0GjCg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_4TRdghwOEe-urICxG0GjCg" name="addFattoreConversione" method="_4TzpJRwOEe-urICxG0GjCg">
                <ownedComment xmi:id="_fX66Ai13Ee-8Nr2H9gftQA">
                  <body>Aggiunge un fattore di conversione associato al nodo.
	 * 
	 * @param foglia  Il nodo foglia con cui associare il fattore.
	 * @param fattore Il fattore di conversione da aggiungere.</body>
                </ownedComment>
                <ownedParameter xmi:id="_4TRdgxwOEe-urICxG0GjCg" name="foglia" type="_4QDKZBwOEe-urICxG0GjCg"/>
                <ownedParameter xmi:id="_4TRdhBwOEe-urICxG0GjCg" name="fattore" type="_4TRdgBwOEe-urICxG0GjCg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_4TRdhRwOEe-urICxG0GjCg" name="calcTransitivo" visibility="private" isStatic="true" method="_4T0QFRwOEe-urICxG0GjCg">
                <ownedComment xmi:id="_fX7hAS13Ee-8Nr2H9gftQA">
                  <body>Metodo per calcolare il fattore di conversione transitivo tra due nodi.
     * 
     * @param nodo1 Il primo nodo
     * @param nodo2 Il secondo nodo
     * @param visitati Lista dei nodi visitati durante il calcolo
     * @return Il fattore di conversione transitivo tra i due nodi, null se non è possibile calcolarlo</body>
                </ownedComment>
                <ownedParameter xmi:id="_4TRdhhwOEe-urICxG0GjCg" name="nodo1" type="_4QDKZBwOEe-urICxG0GjCg"/>
                <ownedParameter xmi:id="_4TRdhxwOEe-urICxG0GjCg" name="nodo2" type="_4QDKZBwOEe-urICxG0GjCg"/>
                <ownedParameter xmi:id="_4TRdiBwOEe-urICxG0GjCg" name="visitati" type="_4S304BwOEe-urICxG0GjCg"/>
                <ownedParameter xmi:id="_4TRdiRwOEe-urICxG0GjCg" type="_4TRdgBwOEe-urICxG0GjCg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_4QIC4BwOEe-urICxG0GjCg" name="PrestazioneOpera">
              <ownedComment xmi:id="_fX6S5S13Ee-8Nr2H9gftQA">
                <body>La classe PrestazioneOpera rappresenta una singola prestazione 
d'opera, che può essere sia offerta che richiesta.

Autore: Daniele Martinelli e Federico Sabbadini</body>
              </ownedComment>
              <ownedAttribute xmi:id="_4TpQ8BwOEe-urICxG0GjCg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_4TpQ8RwOEe-urICxG0GjCg" value="1L"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_4TpQ8hwOEe-urICxG0GjCg" name="foglia" type="_4QDKZBwOEe-urICxG0GjCg" isReadOnly="true" association="_4UEuwRwOEe-urICxG0GjCg"/>
              <ownedAttribute xmi:id="_4TpQ8xwOEe-urICxG0GjCg" name="durata">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_4TSroBwOEe-urICxG0GjCg" client="_4QIC4BwOEe-urICxG0GjCg" supplier="_4Ss1wBwOEe-urICxG0GjCg" contract="_4Ss1wBwOEe-urICxG0GjCg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4T0QHxwOEe-urICxG0GjCg" name="PrestazioneOpera" specification="_4S8GUBwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4T0QIBwOEe-urICxG0GjCg" name="foglia" type="_4QDKZBwOEe-urICxG0GjCg"/>
                <ownedParameter xmi:id="_4T0QIRwOEe-urICxG0GjCg" name="durata">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_4T0QIhwOEe-urICxG0GjCg" type="_4QIC4BwOEe-urICxG0GjCg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>if (foglia.isLeaf()) {
         this.foglia = foglia;
         this.durata = durata;
     } else {
         throw new NodeNotLeafException();
     }
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4T0QIxwOEe-urICxG0GjCg" name="PrestazioneOpera" specification="_4S8GVhwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4T0QJBwOEe-urICxG0GjCg" name="foglia" type="_4QDKZBwOEe-urICxG0GjCg"/>
                <ownedParameter xmi:id="_4T0QJRwOEe-urICxG0GjCg" type="_4QIC4BwOEe-urICxG0GjCg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>if (foglia.isLeaf()) {
         this.foglia = foglia;
     } else {
         throw new NodeNotLeafException();
     }
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4T0QJhwOEe-urICxG0GjCg" name="getNome" specification="_4QIp8BwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4T0QJxwOEe-urICxG0GjCg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return foglia.getNome();
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4T0QKBwOEe-urICxG0GjCg" name="toString" specification="_4QIp8hwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4T0QKRwOEe-urICxG0GjCg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>StringBuffer str = new StringBuffer();
 	
 	str.append(&quot; [&quot; + this.getFoglia().getNome()
 			+ &quot; (&quot; + this.getFoglia().root() + &quot;), &quot; 
 			+ this.getDurata() + &quot;]&quot;);
 	
		return str.toString();         
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_4QIp8BwOEe-urICxG0GjCg" name="getNome" method="_4T0QJhwOEe-urICxG0GjCg">
                <ownedComment xmi:id="_fX6S6C13Ee-8Nr2H9gftQA">
                  <body>Restituisce il nome della prestazione.
     *
     * @return Il nome della prestazione.</body>
                </ownedComment>
                <ownedParameter xmi:id="_4QIp8RwOEe-urICxG0GjCg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_4QIp8hwOEe-urICxG0GjCg" name="toString" method="_4T0QKBwOEe-urICxG0GjCg">
                <ownedComment xmi:id="_fX658C13Ee-8Nr2H9gftQA">
                  <body>Restituisce una rappresentazione in formato stringa della PrestazioneOpera.
     *
     * @return Una stringa che rappresenta la PrestazioneOpera.</body>
                </ownedComment>
                <ownedParameter xmi:id="_4QIp8xwOEe-urICxG0GjCg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_4S8GUBwOEe-urICxG0GjCg" name="PrestazioneOpera" method="_4T0QHxwOEe-urICxG0GjCg" raisedException="_fXajoC13Ee-8Nr2H9gftQA">
                <eAnnotations xmi:id="_4S8GUxwOEe-urICxG0GjCg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_4S8GVBwOEe-urICxG0GjCg" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_fX6S5i13Ee-8Nr2H9gftQA">
                  <body>Costruttore che inizializza una PrestazioneOpera con una foglia e una durata specificate.
     *
     * @param foglia La foglia della gerarchia associata alla prestazione.
     * @param durata La durata della prestazione.
     * @throws NodeNotLeafException Se la foglia specificata non è una foglia valida.</body>
                </ownedComment>
                <ownedParameter xmi:id="_4S8GURwOEe-urICxG0GjCg" name="foglia" type="_4QDKZBwOEe-urICxG0GjCg"/>
                <ownedParameter xmi:id="_4S8GUhwOEe-urICxG0GjCg" name="durata">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_4S8GVRwOEe-urICxG0GjCg" type="_4QIC4BwOEe-urICxG0GjCg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_4S8GVhwOEe-urICxG0GjCg" name="PrestazioneOpera" method="_4T0QIxwOEe-urICxG0GjCg" raisedException="_fXajoC13Ee-8Nr2H9gftQA">
                <eAnnotations xmi:id="_4S8GWBwOEe-urICxG0GjCg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_4S8GWRwOEe-urICxG0GjCg" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_fX6S5y13Ee-8Nr2H9gftQA">
                  <body>Costruttore che inizializza una PrestazioneOpera con una foglia specificata e durata 0.
     *
     * @param foglia La foglia della gerarchia associata alla prestazione.
     * @throws NodeNotLeafException Se la foglia specificata non è una foglia valida.</body>
                </ownedComment>
                <ownedParameter xmi:id="_4S8GVxwOEe-urICxG0GjCg" name="foglia" type="_4QDKZBwOEe-urICxG0GjCg"/>
                <ownedParameter xmi:id="_4S8GWhwOEe-urICxG0GjCg" type="_4QIC4BwOEe-urICxG0GjCg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_4QJRABwOEe-urICxG0GjCg" name="RootTreeException">
              <ownedComment xmi:id="_4T7k6hwOEe-urICxG0GjCg">
                <body>Eccezione personalizzata per gestire il caso in cui un nodo 
non radice tenti di essere inserito in testa ad un albero,
il che non è consentito.</body>
              </ownedComment>
              <generalization xmi:id="_4TSroRwOEe-urICxG0GjCg" general="_4TNMEBwOEe-urICxG0GjCg"/>
              <ownedAttribute xmi:id="_4TpQ9BwOEe-urICxG0GjCg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_4TpQ9RwOEe-urICxG0GjCg" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4T0QKhwOEe-urICxG0GjCg" name="RootTreeException" specification="_4QJRARwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4T0QKxwOEe-urICxG0GjCg" type="_4QJRABwOEe-urICxG0GjCg" direction="return"/>
                <language>java</language>
                <body>super(&quot;Il nodo in testa all'albero deve essere radice&quot;);
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_4QJRARwOEe-urICxG0GjCg" name="RootTreeException" method="_4T0QKhwOEe-urICxG0GjCg">
                <eAnnotations xmi:id="_4QJ4EBwOEe-urICxG0GjCg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_4QJ4ERwOEe-urICxG0GjCg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_4QJ4EhwOEe-urICxG0GjCg" type="_4QJRABwOEe-urICxG0GjCg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_4QJ4ExwOEe-urICxG0GjCg" name="Utente" isAbstract="true">
              <ownedComment xmi:id="_epH6Sy13Ee-8Nr2H9gftQA">
                <body>La classe astratta Utente rappresenta un utente generico del sistema.
Ogni utente ha un tipo (definito da un carattere) e delle credenziali
(identificativo e password).

Autore: Daniele Martinelli e Federico Sabbadini</body>
              </ownedComment>
              <ownedAttribute xmi:id="_4Tp4ABwOEe-urICxG0GjCg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_4Tp4ARwOEe-urICxG0GjCg" value="1L"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_4Tp4AhwOEe-urICxG0GjCg" name="tipoUtente" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_4Tp4AxwOEe-urICxG0GjCg" name="credenziali" visibility="protected" type="_4P1vABwOEe-urICxG0GjCg" association="_4UEuxBwOEe-urICxG0GjCg"/>
              <interfaceRealization xmi:id="_4TTSsBwOEe-urICxG0GjCg" client="_4QJ4ExwOEe-urICxG0GjCg" supplier="_4Ss1wBwOEe-urICxG0GjCg" contract="_4Ss1wBwOEe-urICxG0GjCg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4T0QLBwOEe-urICxG0GjCg" name="Utente" specification="_4S8tYBwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4T0QLRwOEe-urICxG0GjCg" name="tipoUtente">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
                </ownedParameter>
                <ownedParameter xmi:id="_4T0QLhwOEe-urICxG0GjCg" name="credenziali" type="_4P1vABwOEe-urICxG0GjCg"/>
                <ownedParameter xmi:id="_4T0QLxwOEe-urICxG0GjCg" type="_4QJ4ExwOEe-urICxG0GjCg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>this.tipoUtente = tipoUtente;
     this.credenziali = credenziali;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4T0QMBwOEe-urICxG0GjCg" name="getCredenziali" specification="_4QJ4FBwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4T0QMRwOEe-urICxG0GjCg" type="_4P1vABwOEe-urICxG0GjCg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return credenziali;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4T03IBwOEe-urICxG0GjCg" name="getID" specification="_4QKfIBwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4T03IRwOEe-urICxG0GjCg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return this.credenziali.getID();
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4T03IhwOEe-urICxG0GjCg" name="getPassword" specification="_4QKfIhwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4T03IxwOEe-urICxG0GjCg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return this.credenziali.getPassword();
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4T03JBwOEe-urICxG0GjCg" name="setCredenziali" specification="_4S8tZxwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4T03JRwOEe-urICxG0GjCg" name="credenziali" type="_4P1vABwOEe-urICxG0GjCg"/>
                <language>java</language>
                <body>this.credenziali.setID(credenziali.getID());
     this.credenziali.setPassword(credenziali.getPassword());
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4T03JhwOEe-urICxG0GjCg" name="IsDefinitivo" specification="_4QKfJhwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4T03JxwOEe-urICxG0GjCg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return this.credenziali.isDefinitive();
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_4QJ4FBwOEe-urICxG0GjCg" name="getCredenziali" method="_4T0QMBwOEe-urICxG0GjCg">
                <ownedComment xmi:id="_epH6TS13Ee-8Nr2H9gftQA">
                  <body>Restituisce le credenziali dell'utente.
     * 
     * @return Credenziali Le credenziali dell'utente</body>
                </ownedComment>
                <ownedParameter xmi:id="_4S8tZhwOEe-urICxG0GjCg" type="_4P1vABwOEe-urICxG0GjCg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_4QKfIBwOEe-urICxG0GjCg" name="getID" method="_4T03IBwOEe-urICxG0GjCg">
                <ownedComment xmi:id="_epH6Ti13Ee-8Nr2H9gftQA">
                  <body>Restituisce l'ID dell'utente.
     * 
     * @return String L'ID dell'utente</body>
                </ownedComment>
                <ownedParameter xmi:id="_4QKfIRwOEe-urICxG0GjCg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_4QKfIhwOEe-urICxG0GjCg" name="getPassword" method="_4T03IhwOEe-urICxG0GjCg">
                <ownedComment xmi:id="_epH6Ty13Ee-8Nr2H9gftQA">
                  <body>Restituisce la password dell'utente.
     * 
     * @return String La password dell'utente</body>
                </ownedComment>
                <ownedParameter xmi:id="_4QKfIxwOEe-urICxG0GjCg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_4QKfJBwOEe-urICxG0GjCg" name="setIsDefinitivo" isAbstract="true">
                <ownedParameter xmi:id="_4QKfJRwOEe-urICxG0GjCg" name="b">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_4QKfJhwOEe-urICxG0GjCg" name="IsDefinitivo" method="_4T03JhwOEe-urICxG0GjCg">
                <ownedComment xmi:id="_epIhUC13Ee-8Nr2H9gftQA">
                  <body>Restituisce lo stato di definitività delle credenziali.
     * 
     * @return boolean True se le credenziali sono definitive, false altrimenti</body>
                </ownedComment>
                <ownedParameter xmi:id="_4QKfJxwOEe-urICxG0GjCg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_4S8tYBwOEe-urICxG0GjCg" name="Utente" method="_4T0QLBwOEe-urICxG0GjCg">
                <eAnnotations xmi:id="_4S8tYxwOEe-urICxG0GjCg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_4S8tZBwOEe-urICxG0GjCg" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_epH6TC13Ee-8Nr2H9gftQA">
                  <body>Costruttore della classe Utente.
     * 
     * @param tipoUtente Il tipo di utente (carattere)
     * @param credenziali Le credenziali associate all'utente</body>
                </ownedComment>
                <ownedParameter xmi:id="_4S8tYRwOEe-urICxG0GjCg" name="tipoUtente">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
                </ownedParameter>
                <ownedParameter xmi:id="_4S8tYhwOEe-urICxG0GjCg" name="credenziali" type="_4P1vABwOEe-urICxG0GjCg"/>
                <ownedParameter xmi:id="_4S8tZRwOEe-urICxG0GjCg" type="_4QJ4ExwOEe-urICxG0GjCg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_4S8tZxwOEe-urICxG0GjCg" name="setCredenziali" method="_4T03JBwOEe-urICxG0GjCg">
                <ownedComment xmi:id="_epH6UC13Ee-8Nr2H9gftQA">
                  <body>Imposta le credenziali dell'utente.
     * 
     * @param credenziali  Le nuove credenziali da impostare</body>
                </ownedComment>
                <ownedParameter xmi:id="_4S8taBwOEe-urICxG0GjCg" name="credenziali" type="_4P1vABwOEe-urICxG0GjCg"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_4QLGMBwOEe-urICxG0GjCg" name="Utenza">
              <ownedComment xmi:id="_fX6S5C13Ee-8Nr2H9gftQA">
                <body>La classe Utenza gestisce gli utenti nel sistema.

Autore: Daniele Martinelli e Federico Sabbadini</body>
              </ownedComment>
              <ownedAttribute xmi:id="_4Tp4BRwOEe-urICxG0GjCg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_4Tp4BhwOEe-urICxG0GjCg" value="1L"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_4Tp4BxwOEe-urICxG0GjCg" name="utenti" type="_4Ss1whwOEe-urICxG0GjCg" isReadOnly="true" association="_4UEuxxwOEe-urICxG0GjCg"/>
              <ownedAttribute xmi:id="_4TqfERwOEe-urICxG0GjCg" name="utenteDiSessione" type="_4QJ4ExwOEe-urICxG0GjCg" association="_4T8L5RwOEe-urICxG0GjCg"/>
              <interfaceRealization xmi:id="_4TTSsRwOEe-urICxG0GjCg" client="_4QLGMBwOEe-urICxG0GjCg" supplier="_4Ss1wBwOEe-urICxG0GjCg" contract="_4Ss1wBwOEe-urICxG0GjCg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4T03KBwOEe-urICxG0GjCg" name="Utenza" specification="_4QLGMRwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4T03KRwOEe-urICxG0GjCg" type="_4QLGMBwOEe-urICxG0GjCg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>this.utenti = new ArrayList&lt;>();
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4T03KhwOEe-urICxG0GjCg" name="addUtente" specification="_4S9UchwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4T03KxwOEe-urICxG0GjCg" name="utente" type="_4QJ4ExwOEe-urICxG0GjCg"/>
                <language>java</language>
                <body>this.utenti.add(utente);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4T03LBwOEe-urICxG0GjCg" name="autenticazione" specification="_4TTSshwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4T03LRwOEe-urICxG0GjCg" name="ID">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_4T03LhwOEe-urICxG0GjCg" name="Password">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_4T03LxwOEe-urICxG0GjCg" name="predicate" type="_4S9UcBwOEe-urICxG0GjCg"/>
                <ownedParameter xmi:id="_4T03MBwOEe-urICxG0GjCg" type="_4QJ4ExwOEe-urICxG0GjCg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return utenti.stream()
             .filter(utente -> utente.getID().equals(ID))
             .filter(utente -> utente.getPassword().equals(Password))
             .filter(predicate)
             .findFirst()
             .orElse(null);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4T03MRwOEe-urICxG0GjCg" name="autenticazioneConfiguratore" specification="_4QLtQxwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4T03MhwOEe-urICxG0GjCg" name="ID">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_4T03MxwOEe-urICxG0GjCg" name="Password">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_4T03NBwOEe-urICxG0GjCg" type="_4QJ4ExwOEe-urICxG0GjCg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return autenticazione(ID, Password, utente -> utente.getTipoUtente() == Configuratore.TIPOUTENTE);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4T03NRwOEe-urICxG0GjCg" name="autenticazioneFruitore" specification="_4QLtRhwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4T03NhwOEe-urICxG0GjCg" name="ID">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_4T03NxwOEe-urICxG0GjCg" name="Password">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_4T03OBwOEe-urICxG0GjCg" type="_4QJ4ExwOEe-urICxG0GjCg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return autenticazione(ID, Password, utente -> utente.getTipoUtente() == Fruitore.TIPO_UTENTE);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4T03ORwOEe-urICxG0GjCg" name="verificaEsistenzaID" specification="_4QLtSRwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4T03OhwOEe-urICxG0GjCg" name="id">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_4T03OxwOEe-urICxG0GjCg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>for (Utente utente : utenti) 
         if (utente.getID().equals(id)) 
             return true;
     return false;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_4QLGMRwOEe-urICxG0GjCg" name="Utenza" method="_4T03KBwOEe-urICxG0GjCg">
                <eAnnotations xmi:id="_4QLtQBwOEe-urICxG0GjCg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_4QLtQRwOEe-urICxG0GjCg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_4QLtQhwOEe-urICxG0GjCg" type="_4QLGMBwOEe-urICxG0GjCg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_4QLtQxwOEe-urICxG0GjCg" name="autenticazioneConfiguratore" method="_4T03MRwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4QLtRBwOEe-urICxG0GjCg" name="ID">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_4QLtRRwOEe-urICxG0GjCg" name="Password">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_4S97gBwOEe-urICxG0GjCg" type="_4QJ4ExwOEe-urICxG0GjCg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_4QLtRhwOEe-urICxG0GjCg" name="autenticazioneFruitore" method="_4T03NRwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4QLtRxwOEe-urICxG0GjCg" name="ID">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_4QLtSBwOEe-urICxG0GjCg" name="Password">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_4S97gRwOEe-urICxG0GjCg" type="_4QJ4ExwOEe-urICxG0GjCg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_4QLtSRwOEe-urICxG0GjCg" name="verificaEsistenzaID" method="_4T03ORwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4QLtShwOEe-urICxG0GjCg" name="id">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_4QMUUBwOEe-urICxG0GjCg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_4S9UchwOEe-urICxG0GjCg" name="addUtente" method="_4T03KhwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4S9UcxwOEe-urICxG0GjCg" name="utente" type="_4QJ4ExwOEe-urICxG0GjCg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_4TTSshwOEe-urICxG0GjCg" name="autenticazione" visibility="private" method="_4T03LBwOEe-urICxG0GjCg">
                <ownedParameter xmi:id="_4TTSsxwOEe-urICxG0GjCg" name="ID">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_4TTStBwOEe-urICxG0GjCg" name="Password">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_4TT5wBwOEe-urICxG0GjCg" name="predicate" type="_4S9UcBwOEe-urICxG0GjCg"/>
                <ownedParameter xmi:id="_4TT5wRwOEe-urICxG0GjCg" type="_4QJ4ExwOEe-urICxG0GjCg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_4T6WsBwOEe-urICxG0GjCg" name="" memberEnd="_4Te44hwOEe-urICxG0GjCg _4T6WsRwOEe-urICxG0GjCg">
              <ownedEnd xmi:id="_4T6WsRwOEe-urICxG0GjCg" name="" type="_4PvBVBwOEe-urICxG0GjCg" association="_4T6WsBwOEe-urICxG0GjCg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_4T69zRwOEe-urICxG0GjCg" name="" memberEnd="_4TjxaRwOEe-urICxG0GjCg _4T69zhwOEe-urICxG0GjCg">
              <ownedEnd xmi:id="_4T69zhwOEe-urICxG0GjCg" name="" type="_4P7OkBwOEe-urICxG0GjCg" association="_4T69zRwOEe-urICxG0GjCg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_4T8L5RwOEe-urICxG0GjCg" name="" memberEnd="_4TqfERwOEe-urICxG0GjCg _4T8L5hwOEe-urICxG0GjCg">
              <ownedEnd xmi:id="_4T8L5hwOEe-urICxG0GjCg" name="" type="_4QLGMBwOEe-urICxG0GjCg" association="_4T8L5RwOEe-urICxG0GjCg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_4UAdVBwOEe-urICxG0GjCg" name="" memberEnd="_4UAdVRwOEe-urICxG0GjCg _4TeR2BwOEe-urICxG0GjCg">
              <ownedEnd xmi:id="_4UAdVRwOEe-urICxG0GjCg" name="" type="_4PvBVBwOEe-urICxG0GjCg" association="_4UAdVBwOEe-urICxG0GjCg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_4UAdVxwOEe-urICxG0GjCg" name="" memberEnd="_4UAdWBwOEe-urICxG0GjCg _4Te44BwOEe-urICxG0GjCg">
              <ownedEnd xmi:id="_4UAdWBwOEe-urICxG0GjCg" name="" type="_4PvBVBwOEe-urICxG0GjCg" association="_4UAdVxwOEe-urICxG0GjCg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_4UBEYRwOEe-urICxG0GjCg" name="" memberEnd="_4UBEYhwOEe-urICxG0GjCg _4Tff8xwOEe-urICxG0GjCg">
              <ownedEnd xmi:id="_4UBEYhwOEe-urICxG0GjCg" name="" type="_4PzSwBwOEe-urICxG0GjCg" association="_4UBEYRwOEe-urICxG0GjCg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_4UBEZBwOEe-urICxG0GjCg" name="" memberEnd="_4UBEZRwOEe-urICxG0GjCg _4Th8PRwOEe-urICxG0GjCg">
              <ownedEnd xmi:id="_4UBEZRwOEe-urICxG0GjCg" name="" type="_4P2WERwOEe-urICxG0GjCg" association="_4UBEZBwOEe-urICxG0GjCg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_4UBEZxwOEe-urICxG0GjCg" name="" memberEnd="_4UBEaBwOEe-urICxG0GjCg _4Th8PhwOEe-urICxG0GjCg">
              <ownedEnd xmi:id="_4UBEaBwOEe-urICxG0GjCg" name="" type="_4P2WERwOEe-urICxG0GjCg" association="_4UBEZxwOEe-urICxG0GjCg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_4UBrcRwOEe-urICxG0GjCg" name="" memberEnd="_4UBrchwOEe-urICxG0GjCg _4TijQBwOEe-urICxG0GjCg">
              <ownedEnd xmi:id="_4UBrchwOEe-urICxG0GjCg" name="" type="_4P2WERwOEe-urICxG0GjCg" association="_4UBrcRwOEe-urICxG0GjCg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_4UBrdBwOEe-urICxG0GjCg" name="" memberEnd="_4UBrdRwOEe-urICxG0GjCg _4TijQRwOEe-urICxG0GjCg">
              <ownedEnd xmi:id="_4UBrdRwOEe-urICxG0GjCg" name="" type="_4P2WERwOEe-urICxG0GjCg" association="_4UBrdBwOEe-urICxG0GjCg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_4UBrdxwOEe-urICxG0GjCg" name="" memberEnd="_4UBreBwOEe-urICxG0GjCg _4TjxZhwOEe-urICxG0GjCg">
              <ownedEnd xmi:id="_4UBreBwOEe-urICxG0GjCg" name="" type="_4P7OkBwOEe-urICxG0GjCg" association="_4UBrdxwOEe-urICxG0GjCg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_4UCSgRwOEe-urICxG0GjCg" name="" memberEnd="_4UCSghwOEe-urICxG0GjCg _4TjxahwOEe-urICxG0GjCg">
              <ownedEnd xmi:id="_4UCSghwOEe-urICxG0GjCg" name="" type="_4P7OkBwOEe-urICxG0GjCg" association="_4UCSgRwOEe-urICxG0GjCg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_4UCShBwOEe-urICxG0GjCg" name="" memberEnd="_4UCShRwOEe-urICxG0GjCg _4TkYdBwOEe-urICxG0GjCg">
              <ownedEnd xmi:id="_4UCShRwOEe-urICxG0GjCg" name="" type="_4P9q0BwOEe-urICxG0GjCg" association="_4UCShBwOEe-urICxG0GjCg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_4UC5kRwOEe-urICxG0GjCg" name="" memberEnd="_4UC5khwOEe-urICxG0GjCg _4Tk_gxwOEe-urICxG0GjCg">
              <ownedEnd xmi:id="_4UC5khwOEe-urICxG0GjCg" name="" type="_4P_gABwOEe-urICxG0GjCg" association="_4UC5kRwOEe-urICxG0GjCg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_4UDgoRwOEe-urICxG0GjCg" name="" memberEnd="_4UDgohwOEe-urICxG0GjCg _4Tk_hhwOEe-urICxG0GjCg">
              <ownedEnd xmi:id="_4UDgohwOEe-urICxG0GjCg" name="" type="_4P_gABwOEe-urICxG0GjCg" association="_4UDgoRwOEe-urICxG0GjCg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_4UDgpBwOEe-urICxG0GjCg" name="" memberEnd="_4UDgpRwOEe-urICxG0GjCg _4TlmkhwOEe-urICxG0GjCg">
              <ownedEnd xmi:id="_4UDgpRwOEe-urICxG0GjCg" name="" type="_4P_gABwOEe-urICxG0GjCg" association="_4UDgpBwOEe-urICxG0GjCg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_4UDgpxwOEe-urICxG0GjCg" name="" memberEnd="_4UDgqBwOEe-urICxG0GjCg _4TnbxhwOEe-urICxG0GjCg">
              <ownedEnd xmi:id="_4UDgqBwOEe-urICxG0GjCg" name="" type="_4QDKZBwOEe-urICxG0GjCg" association="_4UDgpxwOEe-urICxG0GjCg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_4UEHsRwOEe-urICxG0GjCg" name="" memberEnd="_4UEHshwOEe-urICxG0GjCg _4ToC0RwOEe-urICxG0GjCg">
              <ownedEnd xmi:id="_4UEHshwOEe-urICxG0GjCg" name="" type="_4QDKZBwOEe-urICxG0GjCg" association="_4UEHsRwOEe-urICxG0GjCg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_4UEHtBwOEe-urICxG0GjCg" name="" memberEnd="_4UEHtRwOEe-urICxG0GjCg _4ToC1xwOEe-urICxG0GjCg">
              <ownedEnd xmi:id="_4UEHtRwOEe-urICxG0GjCg" name="" type="_4QDKZBwOEe-urICxG0GjCg" association="_4UEHtBwOEe-urICxG0GjCg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_4UEuwRwOEe-urICxG0GjCg" name="" memberEnd="_4UEuwhwOEe-urICxG0GjCg _4TpQ8hwOEe-urICxG0GjCg">
              <ownedEnd xmi:id="_4UEuwhwOEe-urICxG0GjCg" name="" type="_4QIC4BwOEe-urICxG0GjCg" association="_4UEuwRwOEe-urICxG0GjCg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_4UEuxBwOEe-urICxG0GjCg" name="" memberEnd="_4UEuxRwOEe-urICxG0GjCg _4Tp4AxwOEe-urICxG0GjCg">
              <ownedEnd xmi:id="_4UEuxRwOEe-urICxG0GjCg" name="" type="_4QJ4ExwOEe-urICxG0GjCg" association="_4UEuxBwOEe-urICxG0GjCg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_4UEuxxwOEe-urICxG0GjCg" name="" memberEnd="_4UEuyBwOEe-urICxG0GjCg _4Tp4BxwOEe-urICxG0GjCg">
              <ownedEnd xmi:id="_4UEuyBwOEe-urICxG0GjCg" name="" type="_4QLGMBwOEe-urICxG0GjCg" association="_4UEuxxwOEe-urICxG0GjCg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Package" xmi:id="_fTrTIC13Ee-8Nr2H9gftQA" name="ecccezioni">
              <packagedElement xmi:type="uml:Class" xmi:id="_fXZVgC13Ee-8Nr2H9gftQA" name="RootTreeException"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_fXajoC13Ee-8Nr2H9gftQA" name="NodeNotLeafException"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_fXbKsC13Ee-8Nr2H9gftQA" name="LeafHasChildrenException"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_fXkUoC13Ee-8Nr2H9gftQA" name="Proposta"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_fXliwC13Ee-8Nr2H9gftQA" name="Commercio"/>
            <packagedElement xmi:type="uml:Association" xmi:id="_fX99QC13Ee-8Nr2H9gftQA" name="" memberEnd="_fX99QS13Ee-8Nr2H9gftQA _fX1aZy13Ee-8Nr2H9gftQA">
              <ownedEnd xmi:id="_fX99QS13Ee-8Nr2H9gftQA" name="" type="_4P2WERwOEe-urICxG0GjCg" association="_fX99QC13Ee-8Nr2H9gftQA"/>
            </packagedElement>
          </packagedElement>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_icUpoS14Ee-8Nr2H9gftQA" name="" visibility="public" memberEnd="_icUpoC14Ee-8Nr2H9gftQA _icVQsC14Ee-8Nr2H9gftQA">
          <ownedEnd xmi:id="_icVQsC14Ee-8Nr2H9gftQA" name="" visibility="public" type="_4P9q0BwOEe-urICxG0GjCg" association="_icUpoS14Ee-8Nr2H9gftQA"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_uFS34S14Ee-8Nr2H9gftQA" name="" visibility="public" memberEnd="_uFS34C14Ee-8Nr2H9gftQA _uFS34i14Ee-8Nr2H9gftQA">
          <ownedEnd xmi:id="_uFS34i14Ee-8Nr2H9gftQA" name="" visibility="public" type="_4P_gABwOEe-urICxG0GjCg" association="_uFS34S14Ee-8Nr2H9gftQA"/>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_4O6h8xwOEe-urICxG0GjCg" name="java">
      <packagedElement xmi:type="uml:Package" xmi:id="_4O6h9BwOEe-urICxG0GjCg" name="util">
        <packagedElement xmi:type="uml:Package" xmi:id="_4PFhEBwOEe-urICxG0GjCg" name="regex">
          <packagedElement xmi:type="uml:Class" xmi:id="_4S1YoBwOEe-urICxG0GjCg" name="Matcher"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_4S1_sRwOEe-urICxG0GjCg" name="Pattern"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_4PJLcBwOEe-urICxG0GjCg" name="Map">
          <packagedElement xmi:type="uml:Interface" xmi:id="_4S5qExwOEe-urICxG0GjCg" name="Entry"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_4POD8BwOEe-urICxG0GjCg" name="function">
          <packagedElement xmi:type="uml:Interface" xmi:id="_4S9UcBwOEe-urICxG0GjCg" name="Predicate"/>
        </packagedElement>
        <packagedElement xmi:type="uml:DataType" xmi:id="_4SrnoRwOEe-urICxG0GjCg" name="Date"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_4Ss1whwOEe-urICxG0GjCg" name="ArrayList"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_4S304BwOEe-urICxG0GjCg" name="List"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_4S5DABwOEe-urICxG0GjCg" name="HashMap"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_4S5DAhwOEe-urICxG0GjCg" name="Map"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_4S5qERwOEe-urICxG0GjCg" name="Set"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_4TJhsBwOEe-urICxG0GjCg" name="Random"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_4TKIwBwOEe-urICxG0GjCg" name="Scanner"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_4O7wEBwOEe-urICxG0GjCg" name="text">
        <packagedElement xmi:type="uml:Class" xmi:id="_4SqZgBwOEe-urICxG0GjCg" name="DateFormat"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_4SrAkRwOEe-urICxG0GjCg" name="ParseException"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_4SrAkxwOEe-urICxG0GjCg" name="SimpleDateFormat"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_4O-zYRwOEe-urICxG0GjCg" name="io">
        <packagedElement xmi:type="uml:Interface" xmi:id="_4Ss1wBwOEe-urICxG0GjCg" name="Serializable"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_4TLW4BwOEe-urICxG0GjCg" name="lang">
        <packagedElement xmi:type="uml:Class" xmi:id="_4TLW4RwOEe-urICxG0GjCg" name="StringBuffer"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_4TNMEBwOEe-urICxG0GjCg" name="Exception"/>
        <packagedElement xmi:type="uml:DataType" xmi:id="_4TRdgBwOEe-urICxG0GjCg" name="Double"/>
      </packagedElement>
    </packagedElement>
    <profileApplication xmi:id="_4E64cBwOEe-urICxG0GjCg">
      <eAnnotations xmi:id="_4E64cRwOEe-urICxG0GjCg" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile"/>
    </profileApplication>
  </uml:Model>
  <UMLLabProfile:TargetLanguage xmi:id="_4E64chwOEe-urICxG0GjCg" base_Package="_4CCjkBwOEe-urICxG0GjCg">
    <languageName>java</languageName>
  </UMLLabProfile:TargetLanguage>
  <UMLLabProfile:Generics xmi:id="_4P8csBwOEe-urICxG0GjCg" genericsValue="Proposta" base_Element="_4P71ohwOEe-urICxG0GjCg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_4P8csxwOEe-urICxG0GjCg" base_Element="_4P8csRwOEe-urICxG0GjCg"/>
  <UMLLabProfile:Annotations xmi:id="_4P8ctBwOEe-urICxG0GjCg" base_Element="_4P8csRwOEe-urICxG0GjCg">
    <annotations xmi:id="_4P9DwBwOEe-urICxG0GjCg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_4P-48hwOEe-urICxG0GjCg" base_Element="_4P-48BwOEe-urICxG0GjCg"/>
  <UMLLabProfile:Annotations xmi:id="_4P-48xwOEe-urICxG0GjCg" base_Element="_4P-48BwOEe-urICxG0GjCg">
    <annotations xmi:id="_4P-49BwOEe-urICxG0GjCg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_4QAuIRwOEe-urICxG0GjCg" base_Element="_4QAHGBwOEe-urICxG0GjCg"/>
  <UMLLabProfile:Annotations xmi:id="_4QAuIhwOEe-urICxG0GjCg" base_Element="_4QAHGBwOEe-urICxG0GjCg">
    <annotations xmi:id="_4QAuIxwOEe-urICxG0GjCg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_4QWsYhwOEe-urICxG0GjCg" base_Element="_4QWsYRwOEe-urICxG0GjCg"/>
  <UMLLabProfile:Annotations xmi:id="_4QWsYxwOEe-urICxG0GjCg" base_Element="_4QWsYRwOEe-urICxG0GjCg">
    <annotations xmi:id="_4QXTcBwOEe-urICxG0GjCg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_4QX6gRwOEe-urICxG0GjCg" base_Element="_4QX6gBwOEe-urICxG0GjCg"/>
  <UMLLabProfile:Annotations xmi:id="_4QX6ghwOEe-urICxG0GjCg" base_Element="_4QX6gBwOEe-urICxG0GjCg">
    <annotations xmi:id="_4QX6gxwOEe-urICxG0GjCg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_4QYhkhwOEe-urICxG0GjCg" base_Element="_4QYhkRwOEe-urICxG0GjCg"/>
  <UMLLabProfile:Annotations xmi:id="_4QYhkxwOEe-urICxG0GjCg" base_Element="_4QYhkRwOEe-urICxG0GjCg">
    <annotations xmi:id="_4QYhlBwOEe-urICxG0GjCg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_4SrAkBwOEe-urICxG0GjCg" base_Element="_4SqZgBwOEe-urICxG0GjCg"/>
  <UMLLabProfile:Reference xmi:id="_4SrAkhwOEe-urICxG0GjCg" base_Element="_4SrAkRwOEe-urICxG0GjCg"/>
  <UMLLabProfile:Reference xmi:id="_4SrnoBwOEe-urICxG0GjCg" base_Element="_4SrAkxwOEe-urICxG0GjCg"/>
  <UMLLabProfile:Reference xmi:id="_4SrnohwOEe-urICxG0GjCg" base_Element="_4SrnoRwOEe-urICxG0GjCg"/>
  <UMLLabProfile:Reference xmi:id="_4Ss1wRwOEe-urICxG0GjCg" base_Element="_4Ss1wBwOEe-urICxG0GjCg"/>
  <UMLLabProfile:Reference xmi:id="_4Stc0BwOEe-urICxG0GjCg" base_Element="_4Ss1whwOEe-urICxG0GjCg"/>
  <UMLLabProfile:Reference xmi:id="_4S1_sBwOEe-urICxG0GjCg" base_Element="_4S1YoBwOEe-urICxG0GjCg"/>
  <UMLLabProfile:Reference xmi:id="_4S1_shwOEe-urICxG0GjCg" base_Element="_4S1_sRwOEe-urICxG0GjCg"/>
  <UMLLabProfile:Reference xmi:id="_4S304RwOEe-urICxG0GjCg" base_Element="_4S304BwOEe-urICxG0GjCg"/>
  <UMLLabProfile:Reference xmi:id="_4S5DARwOEe-urICxG0GjCg" base_Element="_4S5DABwOEe-urICxG0GjCg"/>
  <UMLLabProfile:Reference xmi:id="_4S5qEBwOEe-urICxG0GjCg" base_Element="_4S5DAhwOEe-urICxG0GjCg"/>
  <UMLLabProfile:Reference xmi:id="_4S5qEhwOEe-urICxG0GjCg" base_Element="_4S5qERwOEe-urICxG0GjCg"/>
  <UMLLabProfile:Reference xmi:id="_4S5qFBwOEe-urICxG0GjCg" base_Element="_4S5qExwOEe-urICxG0GjCg"/>
  <UMLLabProfile:Reference xmi:id="_4S9UcRwOEe-urICxG0GjCg" base_Element="_4S9UcBwOEe-urICxG0GjCg"/>
  <UMLLabProfile:Reference xmi:id="_4TJhsRwOEe-urICxG0GjCg" base_Element="_4TJhsBwOEe-urICxG0GjCg"/>
  <UMLLabProfile:Reference xmi:id="_4TKIwRwOEe-urICxG0GjCg" base_Element="_4TKIwBwOEe-urICxG0GjCg"/>
  <UMLLabProfile:Reference xmi:id="_4TLW4hwOEe-urICxG0GjCg" base_Element="_4TLW4RwOEe-urICxG0GjCg"/>
  <UMLLabProfile:Generics xmi:id="_4TL99RwOEe-urICxG0GjCg" genericsValue="Nodo" base_Element="_4TL99BwOEe-urICxG0GjCg"/>
  <UMLLabProfile:Generics xmi:id="_4TMlAxwOEe-urICxG0GjCg" genericsValue="Nodo" base_Element="_4TMlAhwOEe-urICxG0GjCg"/>
  <UMLLabProfile:Reference xmi:id="_4TNMERwOEe-urICxG0GjCg" base_Element="_4TNMEBwOEe-urICxG0GjCg"/>
  <UMLLabProfile:Generics xmi:id="_4TQPYRwOEe-urICxG0GjCg" genericsValue="Nodo" base_Element="_4TPoVRwOEe-urICxG0GjCg"/>
  <UMLLabProfile:Reference xmi:id="_4TRdgRwOEe-urICxG0GjCg" base_Element="_4TRdgBwOEe-urICxG0GjCg"/>
  <UMLLabProfile:Generics xmi:id="_4TSEkBwOEe-urICxG0GjCg" genericsValue="Nodo" base_Element="_4TRdiBwOEe-urICxG0GjCg"/>
  <UMLLabProfile:Generics xmi:id="_4TT5whwOEe-urICxG0GjCg" genericsValue="Utente" base_Element="_4TT5wBwOEe-urICxG0GjCg"/>
  <UMLLabProfile:Generics xmi:id="_4TUg0xwOEe-urICxG0GjCg" genericsValue="PropostaAperta" base_Element="_4TUg0hwOEe-urICxG0GjCg"/>
  <UMLLabProfile:Generics xmi:id="_4TVH4hwOEe-urICxG0GjCg" genericsValue="PropostaAperta" base_Element="_4TUg1RwOEe-urICxG0GjCg"/>
  <UMLLabProfile:Generics xmi:id="_4TVu8BwOEe-urICxG0GjCg" genericsValue="PropostaAperta" base_Element="_4TVH5BwOEe-urICxG0GjCg"/>
  <UMLLabProfile:Generics xmi:id="_4TVu8RwOEe-urICxG0GjCg" genericsValue="PropostaAperta" base_Element="_4TVH5xwOEe-urICxG0GjCg"/>
  <UMLLabProfile:Generics xmi:id="_4TWWABwOEe-urICxG0GjCg" genericsValue="PropostaAperta" base_Element="_4TVu8xwOEe-urICxG0GjCg"/>
  <UMLLabProfile:Generics xmi:id="_4TWWARwOEe-urICxG0GjCg" genericsValue="PropostaAperta" base_Element="_4TVu9hwOEe-urICxG0GjCg"/>
  <UMLLabProfile:Generics xmi:id="_4TXkIBwOEe-urICxG0GjCg" genericsValue="PropostaAperta" base_Element="_4TW9EhwOEe-urICxG0GjCg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_4TbOgRwOEe-urICxG0GjCg" base_Element="_4TbOgBwOEe-urICxG0GjCg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_4Tb1kRwOEe-urICxG0GjCg" base_Element="_4Tb1kBwOEe-urICxG0GjCg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_4Tb1mhwOEe-urICxG0GjCg" base_Element="_4Tb1mRwOEe-urICxG0GjCg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_4TccoBwOEe-urICxG0GjCg" base_Element="_4Tb1nBwOEe-urICxG0GjCg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_4TccpBwOEe-urICxG0GjCg" base_Element="_4TccohwOEe-urICxG0GjCg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_4TccpxwOEe-urICxG0GjCg" base_Element="_4TccpRwOEe-urICxG0GjCg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_4TdDsRwOEe-urICxG0GjCg" base_Element="_4TccqBwOEe-urICxG0GjCg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_4TdDtBwOEe-urICxG0GjCg" base_Element="_4TdDshwOEe-urICxG0GjCg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_4TdDtxwOEe-urICxG0GjCg" base_Element="_4TdDtRwOEe-urICxG0GjCg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_4TdqwhwOEe-urICxG0GjCg" base_Element="_4TdqwBwOEe-urICxG0GjCg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_4TdqxRwOEe-urICxG0GjCg" base_Element="_4TdqwxwOEe-urICxG0GjCg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_4TdqxxwOEe-urICxG0GjCg" base_Element="_4TdqxhwOEe-urICxG0GjCg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_4TeR0RwOEe-urICxG0GjCg" base_Element="_4TeR0BwOEe-urICxG0GjCg"/>
  <UMLLabProfile:Array xmi:id="_4TeR1BwOEe-urICxG0GjCg" base_Element="_4TeR0hwOEe-urICxG0GjCg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_4TeR1RwOEe-urICxG0GjCg" base_Element="_4TeR0hwOEe-urICxG0GjCg"/>
  <UMLLabProfile:Generics xmi:id="_4Te44RwOEe-urICxG0GjCg" genericsValue="Nodo" base_Element="_4Te44BwOEe-urICxG0GjCg"/>
  <UMLLabProfile:Generics xmi:id="_4Tff9BwOEe-urICxG0GjCg" genericsValue="String" base_Element="_4Tff8xwOEe-urICxG0GjCg"/>
  <UMLLabProfile:Generics xmi:id="_4TkYcBwOEe-urICxG0GjCg" genericsValue="Proposta" base_Element="_4TjxahwOEe-urICxG0GjCg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_4TkYcRwOEe-urICxG0GjCg" base_Element="_4TjxahwOEe-urICxG0GjCg"/>
  <UMLLabProfile:Generics xmi:id="_4Tk_gBwOEe-urICxG0GjCg" genericsValue="Comprensorio" base_Element="_4TkYdBwOEe-urICxG0GjCg"/>
  <UMLLabProfile:Generics xmi:id="_4Tk_hBwOEe-urICxG0GjCg" genericsValue="Albero" base_Element="_4Tk_gxwOEe-urICxG0GjCg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_4Tk_hRwOEe-urICxG0GjCg" base_Element="_4Tk_gxwOEe-urICxG0GjCg"/>
  <UMLLabProfile:Generics xmi:id="_4TlmkBwOEe-urICxG0GjCg" genericsValue="Nodo" base_Element="_4Tk_hhwOEe-urICxG0GjCg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_4TlmkRwOEe-urICxG0GjCg" base_Element="_4Tk_hhwOEe-urICxG0GjCg"/>
  <UMLLabProfile:Generics xmi:id="_4TlmkxwOEe-urICxG0GjCg" genericsValue="Nodo" base_Element="_4TlmkhwOEe-urICxG0GjCg"/>
  <UMLLabProfile:Array xmi:id="_4TmNoxwOEe-urICxG0GjCg" dimensions="1" base_Element="_4TmNoRwOEe-urICxG0GjCg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_4TmNpRwOEe-urICxG0GjCg" base_Element="_4TmNoRwOEe-urICxG0GjCg"/>
  <UMLLabProfile:Array xmi:id="_4TmNqBwOEe-urICxG0GjCg" base_Element="_4TmNphwOEe-urICxG0GjCg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_4Tm0sRwOEe-urICxG0GjCg" base_Element="_4TmNphwOEe-urICxG0GjCg"/>
  <UMLLabProfile:Array xmi:id="_4Tm0tBwOEe-urICxG0GjCg" base_Element="_4Tm0shwOEe-urICxG0GjCg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_4Tm0thwOEe-urICxG0GjCg" base_Element="_4Tm0shwOEe-urICxG0GjCg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_4TnbwxwOEe-urICxG0GjCg" base_Element="_4TnbwhwOEe-urICxG0GjCg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_4TnbxRwOEe-urICxG0GjCg" base_Element="_4TnbxBwOEe-urICxG0GjCg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_4ToC0BwOEe-urICxG0GjCg" base_Element="_4TnbyBwOEe-urICxG0GjCg"/>
  <UMLLabProfile:Generics xmi:id="_4ToC0hwOEe-urICxG0GjCg" genericsValue="String[]" base_Element="_4ToC0RwOEe-urICxG0GjCg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_4ToC2BwOEe-urICxG0GjCg" base_Element="_4ToC1xwOEe-urICxG0GjCg">
    <associatedElement xmi:type="uml:Operation" xmi:id="_4Top4RwOEe-urICxG0GjCg" name="getFattori" method="_4TzCBxwOEe-urICxG0GjCg">
      <ownedParameter xmi:id="_4Top4xwOEe-urICxG0GjCg" type="_4S5DAhwOEe-urICxG0GjCg" direction="return"/>
    </associatedElement>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:Generics xmi:id="_4Top4BwOEe-urICxG0GjCg" genericsValue="Nodo, Double" base_Element="_4ToC1xwOEe-urICxG0GjCg"/>
  <UMLLabProfile:Generics xmi:id="_4Top4hwOEe-urICxG0GjCg" genericsValue="Nodo, Double" base_Element="_4Top4RwOEe-urICxG0GjCg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_4Tp4BBwOEe-urICxG0GjCg" base_Element="_4Tp4AxwOEe-urICxG0GjCg"/>
  <UMLLabProfile:Generics xmi:id="_4TqfEBwOEe-urICxG0GjCg" genericsValue="Utente" base_Element="_4Tp4BxwOEe-urICxG0GjCg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_4TqfExwOEe-urICxG0GjCg" base_Element="_4TqfEhwOEe-urICxG0GjCg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_4TrGIRwOEe-urICxG0GjCg" base_Element="_4TrGIBwOEe-urICxG0GjCg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_4TrGJRwOEe-urICxG0GjCg" base_Element="_4TrGJBwOEe-urICxG0GjCg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_4TsURRwOEe-urICxG0GjCg" base_Element="_4TsURBwOEe-urICxG0GjCg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_4TsURxwOEe-urICxG0GjCg" base_Element="_4TsURhwOEe-urICxG0GjCg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_4Ts7UBwOEe-urICxG0GjCg" base_Element="_4TsUSBwOEe-urICxG0GjCg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_4Ts7UhwOEe-urICxG0GjCg" base_Element="_4Ts7URwOEe-urICxG0GjCg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_4Ts7VBwOEe-urICxG0GjCg" base_Element="_4Ts7UxwOEe-urICxG0GjCg"/>
  <uml:OpaqueBehavior xmi:id="_4TzCBxwOEe-urICxG0GjCg" name="getFattori" specification="_4Top4RwOEe-urICxG0GjCg">
    <ownedParameter xmi:id="_4TzCCBwOEe-urICxG0GjCg" type="_4S5DAhwOEe-urICxG0GjCg" direction="return">
      <name xsi:nil="true"/>
    </ownedParameter>
    <language>java</language>
    <body>return fattori;
	</body>
  </uml:OpaqueBehavior>
  <UMLLabProfile:Reference xmi:id="_4UAdUBwOEe-urICxG0GjCg" base_Element="_4T_2QBwOEe-urICxG0GjCg"/>
  <UMLLabProfile:Reference xmi:id="_4UAdUxwOEe-urICxG0GjCg" base_Element="_4UAdURwOEe-urICxG0GjCg"/>
  <UMLLabProfile:Reference xmi:id="_4UAdVhwOEe-urICxG0GjCg" base_Element="_4UAdVBwOEe-urICxG0GjCg"/>
  <UMLLabProfile:Reference xmi:id="_4UBEYBwOEe-urICxG0GjCg" base_Element="_4UAdVxwOEe-urICxG0GjCg"/>
  <UMLLabProfile:Reference xmi:id="_4UBEYxwOEe-urICxG0GjCg" base_Element="_4UBEYRwOEe-urICxG0GjCg"/>
  <UMLLabProfile:Reference xmi:id="_4UBEZhwOEe-urICxG0GjCg" base_Element="_4UBEZBwOEe-urICxG0GjCg"/>
  <UMLLabProfile:Reference xmi:id="_4UBrcBwOEe-urICxG0GjCg" base_Element="_4UBEZxwOEe-urICxG0GjCg"/>
  <UMLLabProfile:Reference xmi:id="_4UBrcxwOEe-urICxG0GjCg" base_Element="_4UBrcRwOEe-urICxG0GjCg"/>
  <UMLLabProfile:Reference xmi:id="_4UBrdhwOEe-urICxG0GjCg" base_Element="_4UBrdBwOEe-urICxG0GjCg"/>
  <UMLLabProfile:Reference xmi:id="_4UCSgBwOEe-urICxG0GjCg" base_Element="_4UBrdxwOEe-urICxG0GjCg"/>
  <UMLLabProfile:Reference xmi:id="_4UCSgxwOEe-urICxG0GjCg" base_Element="_4UCSgRwOEe-urICxG0GjCg"/>
  <UMLLabProfile:Reference xmi:id="_4UC5kBwOEe-urICxG0GjCg" base_Element="_4UCShBwOEe-urICxG0GjCg"/>
  <UMLLabProfile:Reference xmi:id="_4UDgoBwOEe-urICxG0GjCg" base_Element="_4UC5kRwOEe-urICxG0GjCg"/>
  <UMLLabProfile:Reference xmi:id="_4UDgoxwOEe-urICxG0GjCg" base_Element="_4UDgoRwOEe-urICxG0GjCg"/>
  <UMLLabProfile:Reference xmi:id="_4UDgphwOEe-urICxG0GjCg" base_Element="_4UDgpBwOEe-urICxG0GjCg"/>
  <UMLLabProfile:Reference xmi:id="_4UEHsBwOEe-urICxG0GjCg" base_Element="_4UDgpxwOEe-urICxG0GjCg"/>
  <UMLLabProfile:Reference xmi:id="_4UEHsxwOEe-urICxG0GjCg" base_Element="_4UEHsRwOEe-urICxG0GjCg"/>
  <UMLLabProfile:Reference xmi:id="_4UEuwBwOEe-urICxG0GjCg" base_Element="_4UEHtBwOEe-urICxG0GjCg"/>
  <UMLLabProfile:Reference xmi:id="_4UEuwxwOEe-urICxG0GjCg" base_Element="_4UEuwRwOEe-urICxG0GjCg"/>
  <UMLLabProfile:Reference xmi:id="_4UEuxhwOEe-urICxG0GjCg" base_Element="_4UEuxBwOEe-urICxG0GjCg"/>
  <UMLLabProfile:Reference xmi:id="_4UFV0BwOEe-urICxG0GjCg" base_Element="_4UEuxxwOEe-urICxG0GjCg"/>
  <UMLLabProfile:Reference xmi:id="_4UFV0xwOEe-urICxG0GjCg" base_Element="_4UFV0RwOEe-urICxG0GjCg"/>
  <UMLLabProfile:Reference xmi:id="_4UFV1hwOEe-urICxG0GjCg" base_Element="_4UFV1BwOEe-urICxG0GjCg"/>
  <UMLLabProfile:Reference xmi:id="_4UFV2RwOEe-urICxG0GjCg" base_Element="_4UFV1xwOEe-urICxG0GjCg"/>
  <UMLLabProfile:Reference xmi:id="_4UF84hwOEe-urICxG0GjCg" base_Element="_4UF84BwOEe-urICxG0GjCg"/>
  <UMLLabProfile:Reference xmi:id="_4UF85RwOEe-urICxG0GjCg" base_Element="_4UF84xwOEe-urICxG0GjCg"/>
  <UMLLabProfile:Reference xmi:id="_4UF86BwOEe-urICxG0GjCg" base_Element="_4UF85hwOEe-urICxG0GjCg"/>
  <UMLLabProfile:Reference xmi:id="_4UGj8BwOEe-urICxG0GjCg" base_Element="_4UF86RwOEe-urICxG0GjCg"/>
  <UMLLabProfile:Reference xmi:id="_4UGj8xwOEe-urICxG0GjCg" base_Element="_4UGj8RwOEe-urICxG0GjCg"/>
  <UMLLabProfile:Reference xmi:id="_4UGj9hwOEe-urICxG0GjCg" base_Element="_4UGj9BwOEe-urICxG0GjCg"/>
  <UMLLabProfile:Reference xmi:id="_4UHLABwOEe-urICxG0GjCg" base_Element="_4UGj9xwOEe-urICxG0GjCg"/>
  <UMLLabProfile:Reference xmi:id="_4UHLAxwOEe-urICxG0GjCg" base_Element="_4UHLARwOEe-urICxG0GjCg"/>
  <UMLLabProfile:Annotations xmi:id="_fTshQC13Ee-8Nr2H9gftQA" base_Element="_4Pz50hwOEe-urICxG0GjCg">
    <annotations xmi:id="_fTtIUC13Ee-8Nr2H9gftQA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_fUQh8C13Ee-8Nr2H9gftQA" base_Element="_4Pz50hwOEe-urICxG0GjCg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_fUVacC13Ee-8Nr2H9gftQA" base_Element="_4Th8PhwOEe-urICxG0GjCg"/>
  <UMLLabProfile:Reference xmi:id="_fXZ8kC13Ee-8Nr2H9gftQA" base_Element="_fXZVgC13Ee-8Nr2H9gftQA"/>
  <UMLLabProfile:Reference xmi:id="_fXajoS13Ee-8Nr2H9gftQA" base_Element="_fXajoC13Ee-8Nr2H9gftQA"/>
  <UMLLabProfile:Reference xmi:id="_fXbKsS13Ee-8Nr2H9gftQA" base_Element="_fXbKsC13Ee-8Nr2H9gftQA"/>
  <UMLLabProfile:Reference xmi:id="_fXk7sC13Ee-8Nr2H9gftQA" base_Element="_fXkUoC13Ee-8Nr2H9gftQA"/>
  <UMLLabProfile:Reference xmi:id="_fXliwS13Ee-8Nr2H9gftQA" base_Element="_fXliwC13Ee-8Nr2H9gftQA"/>
  <UMLLabProfile:Array xmi:id="_fXuFpi13Ee-8Nr2H9gftQA" base_Element="_fXuFpC13Ee-8Nr2H9gftQA"/>
  <UMLLabProfile:Array xmi:id="_fXvTwS13Ee-8Nr2H9gftQA" base_Element="_fXusui13Ee-8Nr2H9gftQA"/>
  <UMLLabProfile:Array xmi:id="_fXv61i13Ee-8Nr2H9gftQA" base_Element="_fXv61C13Ee-8Nr2H9gftQA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_fX2BcC13Ee-8Nr2H9gftQA" base_Element="_fX1aZy13Ee-8Nr2H9gftQA"/>
  <UMLLabProfile:Reference xmi:id="_fX-kUC13Ee-8Nr2H9gftQA" base_Element="_fX99QC13Ee-8Nr2H9gftQA"/>
  <UMLLabProfile:Patch xmi:id="_iSqz0C13Ee-8Nr2H9gftQA" base_Element="_4Pz51BwOEe-urICxG0GjCg" patchText="@@ -1,445 +0,0 @@&#xA;-package it.unibs.ids.progetto;%0D%0A%0D%0A%0D%0A/**%0D%0A * Eccezione personalizzata per gestire il caso %0A * in cui un tentativo di login da parte di un configuratore %0A * fallisca a causa di credenziali errate.%0D%0A */%0D%0Apublic class ConfLoginFailException extends Exception %7B%0D%0A   private static final long serialVersionUID = 1L;%0D%0A   %0D%0A   public ConfLoginFailException () %7B%0D%0A      super(%22Credenziali di accesso del configuratore non valide!%22);%0A       %7D%0D%0A   %0D%0A   %7D%0D%0A&#xA;" conflicting="false"/>
  <UMLLabProfile:Patch xmi:id="_iStQEC13Ee-8Nr2H9gftQA" base_Element="_4QBVMBwOEe-urICxG0GjCg" patchText="@@ -1,397 +0,0 @@&#xA;-package it.unibs.ids.progetto;%0D%0A%0D%0A%0D%0A/**%0D%0A * Eccezione personalizzata per gestire il caso in cui unafoglia %0A * tenti di aggiungere figli, il che non %C3%A8 consentito.%0D%0A */%0D%0Apublic class LeafHasChildrenException extends Exception %7B%0D%0A   private static final long serialVersionUID = 1L;%0D%0A   %0D%0A   public LeafHasChildrenException () %7B%0D%0A      super(%22Le foglie non possono avere figli%22);%0A       %7D%0D%0A   %0D%0A   %7D%0D%0A&#xA;" conflicting="false"/>
  <UMLLabProfile:Patch xmi:id="_iSt3IC13Ee-8Nr2H9gftQA" base_Element="_4QCjUxwOEe-urICxG0GjCg" patchText="@@ -1,247 +0,0 @@&#xA;-package it.unibs.ids.progetto;%0D%0A%0D%0A%0D%0Apublic class NodeNotLeafException extends Exception %7B%0D%0A   private static final long serialVersionUID = 1L;%0D%0A   %0D%0A   public NodeNotLeafException () %7B%0D%0A      super(%22Il nodo non e' foglia! %22);%0A       %7D%0D%0A   %0D%0A   %7D%0D%0A&#xA;" conflicting="false"/>
  <UMLLabProfile:Patch xmi:id="_iSueMC13Ee-8Nr2H9gftQA" base_Element="_4QJRABwOEe-urICxG0GjCg" patchText="@@ -1,429 +0,0 @@&#xA;-package it.unibs.ids.progetto;%0D%0A%0D%0A%0D%0A/**%0D%0A * Eccezione personalizzata per gestire il caso in cui un nodo %0A * non radice tenti di essere inserito in testa ad un albero,%0A * il che non %C3%A8 consentito.%0D%0A */%0D%0Apublic class RootTreeException extends Exception %7B%0D%0A   private static final long serialVersionUID = 1L;%0D%0A   %0D%0A   public RootTreeException () %7B%0D%0A      super(%22Il nodo in testa all'albero deve essere radice%22);%0A       %7D%0D%0A   %0D%0A   %7D%0D%0A&#xA;" conflicting="false"/>
  <UMLLabProfile:Patch xmi:id="_iSzWsC13Ee-8Nr2H9gftQA" base_Element="_4QM7YBwOEe-urICxG0GjCg" patchText="@@ -1,14175 +0,0 @@&#xA;-package it.unibs.ids.progetto.news;%0D%0A%0D%0Aimport java.io.Serializable;%0D%0Aimport java.util.List;%0D%0Aimport it.unibs.ids.progetto.Fruitore;%0D%0Aimport it.unibs.ids.progetto.Comprensorio;%0D%0Aimport it.unibs.ids.progetto.Nodo;%0D%0A%0D%0Apublic class Commercio implements Serializable %7B%0D%0A   private int numeroProposte;%0D%0A   private List%3CInsiemeAperto%3E insiemiAperti;%0D%0A   %0D%0A   public List%3CInsiemeAperto%3E getInsiemiAperti() %7B%0D%0A      return this.insiemiAperti;%0D%0A   %7D%0D%0A   %0D%0A   private Fruitore utenteDiSessione;%0D%0A   private List%3CInsiemeChiuso%3E insiemiChiusi;%0D%0A   %0D%0A   public List%3CInsiemeChiuso%3E getInsiemiChiusi() %7B%0D%0A      return this.insiemiChiusi;%0D%0A   %7D%0D%0A   %0D%0A   private InsiemeRitirato insiemeRitirato;%0D%0A   public Commercio () %7B%0D%0A      super();%0A      %09%09this.numeroProposte = 0;%0A      %09%09this.insiemiAperti = new ArrayList%3C%3E();%0A      %09%09this.insiemiChiusi = new ArrayList%3C%3E();%0A      %09%09this.insiemeRitirato = new InsiemeRitirato();%0A      %09%7D%0D%0A   %0D%0A   public InsiemeAperto getInsiemeApertoDiSessione() %7B%0D%0A      return getInsiemeAperto(utenteDiSessione.getComprensorioAppartenenza());%0A      %09%7D%0D%0A   %0D%0A   public int numProposte() %7B%0D%0A      setNumProposte();%0A      %09%09return numeroProposte;%0A      %09%7D%0D%0A   %0D%0A   public void setNumProposte() %7B%0D%0A      this.numeroProposte++;%0A      %09%7D%0D%0A   %0D%0A   public void decrementaNumProposte() %7B%0D%0A      this.numeroProposte--;%0A      %09%7D%0D%0A   %0D%0A   public PropostaAperta cercaProposta(int ID) %7B%0D%0A      for (PropostaAperta propostaAperta : getInsiemeApertoDiSessione().getProposteAperte()) %7B%0A      %09%09%09if (propostaAperta.getID() == ID)%0A      %09%09%09%09return propostaAperta;%09%09%0A      %09%09%7D%0A      %09%09return null;%0A      %09%7D%0D%0A   %0D%0A   public String visualizzaProposteChiuse() %7B%0D%0A      StringBuffer str = new StringBuffer();%0A       %09%0A       %09for (InsiemeChiuso insiemeChiuso : insiemiChiusi) %7B%0A      %09%09%09for (PropostaChiusa propostaChiusa : insiemeChiuso.getProposteChiuse()) %7B%0A      %09%09%09%09%0A      %09%09%09%09if (propostaChiusa.getFruitore().getID().equals(utenteDiSessione.getID())) %7B%0A      %09%09%09%09%09%0A      %09%09%09%09%09if (insiemeChiuso.getProposteChiuse().get(0)%0A      %09%09%09%09%09%09%09.equals(propostaChiusa)) %0A      %09%09%09%09%09%09str.append(%22%7B%22);%0A      %09%09%09%09%09%0A      %09%09%09%09%09str.append(%22%5Cn%22 + propostaChiusa.toString());%0A      %09%09%09%09%09%0A      %09%09%09%09%09if (insiemeChiuso.getProposteChiuse().get(insiemeChiuso.getProposteChiuse().size()-1)%0A      %09%09%09%09%09%09%09.equals(propostaChiusa)) %0A      %09%09%09%09%09%09str.append(%22%7D%5Cn%5Cn%22);%0A      %09%09%09%09%09%0A      %09%09%09%09%7D%0A      %09%09%09%7D%0A      %09%09%7D%0A       %09%0A       %09return str.toString();%0A        %0A       %7D%0D%0A   %0D%0A   public String visualizzaProposteRitirate() %7B%0D%0A      StringBuffer str = new StringBuffer();%0A       %09%0A       %09%0A       %09for (PropostaRitirata propostaRitirata : insiemeRitirato.getProposteRitirate()) %7B%0A       %09%09if (propostaRitirata.getFruitore().getID().equals(utenteDiSessione.getID())) %7B%0A      %09%09%09%09str.append(propostaRitirata.toString()+ %22%5Cn%22);%0A      %09%09%09%7D%0A      %09%09%7D%0A       %09%0A       %09%0A       %09return str.toString();%0A        %0A       %7D%0D%0A   %0D%0A   public String visualizzaProposteAperte() %7B%0D%0A      StringBuffer str = new StringBuffer();%0A       %09%0A       %09%0A       %09for (PropostaAperta propostaAperta : getInsiemeApertoDiSessione().getProposteAperte()) %7B%0A      %09%09%09if (propostaAperta.getFruitore().getID().equals(utenteDiSessione.getID())) %7B%0A      %09%09%09%09str.append(propostaAperta.toString()+ %22%5Cn%22);%0A      %09%09%09%7D%0A      %09%09%7D%0A       %09%0A       %09%0A       %09return str.toString();%0A        %0A       %09%0A       %7D%0D%0A   %0D%0A   public void setUtenteDiSessione(Fruitore utenteDiSessione) %7B%0D%0A      this.utenteDiSessione = utenteDiSessione;%0A      %09%7D%0D%0A   %0D%0A   public InsiemeAperto getInsiemeAperto(Comprensorio comprensorio) %7B%0D%0A      for (InsiemeAperto insiemeAperto : insiemiAperti) %7B%0A      %09%09%09if (insiemeAperto.getComprensorio().getNome()%0A      %09%09%09%09%09.equals(comprensorio.getNome())) %0A      %09%09%09%09return insiemeAperto;%0A      %09%09%7D%0A      %09%09InsiemeAperto insiemeAperto = new InsiemeAperto(comprensorio);%0A      %09%09insiemiAperti.add(insiemeAperto);%0A      %09%09return insiemeAperto;%0A      %09%09%0A      %09%7D%0D%0A   %0D%0A   public void addInsiemiAperti(InsiemeAperto insiemeAperto) %7B%0D%0A      this.insiemiAperti.add(insiemeAperto);%0A      %09%7D%0D%0A   %0D%0A   public void addInsiemiChiusi(InsiemeChiuso insiemeChiuso) %7B%0D%0A      this.insiemiChiusi.add(insiemeChiuso);%0A      %09%7D%0D%0A   %0D%0A   public InsiemeAperto esistePropostaAperta(PropostaAperta propostaApertaInput) %7B%0D%0A      for (InsiemeAperto insiemeAperto : insiemiAperti) %7B%0A      %09%09%09if (insiemeAperto.esistePropostaAperta(propostaApertaInput)) %7B%0A      %09%09%09%09return insiemeAperto;%0A      %09%09%09%7D%0A      %09%09%7D%0A      %09%09%0A      %09%09return null;%0A      %09%7D%0D%0A   %0D%0A   public void ritira(PropostaAperta propostaAperta) %7B%0D%0A      InsiemeAperto insiemeAperto = this.getInsiemeAperto(utenteDiSessione.getComprensorioAppartenenza());%0A      %09%09InsiemeAperto insiemeApertoCopia = new InsiemeAperto(utenteDiSessione.getComprensorioAppartenenza());%0A      %09%09insiemeApertoCopia.addProposteAperte(insiemeAperto.getProposteAperte());%0A      %09%09%0A      %09%09for (PropostaAperta propostaAperta2: insiemeApertoCopia.getProposteAperte()) %7B%0A      %09%09%09if (propostaAperta2.getFruitore().getID().equals(utenteDiSessione.getID())) %7B%0A      %09%09%09%09if (propostaAperta.getID() == propostaAperta2.getID()) %7B%0A      %09%09%09%09%09PropostaRitirata propostaRitirata = %0A      %09%09%09%09%09%09%09new PropostaRitirata(propostaAperta.getRichiesta(), propostaAperta.getOfferta(),%0A      %09%09%09%09%09%09%09propostaAperta.getID(), propostaAperta.getFruitore());%0A      %09%09%09%09%09%09%09insiemeAperto.eliminaPropostaAperta(propostaAperta);%0A      %09%09%09%09%09%09%09this.insiemeRitirato.addProposteRitirate(propostaRitirata);%0A      %09%09%09%09%7D%0A      %09%09%09%09%0A      %09%09%09%7D%0A      %09%09%09%0A      %09%09%09%0A      %09%09%7D%0A      %09%7D%0D%0A   %0D%0A   public void metodo(InsiemeAperto insiemeAperto) %7B%0D%0A      List%3CPropostaAperta%3E listaChiudibili = algoritmo(insiemeAperto);%0A      %09     if (listaChiudibili != null)%0A      %09         chiudi(insiemeAperto, listaChiudibili);%0A      %09    %0A      %09%7D%0D%0A   %0D%0A   public List%3CPropostaAperta%3E algoritmo(InsiemeAperto insiemeAperto) %7B%0D%0A      List%3CPropostaAperta%3E lista;%0A      %09    for (PropostaAperta propostaAperta : insiemeAperto.getProposteAperte()) %7B%0A      %09        lista = proposteChiudibili(insiemeAperto.getProposteAperte(), propostaAperta);%0A      %09        if (lista != null &amp;&amp; !lista.isEmpty()) %7B%0A      %09            return lista;%0A      %09        %7D%0A      %09    %7D%0A      %09    return null;%0A      %09%7D%0D%0A   %0D%0A   private static boolean soddisfacimento1(Proposta propostaA, Proposta propostaB) %7B%0D%0A      return propostaA.getOfferta().getFoglia().getNome().%0A      %09    %09%09equals%0A      %09    %09%09(propostaB.getRichiesta().getFoglia().getNome()) %0A      %09    %09%09&amp;&amp; %0A      %09    %09%09propostaA.getOfferta().getDurata() %0A      %09    %09%09== %0A      %09    %09%09(propostaB.getRichiesta()).getDurata() ;%0A      %09%7D%0D%0A   %0D%0A   private static boolean soddisfacimento2(Proposta propostaA, Proposta propostaB) %7B%0D%0A      return propostaA.getRichiesta().getFoglia().getNome().%0A      %09    %09%09equals%0A      %09    %09%09(propostaB.getOfferta().getFoglia().getNome()) %0A      %09    %09%09&amp;&amp; %0A      %09    %09%09propostaA.getRichiesta().getDurata() %0A      %09    %09%09== %0A      %09    %09%09(propostaB.getOfferta()).getDurata() ;%0A      %09%7D%0D%0A   %0D%0A   private static boolean soddisfacimentoTotale(Proposta propostaA, Proposta propostaB) %7B%0D%0A      return soddisfacimento1(propostaA, propostaB) &amp;&amp; soddisfacimento2(propostaA, propostaB);%0A      %09%7D%0D%0A   %0D%0A   public String visualizzaProposteChiuse(Nodo nodo) %7B%0D%0A      StringBuffer str = new StringBuffer();%0A       %09%0A       %09for (InsiemeChiuso insiemeChiuso : insiemiChiusi) %7B%0A      %09%09%09for (PropostaChiusa propostaChiusa : insiemeChiuso.getProposteChiuse()) %7B%0A      %09%09%09%09if %09%09(propostaChiusa.getOfferta().getFoglia().root().equals(nodo.root()) %0A      %09%09%09%09%09%09&amp;&amp; propostaChiusa.getOfferta().getFoglia().getNome().equals(nodo.getNome()) %0A      %09%09%09%09%09%09%7C%7C%0A      %09%09%09%09%09%09propostaChiusa.getOfferta().getFoglia().root().equals(nodo.root()) %0A      %09%09%09%09%09%09&amp;&amp; propostaChiusa.getRichiesta().getFoglia().getNome().equals(nodo.getNome())) %7B%0A      %09    %09%09%09str.append(propostaChiusa.toString()+ %22%5Cn%22);%0A      %09    %09%09%09%0A      %09    %09%09%7D%0A      %09%09%09%7D%0A      %09%09%7D%0A       %09%0A       %09return str.toString();%0A        %0A       %7D%0D%0A   %0D%0A   public String visualizzaProposteRitirate(Nodo nodo) %7B%0D%0A      StringBuffer str = new StringBuffer();%0A       %09%0A       %09%0A       %09for (PropostaRitirata propostaRitirata : insiemeRitirato.getProposteRitirate()) %7B%0A       %09%09if (propostaRitirata.getOfferta().getFoglia().root().equals(nodo.root()) %0A      %09%09%09%09%09&amp;&amp; propostaRitirata.getOfferta().getFoglia().getNome().equals(nodo.getNome()) %0A      %09%09%09%09%09%7C%7C%0A      %09%09%09%09%09propostaRitirata.getOfferta().getFoglia().root().equals(nodo.root()) %0A      %09%09%09%09%09&amp;&amp; propostaRitirata.getRichiesta().getFoglia().getNome().equals(nodo.getNome())) %7B%0A       %09%09%09str.append(propostaRitirata.toString()+ %22%5Cn%22);%0A       %09%09%09%0A       %09%09%7D%0A      %09%09%7D%0A       %09%0A       %09%0A       %09%0A       %09%0A       %09return str.toString();%0A        %0A       %7D%0D%0A   %0D%0A   public String visualizzaProposteAperte(Nodo nodo) %7B%0D%0A      StringBuffer str = new StringBuffer();%0A       %09%0A       %09for (InsiemeAperto insiemeAperto : insiemiAperti) %7B%0A      %09%09%09for (PropostaAperta propostaAperta : insiemeAperto.getProposteAperte()) %7B%0A      %09%09%09%09if (propostaAperta.getOfferta().getFoglia().root().equals(nodo.root()) %0A      %09%09%09%09%09%09&amp;&amp; propostaAperta.getOfferta().getFoglia().getNome().equals(nodo.getNome()) %0A      %09%09%09%09%09%09%7C%7C%0A      %09%09%09%09%09%09propostaAperta.getOfferta().getFoglia().root().equals(nodo.root()) %0A      %09%09%09%09%09%09&amp;&amp; propostaAperta.getRichiesta().getFoglia().getNome().equals(nodo.getNome())) %7B%0A      %09%09%09%09%09str.append(propostaAperta.toString()+ %22%5Cn%22);%0A      %09%09%09%09%09%0A      %09%09%09%09%7D%0A      %09%09%09%7D%0A      %09%09%7D%0A       %09%0A       %09return str.toString();%0A        %0A       %09%0A       %7D%0D%0A   %0D%0A   private void chiudi(InsiemeAperto insiemeAperto, List %3CPropostaAperta%3E proposteAperte) %7B%0D%0A      InsiemeChiuso insiemeChiuso = new InsiemeChiuso();%0A      %09%09%0A      %09%09for (PropostaAperta propostaAperta : proposteAperte) %7B%0A      %09%09%09PropostaChiusa propostaChiusa = new PropostaChiusa(propostaAperta.getRichiesta(), propostaAperta.getOfferta(), %0A      %09%09%09%09%09propostaAperta.getID(),propostaAperta.getFruitore());%0A      %09%09%09%0A      %09%09%09insiemeChiuso.addProposteChiuse(propostaChiusa);%0A      %09%09%09insiemeAperto.eliminaPropostaAperta(propostaAperta);%0A      %09%09%7D%0A      %09%09%0A      %09%09%0A      %09%09insiemiChiusi.add(insiemeChiuso);%0A      %0A      %09%09%0A      %09%09%0A      %09%7D%0D%0A   %0D%0A   public static List%3CPropostaAperta%3E proposteChiudibili(List %3CPropostaAperta%3E proposteAperte, PropostaAperta propostaAperta1) %7B%0D%0A      List%3CPropostaAperta%3E proposteChiudibili = new ArrayList%3C%3E(); %0A      %0A          %0A       %09for (PropostaAperta propostaAperta2 : proposteAperte) %7B%0A       %09%09List%3CPropostaAperta%3E copia = new ArrayList%3C%3E();%0A       %09%09copia.addAll(proposteAperte);%0A       %09%09if (!propostaAperta2.equals(propostaAperta1)) %7B%0A       %09%09%09%0A           %09%09if (soddisfacimentoTotale(propostaAperta1, propostaAperta2)) %7B%0A           %09%09%09proposteChiudibili.add(propostaAperta2);%0A           %09%09%09proposteChiudibili.add(propostaAperta1);%0A           %09%09%09return proposteChiudibili;%0A           %09%09%7D else if (soddisfacimento1(propostaAperta1, propostaAperta2)) %7B%0A           %09%09%09 %0A           %09%09%09 proposteChiudibili = proposteSoddisfacimento1(copia,propostaAperta1,%0A           %09%09%09%09%09 propostaAperta2, new ArrayList%3CPropostaAperta%3E());%0A           %09%09%09 %0A           %09%09%7D else if (soddisfacimento2(propostaAperta1, propostaAperta2)) %7B%0A           %09%09%09 %0A           %09%09%09 proposteChiudibili = proposteSoddisfacimento2(copia, propostaAperta1,%0A           %09%09%09%09%09 propostaAperta2, new ArrayList%3CPropostaAperta%3E());%0A           %09%09%7D%0A           %09%09%0A           %09%09if(proposteChiudibili != null) %7B%0A               %09%09if (!proposteChiudibili.isEmpty()) %7B%0A               %09%09%09proposteChiudibili.add(propostaAperta2);%0A               %09%09%09return proposteChiudibili;%0A               %09%09%7D%0A           %09%09%7D%0A       %09%09%7D%0A       %09%7D%0A      %09%09return null;%0A       %7D%0D%0A   %0D%0A   public static List%3CPropostaAperta%3E proposteSoddisfacimento1(List %3CPropostaAperta%3E proposteAperte, PropostaAperta propostaOriginale, PropostaAperta propostaAperta1, List %3CPropostaAperta%3E proposteChiudibili) %7B%0D%0A      proposteAperte.remove(propostaAperta1);%0A      %09%09%0A      %09%09if(proposteAperte != null) %7B%0A       %09%09if (!proposteAperte.isEmpty()) %7B%0A      %09%09    %09for (PropostaAperta propostaAperta2 : proposteAperte) %7B%0A      %09%09        %09if (!propostaAperta2.equals(propostaAperta1)) %7B%0A      %09%09        %09%09%0A      %09%09        %09%09if (soddisfacimento1(propostaAperta1, propostaAperta2)) %7B%0A      %09%09        %09%09%09proposteChiudibili.add(propostaAperta2);%0A      %09%09        %09%09%09%0A      %09%09        %09%09%09if (propostaAperta2.equals(propostaOriginale)) %0A      %09%09        %09%09%09%09return proposteChiudibili;%0A      %09%09        %09%09%09else %7B%0A      %09%09        %09%09    %09List%3CPropostaAperta%3E proposteAperteCopia = new ArrayList%3CPropostaAperta%3E();%0A      %09%09        %09%09    %09proposteAperteCopia.addAll(proposteAperte);%0A      %09%09        %09%09    %09return proposteChiudibili = proposteSoddisfacimento1(proposteAperteCopia, propostaOriginale,  %0A      %09%09        %09%09%09%09%09%09propostaAperta2, proposteChiudibili);%0A      %09%09        %09%09%09%7D%09%09%0A      %09%09        %09%09%7D%0A      %09%09        %09%7D%09%0A      %09%09%09%09%7D%0A       %09%09%7D%0A       %09%7D%0A      %09%09return null;   %0A      %7D%0D%0A   %0D%0A   public static List%3CPropostaAperta%3E proposteSoddisfacimento2(List %3CPropostaAperta%3E proposteAperte, PropostaAperta propostaOriginale, PropostaAperta propostaAperta1, List %3CPropostaAperta%3E proposteChiudibili) %7B%0D%0A      proposteAperte.remove(propostaAperta1);%0A      %09%09%0A      %09%09if(proposteAperte != null) %7B%0A       %09%09if (!proposteAperte.isEmpty()) %7B%0A      %09%09    %09for (PropostaAperta propostaAperta2 : proposteAperte) %7B%0A      %09%09        %09if (!propostaAperta2.equals(propostaAperta1)) %7B%0A      %09%09        %09%09%0A      %09%09        %09%09if (soddisfacimento2(propostaAperta1, propostaAperta2)) %7B%0A      %09%09        %09%09%09proposteChiudibili.add(propostaAperta2);%0A      %09%09        %09%09%09%0A      %09%09        %09%09%09if (propostaAperta2.equals(propostaOriginale)) %0A      %09%09        %09%09%09%09return proposteChiudibili;%0A      %09%09        %09%09%09else %7B%0A      %09%09        %09%09    %09List%3CPropostaAperta%3E proposteAperteCopia = new ArrayList%3CPropostaAperta%3E();%0A      %09%09        %09%09    %09proposteAperteCopia.addAll(proposteAperte);%0A      %09%09        %09%09    %09return proposteChiudibili = proposteSoddisfacimento2(proposteAperteCopia, propostaOriginale,  %0A      %09%09        %09%09%09%09%09%09propostaAperta2, proposteChiudibili);%0A      %09%09        %09%09%09%7D%09%09%0A      %09%09        %09%09%7D%0A      %09%09        %09%7D%09%0A      %09%09%09%09%7D%0A       %09%09%7D%0A       %09%7D%0A      %09%09return null;   %0A      %7D%0D%0A   %0D%0A   %7D%0D%0A&#xA;" conflicting="false"/>
  <UMLLabProfile:Patch xmi:id="_iSz9wC13Ee-8Nr2H9gftQA" base_Element="_4QRz4BwOEe-urICxG0GjCg" patchText="@@ -1,1851 +0,0 @@&#xA;-package it.unibs.ids.progetto.news;%0D%0A%0D%0Aimport java.io.Serializable;%0D%0Aimport it.unibs.ids.progetto.Comprensorio;%0D%0Aimport java.util.List;%0D%0A%0D%0Apublic class InsiemeAperto implements Serializable %7B%0D%0A   private Comprensorio comprensorio;%0D%0A   %0D%0A   public Comprensorio getComprensorio() %7B%0D%0A      return this.comprensorio;%0D%0A   %7D%0D%0A   %0D%0A   private List%3CPropostaAperta%3E proposteAperte;%0D%0A   %0D%0A   public List%3CPropostaAperta%3E getProposteAperte() %7B%0D%0A      return this.proposteAperte;%0D%0A   %7D%0D%0A   %0D%0A   public String toString() %7B%0D%0A      StringBuffer str = new StringBuffer();%0A       %09%0A       %09for (PropostaAperta propostaAperta : proposteAperte) %7B%0A      %09%09%09str.append(propostaAperta.toString()+%22%5Cn%22);%0A      %09%09%7D%0A       %09%0A      %09%09return str.toString();    %09%0A       %7D%0D%0A   %0D%0A   public InsiemeAperto (Comprensorio comprensorio) %7B%0D%0A      this.comprensorio = comprensorio;%0A      %09%09this.proposteAperte = new ArrayList%3C%3E();%0A      %09%7D%0D%0A   %0D%0A   public void addPropostaAperta(PropostaAperta proposta) %7B%0D%0A      this.proposteAperte.add(proposta);%0A      %09%7D%0D%0A   %0D%0A   public void eliminaPropostaAperta(PropostaAperta propostaDaEliminare) %7B%0D%0A      if (proposteAperte != null) %0A      %09%09%09this.proposteAperte.remove(propostaDaEliminare);%0A      %09%09%0A      %09%7D%0D%0A   %0D%0A   public boolean contains(PropostaAperta proposta) %7B%0D%0A      return proposteAperte.contains(proposta);%0A      %09%7D%0D%0A   %0D%0A   public boolean esistePropostaAperta(PropostaAperta propostaApertaInput) %7B%0D%0A      for (PropostaAperta propostaAperta : proposteAperte) %7B%0A      %09%09%09if (propostaAperta.getID() == propostaApertaInput.getID()) %7B%0A      %09%09%09%09return true;%0A      %09%09%09%7D%0A      %09%09%7D%0A      %09%09%0A      %09%09return false;%0A      %09%7D%0D%0A   %0D%0A   public void addProposteAperte(List %3CPropostaAperta%3E proposteAperte) %7B%0D%0A      for (PropostaAperta propostaAperta : proposteAperte) %7B%0A      %09%09%09this.addPropostaAperta(propostaAperta);%0A      %09%09%7D%0A      %09%7D%0D%0A   %0D%0A   %7D%0D%0A&#xA;" conflicting="false"/>
  <UMLLabProfile:Patch xmi:id="_iS0k0C13Ee-8Nr2H9gftQA" base_Element="_4QTCABwOEe-urICxG0GjCg" patchText="@@ -1,808 +0,0 @@&#xA;-package it.unibs.ids.progetto.news;%0D%0A%0D%0Aimport java.io.Serializable;%0D%0Aimport java.util.List;%0D%0A%0D%0Apublic class InsiemeChiuso implements Serializable %7B%0D%0A   private List%3CPropostaChiusa%3E proposteChiuse;%0D%0A   %0D%0A   public List%3CPropostaChiusa%3E getProposteChiuse() %7B%0D%0A      return this.proposteChiuse;%0D%0A   %7D%0D%0A   %0D%0A   public InsiemeChiuso () %7B%0D%0A      this.proposteChiuse=new ArrayList%3C%3E();%0A      %09%09%0A      %09%7D%0D%0A   %0D%0A   public String toString() %7B%0D%0A      StringBuffer str = new StringBuffer();%0A       %09%0A       %09for (PropostaChiusa propostachiusa : proposteChiuse) %7B%0A      %09%09%09str.append(propostachiusa.toString()+%22%5Cn%22);%0A      %09%09%7D%0A       %09%0A      %09%09return str.toString();    %09%0A       %7D%0D%0A   %0D%0A   public void addProposteChiuse(PropostaChiusa propostaChiusa) %7B%0D%0A      this.proposteChiuse.add(propostaChiusa);%0A      %09%7D%0D%0A   %0D%0A   %7D%0D%0A&#xA;" conflicting="false"/>
  <UMLLabProfile:Patch xmi:id="_iS1L4C13Ee-8Nr2H9gftQA" base_Element="_4QTpEBwOEe-urICxG0GjCg" patchText="@@ -1,900 +0,0 @@&#xA;-package it.unibs.ids.progetto.news;%0D%0A%0D%0Aimport java.io.Serializable;%0D%0Aimport java.util.List;%0D%0A%0D%0Apublic class InsiemeRitirato implements Serializable %7B%0D%0A   private static final long serialVersionUID = 1L;%0D%0A   %0D%0A   private List%3CPropostaRitirata%3E proposteRitirate;%0D%0A   %0D%0A   public List%3CPropostaRitirata%3E getProposteRitirate() %7B%0D%0A      return this.proposteRitirate;%0D%0A   %7D%0D%0A   %0D%0A   public InsiemeRitirato () %7B%0D%0A      this.proposteRitirate=new ArrayList%3C%3E();%0A      %09%09%0A      %09%7D%0D%0A   %0D%0A   public String toString() %7B%0D%0A      StringBuffer str = new StringBuffer();%0A       %09%0A       %09for (PropostaRitirata propostaRitirata : proposteRitirate) %7B%0A      %09%09%09str.append(propostaRitirata.toString()+%22%5Cn%22);%0A      %09%09%7D%0A       %09%0A      %09%09return str.toString();    %09%0A       %7D%0D%0A   %0D%0A   public void addProposteRitirate(PropostaRitirata propostaRitirata) %7B%0D%0A      this.proposteRitirate.add(propostaRitirata);%0A      %09%7D%0D%0A   %0D%0A   %7D%0D%0A&#xA;" conflicting="false"/>
  <UMLLabProfile:Patch xmi:id="_iS1y8C13Ee-8Nr2H9gftQA" base_Element="_4QUQIhwOEe-urICxG0GjCg" patchText="@@ -1,2413 +0,0 @@&#xA;-package it.unibs.ids.progetto.news;%0D%0A%0D%0Aimport java.io.Serializable;%0D%0Aimport it.unibs.ids.progetto.PrestazioneOpera;%0D%0Aimport it.unibs.ids.progetto.Fruitore;%0D%0A%0D%0A/**%0D%0A * La classe PropostaDiScambio rappresenta una proposta di scambio tra due prestazioni.%0A * %0A * Autore: Daniele Martinelli e Federico Sabbadini%0D%0A */%0D%0Apublic abstract class Proposta implements Serializable %7B%0D%0A   protected String status;%0D%0A   protected PrestazioneOpera richiesta;%0D%0A   protected PrestazioneOpera offerta;%0D%0A   protected int ID;%0D%0A   protected Fruitore fruitore;%0D%0A   public int getID() %7B%0D%0A      return ID;%0A      %09%7D%0D%0A   %0D%0A   public void setID(int iD) %7B%0D%0A      ID = iD;%0A      %09%7D%0D%0A   %0D%0A   public String getStatus() %7B%0D%0A      return status;%0A       %7D%0D%0A   %0D%0A   public Fruitore getFruitore() %7B%0D%0A      return fruitore;%0A       %7D%0D%0A   %0D%0A   public abstract void setStatus();%0D%0A   %0D%0A   /**%0D%0A    * Restituisce la prestazione richiesta nella proposta di scambio.%0A    *      *%0A    *      * @return La prestazione richiesta.%0D%0A    */%0D%0A   public PrestazioneOpera getRichiesta() %7B%0D%0A      return richiesta;%0A       %7D%0D%0A   %0D%0A   /**%0D%0A    * Restituisce la prestazione offerta nella proposta di scambio.%0A    *      *%0A    *      * @return La prestazione offerta.%0D%0A    */%0D%0A   public PrestazioneOpera getOfferta() %7B%0D%0A      return offerta;%0A       %7D%0D%0A   %0D%0A   /**%0D%0A    * Imposta la durata della prestazione offerta in base al fattore di compatibilit%C3%A0 tra le foglie delle prestazioni.%0D%0A    */%0D%0A   public void setOfferta() %7B%0D%0A      int durata = this.richiesta.getDurata();%0A           Nodo foglia1 = this.richiesta.getFoglia();%0A           Nodo foglia2 = this.offerta.getFoglia();%0A      %0A           double fattore = foglia1.fattoreFoglia(foglia2);%0A      %0A           durata = (int) (fattore * durata);%0A      %0A           this.offerta.setDurata(durata);%0A       %7D%0D%0A   %0D%0A   public String toString() %7B%0D%0A      StringBuffer str = new StringBuffer();%0A       %09%0A       %09str.append(%22Richiesta %22 + richiesta.toString());%0A       %09str.append(%22Offerta %22 + offerta.toString());%0A       %09str.append(%22ID: %22 + this.getID() + %22%5Cn%22);%0A       %09%0A      %09%09return str.toString();    %09%0A       %7D%0D%0A   %0D%0A   public Proposta (PrestazioneOpera richiesta, PrestazioneOpera offerta, int ID, Fruitore fruitore) %7B%0D%0A      this.richiesta = richiesta;%0A           this.offerta = offerta;%0A           this.ID=ID;%0A           this.fruitore=fruitore;%0A      %0A           setOfferta();%0A           setStatus();%0A       %7D%0D%0A   %0D%0A   %7D%0D%0A&#xA;" conflicting="false"/>
  <UMLLabProfile:Patch xmi:id="_iS2aAC13Ee-8Nr2H9gftQA" base_Element="_4QWsYBwOEe-urICxG0GjCg" patchText="@@ -1,567 +0,0 @@&#xA;-package it.unibs.ids.progetto.news;%0D%0A%0D%0Aimport java.io.Serializable;%0D%0Aimport it.unibs.ids.progetto.PrestazioneOpera;%0D%0Aimport it.unibs.ids.progetto.Fruitore;%0D%0A%0D%0Apublic class PropostaAperta extends Proposta implements Serializable %7B%0D%0A   private static final long serialVersionUID = 1L;%0D%0A   %0D%0A   @Override%0D%0A   public void setStatus () %0D%0A   %7B%0D%0A      this.status = %22Aperta%22;%0A      %09%09%0A      %09%7D%0D%0A   public PropostaAperta (PrestazioneOpera richiesta, PrestazioneOpera offerta, int ID, Fruitore fruitore) %7B%0D%0A      super(richiesta, offerta, ID,fruitore);%0A      %09  %7D%0D%0A   %0D%0A   %7D%0D%0A&#xA;" conflicting="false"/>
  <UMLLabProfile:Patch xmi:id="_iS3BEC13Ee-8Nr2H9gftQA" base_Element="_4QXTcRwOEe-urICxG0GjCg" patchText="@@ -1,565 +0,0 @@&#xA;-package it.unibs.ids.progetto.news;%0D%0A%0D%0Aimport java.io.Serializable;%0D%0Aimport it.unibs.ids.progetto.PrestazioneOpera;%0D%0Aimport it.unibs.ids.progetto.Fruitore;%0D%0A%0D%0Apublic class PropostaChiusa extends Proposta implements Serializable %7B%0D%0A   private static final long serialVersionUID = 1L;%0D%0A   %0D%0A   @Override%0D%0A   public void setStatus () %0D%0A   %7B%0D%0A      this.status = %22Chiusa%22;%0A      %09%09%0A      %09%7D%0D%0A   public PropostaChiusa (PrestazioneOpera richiesta, PrestazioneOpera offerta, int ID, Fruitore fruitore) %7B%0D%0A      super(richiesta, offerta, ID,fruitore);%0A       %7D%0D%0A   %0D%0A   %7D%0D%0A&#xA;" conflicting="false"/>
  <UMLLabProfile:Patch xmi:id="_iS3oIC13Ee-8Nr2H9gftQA" base_Element="_4QYhkBwOEe-urICxG0GjCg" patchText="@@ -1,571 +0,0 @@&#xA;-package it.unibs.ids.progetto.news;%0D%0A%0D%0Aimport java.io.Serializable;%0D%0Aimport it.unibs.ids.progetto.PrestazioneOpera;%0D%0Aimport it.unibs.ids.progetto.Fruitore;%0D%0A%0D%0Apublic class PropostaRitirata extends Proposta implements Serializable %7B%0D%0A   private static final long serialVersionUID = 1L;%0D%0A   %0D%0A   @Override%0D%0A   public void setStatus () %0D%0A   %7B%0D%0A      this.status = %22Ritirata%22;%0A      %09%09%0A      %09%7D%0D%0A   public PropostaRitirata (PrestazioneOpera richiesta, PrestazioneOpera offerta, int ID, Fruitore fruitore) %7B%0D%0A      super(richiesta, offerta, ID,fruitore);%0A       %7D%0D%0A   %0D%0A   %7D%0D%0A&#xA;" conflicting="false"/>
</xmi:XMI>
