<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:UMLLabProfile="http:///schemas/UMLLabProfile/NS/0" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML" xsi:schemaLocation="http:///schemas/UMLLabProfile/NS/0 pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile">
  <uml:Model xmi:id="_UMHd8C15Ee-8Nr2H9gftQA" name="IDSv1">
    <eAnnotations xmi:id="_US_iAC15Ee-8Nr2H9gftQA" source="http://ns.yatta.de/umllab">
      <contents xmi:type="ecore:EAnnotation" xmi:id="_US_iAS15Ee-8Nr2H9gftQA" source="codegen">
        <details xmi:id="_UTAJEC15Ee-8Nr2H9gftQA" key="codegenDirectory" value="/IDSv1/src"/>
        <details xmi:id="_UpTwQC15Ee-8Nr2H9gftQA" key="AssociatedSourceCode" value="/IDSv1/src/it/unibs/fp/mylib/Estrattore.java;3587178407/1;/IDSv1/src/it/unibs/fp/mylib/InputDati.java;1866672090/1;/IDSv1/src/it/unibs/fp/mylib/MyMenu.java;1580912307/1;/IDSv1/src/it/unibs/ids/progetto/Albero.java;4184748761/1;/IDSv1/src/it/unibs/ids/progetto/Application.java;833423456/1;/IDSv1/src/it/unibs/ids/progetto/Comprensorio.java;599848612/1;/IDSv1/src/it/unibs/ids/progetto/Configuratore.java;3819593131/1;/IDSv1/src/it/unibs/ids/progetto/Credenziali.java;1037184818/1;/IDSv1/src/it/unibs/ids/progetto/DefaultInitializer.java;1384661591/1;/IDSv1/src/it/unibs/ids/progetto/FileManager.java;3116517181/1;/IDSv1/src/it/unibs/ids/progetto/Geografia.java;2022387882/1;/IDSv1/src/it/unibs/ids/progetto/Gerarchia.java;1093612465/1;/IDSv1/src/it/unibs/ids/progetto/Main.java;621761726/1;/IDSv1/src/it/unibs/ids/progetto/Nodo.java;4177190349/1;/IDSv1/src/it/unibs/ids/progetto/Utente.java;1745827764/1;/IDSv1/src/it/unibs/ids/progetto/Utenza.java;1219128152/1;/IDSv1/src/it/unibs/ids/progetto/ecccezioni/ConfLoginFailException.java;3116283312/1;/IDSv1/src/it/unibs/ids/progetto/ecccezioni/LeafHasChildrenException.java;2742319078/1;/IDSv1/src/it/unibs/ids/progetto/ecccezioni/RootTreeException.java;1315658575/1;"/>
      </contents>
    </eAnnotations>
    <elementImport xmi:id="_UiwcUC15Ee-8Nr2H9gftQA">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
    </elementImport>
    <elementImport xmi:id="_UiwcUS15Ee-8Nr2H9gftQA">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#byte"/>
    </elementImport>
    <elementImport xmi:id="_UiwcUi15Ee-8Nr2H9gftQA">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
    </elementImport>
    <elementImport xmi:id="_UiwcUy15Ee-8Nr2H9gftQA">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
    </elementImport>
    <elementImport xmi:id="_UiwcVC15Ee-8Nr2H9gftQA">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
    </elementImport>
    <elementImport xmi:id="_UiwcVS15Ee-8Nr2H9gftQA">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
    </elementImport>
    <elementImport xmi:id="_UiwcVi15Ee-8Nr2H9gftQA">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
    </elementImport>
    <elementImport xmi:id="_UiwcVy15Ee-8Nr2H9gftQA">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#short"/>
    </elementImport>
    <elementImport xmi:id="_UixDYC15Ee-8Nr2H9gftQA">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </elementImport>
    <packagedElement xmi:type="uml:Package" xmi:id="_UiIxQC15Ee-8Nr2H9gftQA" name="it">
      <packagedElement xmi:type="uml:Package" xmi:id="_UiIxQS15Ee-8Nr2H9gftQA" name="unibs">
        <packagedElement xmi:type="uml:Package" xmi:id="_UiIxQi15Ee-8Nr2H9gftQA" name="fp">
          <packagedElement xmi:type="uml:Package" xmi:id="_UiJYUC15Ee-8Nr2H9gftQA" name="mylib">
            <packagedElement xmi:type="uml:Class" xmi:id="_Uiv1QC15Ee-8Nr2H9gftQA" name="Estrattore">
              <ownedComment xmi:id="_Ulp_UC15Ee-8Nr2H9gftQA">
                <body>Classe per generare Numeri Casuali e Stringhe Casuali

@author Daniele Martinelli
@author Federico Sabbadini</body>
              </ownedComment>
              <ownedAttribute xmi:id="_UlOhgC15Ee-8Nr2H9gftQA" name="estrattore" isStatic="true" type="_Uk_4AC15Ee-8Nr2H9gftQA" association="_Ulve4C15Ee-8Nr2H9gftQA">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_UlOhgS15Ee-8Nr2H9gftQA" value="new Random()"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_UlhccC15Ee-8Nr2H9gftQA" name="estraiIntero" specification="_UixDYS15Ee-8Nr2H9gftQA">
                <ownedParameter xmi:id="_UlhccS15Ee-8Nr2H9gftQA" name="min">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Ulhcci15Ee-8Nr2H9gftQA" name="max">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Ulhccy15Ee-8Nr2H9gftQA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>int range = max + 1 - min;
		 int casual = estrattore.nextInt(range);
		 return casual + min;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_UlhcdC15Ee-8Nr2H9gftQA" name="estraiDouble" specification="_UixqcC15Ee-8Nr2H9gftQA">
                <ownedParameter xmi:id="_UlhcdS15Ee-8Nr2H9gftQA" name="min">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Ulhcdi15Ee-8Nr2H9gftQA" name="max">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Ulhcdy15Ee-8Nr2H9gftQA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <language>java</language>
                <body>double range = max - min;
	 double casual = estrattore.nextDouble();
	 
	 double posEstratto = range*casual;
	 
	 return posEstratto + min;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_UlhceC15Ee-8Nr2H9gftQA" name="estraiString" specification="_UixqdC15Ee-8Nr2H9gftQA">
                <ownedParameter xmi:id="_UlhceS15Ee-8Nr2H9gftQA" name="lista">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Ulhcei15Ee-8Nr2H9gftQA" name="length">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Ulhcey15Ee-8Nr2H9gftQA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>StringBuilder identificatore = new StringBuilder();
		Random rand = new Random();
		
		for (int i = 0; i &lt; length; i++) {
			identificatore.append(lista.charAt(rand.nextInt(lista.length())));
		}
		
		return identificatore.toString();
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_UixDYS15Ee-8Nr2H9gftQA" name="estraiIntero" isStatic="true" method="_UlhccC15Ee-8Nr2H9gftQA">
                <ownedParameter xmi:id="_UixDYi15Ee-8Nr2H9gftQA" name="min">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UixDYy15Ee-8Nr2H9gftQA" name="max">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UixDZC15Ee-8Nr2H9gftQA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UixqcC15Ee-8Nr2H9gftQA" name="estraiDouble" isStatic="true" method="_UlhcdC15Ee-8Nr2H9gftQA">
                <ownedParameter xmi:id="_UixqcS15Ee-8Nr2H9gftQA" name="min">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Uixqci15Ee-8Nr2H9gftQA" name="max">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Uixqcy15Ee-8Nr2H9gftQA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UixqdC15Ee-8Nr2H9gftQA" name="estraiString" isStatic="true" method="_UlhceC15Ee-8Nr2H9gftQA">
                <ownedParameter xmi:id="_UixqdS15Ee-8Nr2H9gftQA" name="lista">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Uixqdi15Ee-8Nr2H9gftQA" name="length">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Uixqdy15Ee-8Nr2H9gftQA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_UiyRgC15Ee-8Nr2H9gftQA" name="InputDati">
              <ownedComment xmi:id="_Ulp_US15Ee-8Nr2H9gftQA">
                <body>Classe per gestire l'input da parte dell'utente.

@author Daniele Martinelli
@author Federico Sabbadini</body>
              </ownedComment>
              <ownedAttribute xmi:id="_UlPIkC15Ee-8Nr2H9gftQA" name="lettore" visibility="private" isStatic="true" type="_UlAfEC15Ee-8Nr2H9gftQA" association="_UlwF8S15Ee-8Nr2H9gftQA">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_UlPIkS15Ee-8Nr2H9gftQA" value="creaScanner()"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_UlPIky15Ee-8Nr2H9gftQA" name="DATE_STRING" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_UlPIlC15Ee-8Nr2H9gftQA" value="&quot;Inserisci la data [gg/mm/yyyy]: &quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_UlPIlS15Ee-8Nr2H9gftQA" name="ORARIO_STRING" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_UlPIli15Ee-8Nr2H9gftQA" value="&quot;Inserisci l'orario [hh:mm:ss] -> &quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_UlPIly15Ee-8Nr2H9gftQA" name="ORARIO_STRING_NOHOUR" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_UlPvoC15Ee-8Nr2H9gftQA" value="&quot;Inserisci l'orario [mm:ss] -> &quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_UlPvoS15Ee-8Nr2H9gftQA" name="ERRORE_FORMATO" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_UlPvoi15Ee-8Nr2H9gftQA" value="&quot;Attenzione: il dato inserito non e' nel formato corretto&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_UlPvpC15Ee-8Nr2H9gftQA" name="ERRORE_MINIMO" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_UlPvpS15Ee-8Nr2H9gftQA" value="&quot;Attenzione: e' richiesto un valore maggiore o uguale a &quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_UlQWsC15Ee-8Nr2H9gftQA" name="ERRORE_STRINGA_VUOTA" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_UlQWsS15Ee-8Nr2H9gftQA" value="&quot;Attenzione: non hai inserito alcun carattere&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_UlQWsy15Ee-8Nr2H9gftQA" name="ERRORE_MASSIMO" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_UlQWtC15Ee-8Nr2H9gftQA" value="&quot;Attenzione: e' richiesto un valore minore o uguale a &quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_UlQWti15Ee-8Nr2H9gftQA" name="MESSAGGIO_AMMISSIBILI" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_UlQ9wC15Ee-8Nr2H9gftQA" value="&quot;Attenzione: i caratteri ammissibili sono: &quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_UlQ9wi15Ee-8Nr2H9gftQA" name="RISPOSTA_SI" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_UlQ9wy15Ee-8Nr2H9gftQA" value="'S'"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_UlQ9xS15Ee-8Nr2H9gftQA" name="RISPOSTA_NO" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_UlQ9xi15Ee-8Nr2H9gftQA" value="'N'"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_UlhcfC15Ee-8Nr2H9gftQA" name="creaScanner" specification="_Uiy4kC15Ee-8Nr2H9gftQA">
                <ownedParameter xmi:id="_UlhcfS15Ee-8Nr2H9gftQA" type="_UlAfEC15Ee-8Nr2H9gftQA" direction="return"/>
                <language>java</language>
                <body>Scanner creato = new Scanner(System.in);
	   creato.useDelimiter(System.getProperty(&quot;line.separator&quot;));
	   return creato;
	  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ulhcfi15Ee-8Nr2H9gftQA" name="leggiStringa" specification="_Uiy4kS15Ee-8Nr2H9gftQA">
                <ownedParameter xmi:id="_Ulhcfy15Ee-8Nr2H9gftQA" name="messaggio">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UlhcgC15Ee-8Nr2H9gftQA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.print(messaggio);
		  return lettore.next();
	  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_UlhcgS15Ee-8Nr2H9gftQA" name="leggiStringaNonVuota" specification="_Uizfoi15Ee-8Nr2H9gftQA">
                <ownedParameter xmi:id="_Ulhcgi15Ee-8Nr2H9gftQA" name="messaggio">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Ulhcgy15Ee-8Nr2H9gftQA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>boolean finito=false;
	   String lettura = null;
	   do
	   {
		 lettura = leggiStringa(messaggio);
		 lettura = lettura.trim();
		 if (lettura.length() > 0)
		  finito=true;
		 else
		  System.out.println(ERRORE_STRINGA_VUOTA);
	   } while (!finito);
	   
	   return lettura;
	  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_UliDgC15Ee-8Nr2H9gftQA" name="leggiChar" specification="_UizfpS15Ee-8Nr2H9gftQA">
                <ownedParameter xmi:id="_UliDgS15Ee-8Nr2H9gftQA" name="messaggio">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UliDgi15Ee-8Nr2H9gftQA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
                </ownedParameter>
                <language>java</language>
                <body>boolean finito = false;
	   char valoreLetto = '\0';
	   do
	    {
	     System.out.print(messaggio);
	     String lettura = lettore.next();
	     if (lettura.length() > 0)
	      {
	       valoreLetto = lettura.charAt(0);
	       finito = true;
	      }
	     else
	      {
	       System.out.println(ERRORE_STRINGA_VUOTA);
	      }
	    } while (!finito);
	   return valoreLetto;
	  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_UliDgy15Ee-8Nr2H9gftQA" name="leggiUpperChar" specification="_Ui0GsC15Ee-8Nr2H9gftQA">
                <ownedParameter xmi:id="_UliDhC15Ee-8Nr2H9gftQA" name="messaggio">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UliDhS15Ee-8Nr2H9gftQA" name="ammissibili">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UliDhi15Ee-8Nr2H9gftQA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
                </ownedParameter>
                <language>java</language>
                <body>boolean finito = false;
	   char valoreLetto = '\0';
	   do
	   {
	    valoreLetto = leggiChar(messaggio);
	    valoreLetto = Character.toUpperCase(valoreLetto);
	    if (ammissibili.indexOf(valoreLetto) != -1)
		 finito  = true;
	    else
	     System.out.println(MESSAGGIO_AMMISSIBILI + ammissibili);
	   } while (!finito);
	   return valoreLetto;
	  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_UliDhy15Ee-8Nr2H9gftQA" name="leggiIntero" specification="_Ui0GtC15Ee-8Nr2H9gftQA">
                <ownedParameter xmi:id="_UliDiC15Ee-8Nr2H9gftQA" name="messaggio">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UliDiS15Ee-8Nr2H9gftQA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>boolean finito = false;
	   int valoreLetto = 0;
	   do
	    {
	     System.out.print(messaggio);
	     try
	      {
	       valoreLetto = lettore.nextInt();
	       finito = true;
	      }
	     catch (InputMismatchException e)
	      {
	       System.out.println(ERRORE_FORMATO);
        lettore.nextLine();
	      }
	    } while (!finito);
	   return valoreLetto;
	  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_UliDii15Ee-8Nr2H9gftQA" name="leggiInteroConMinimo" specification="_Ui0twC15Ee-8Nr2H9gftQA">
                <ownedParameter xmi:id="_UliDiy15Ee-8Nr2H9gftQA" name="messaggio">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UliDjC15Ee-8Nr2H9gftQA" name="minimo">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UliDjS15Ee-8Nr2H9gftQA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>boolean finito = false;
	   int valoreLetto = 0;
	   do
	    {
	     valoreLetto = leggiIntero(messaggio);
	     if (valoreLetto >= minimo)
	      finito = true;
	     else
	      System.out.println(ERRORE_MINIMO + minimo);
	    } while (!finito);
	     
	   return valoreLetto;
	  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_UliDji15Ee-8Nr2H9gftQA" name="leggiInteroRange" specification="_Ui0txC15Ee-8Nr2H9gftQA">
                <ownedParameter xmi:id="_UliDjy15Ee-8Nr2H9gftQA" name="messaggio">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UliDkC15Ee-8Nr2H9gftQA" name="minimo">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UliDkS15Ee-8Nr2H9gftQA" name="massimo">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UliDki15Ee-8Nr2H9gftQA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>boolean finito = false;
	   int valoreLetto = 0;
	   do
	    {
	     valoreLetto = leggiIntero(messaggio);
	     if (valoreLetto >= minimo &amp;&amp; valoreLetto&lt;= massimo)
	      finito = true;
	     else
	      if (valoreLetto &lt; minimo)
	         System.out.println(ERRORE_MINIMO + minimo);
	      else
	    	 System.out.println(ERRORE_MASSIMO + massimo); 
	    } while (!finito);
	     
	   return valoreLetto;
	  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_UliDky15Ee-8Nr2H9gftQA" name="leggiDouble" specification="_Ui1U0y15Ee-8Nr2H9gftQA">
                <ownedParameter xmi:id="_UliDlC15Ee-8Nr2H9gftQA" name="messaggio">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UliDlS15Ee-8Nr2H9gftQA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <language>java</language>
                <body>boolean finito = false;
	   double valoreLetto = 0;
	   do
	    {
	     System.out.print(messaggio);
	     try
	      {
	       valoreLetto = lettore.nextDouble();
	       finito = true;
	      }
	     catch (InputMismatchException e)
	      {
	       System.out.println(ERRORE_FORMATO);
	       lettore.nextLine();
	      }
	    } while (!finito);
	   return valoreLetto;
	  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_UliDli15Ee-8Nr2H9gftQA" name="leggiDoubleConMinimo" specification="_Ui1U1i15Ee-8Nr2H9gftQA">
                <ownedParameter xmi:id="_UliDly15Ee-8Nr2H9gftQA" name="messaggio">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UliDmC15Ee-8Nr2H9gftQA" name="minimo">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UliDmS15Ee-8Nr2H9gftQA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <language>java</language>
                <body>boolean finito = false;
	   double valoreLetto = 0;
	   do
	    {
	     valoreLetto = leggiDouble(messaggio);
	     if (valoreLetto >= minimo)
	      finito = true;
	     else
	      System.out.println(ERRORE_MINIMO + minimo);
	    } while (!finito);
	     
	   return valoreLetto;
	  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_UliDmi15Ee-8Nr2H9gftQA" name="yesOrNo" specification="_Ui174C15Ee-8Nr2H9gftQA">
                <ownedParameter xmi:id="_UliDmy15Ee-8Nr2H9gftQA" name="messaggio">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UliDnC15Ee-8Nr2H9gftQA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>String mioMessaggio = messaggio + &quot;(&quot;+RISPOSTA_SI+&quot;/&quot;+RISPOSTA_NO+&quot;) &quot;;
		  char valoreLetto = leggiUpperChar(mioMessaggio,String.valueOf(RISPOSTA_SI)+String.valueOf(RISPOSTA_NO));
		  
		  if (valoreLetto == RISPOSTA_SI)
			return true;
		  else
			return false;
	  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_Uiy4kC15Ee-8Nr2H9gftQA" name="creaScanner" visibility="private" isStatic="true" method="_UlhcfC15Ee-8Nr2H9gftQA">
                <ownedParameter xmi:id="_UlBGIC15Ee-8Nr2H9gftQA" type="_UlAfEC15Ee-8Nr2H9gftQA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Uiy4kS15Ee-8Nr2H9gftQA" name="leggiStringa" isStatic="true" method="_Ulhcfi15Ee-8Nr2H9gftQA">
                <ownedComment xmi:id="_Ulp_Ui15Ee-8Nr2H9gftQA">
                  <body>Metodo per leggere una stringa inserita dall'utente.
	   * 
	   * @param messaggio Il messaggio da visualizzare prima della richiesta di input
	   * @return La stringa inserita dall'utente</body>
                </ownedComment>
                <ownedParameter xmi:id="_UizfoC15Ee-8Nr2H9gftQA" name="messaggio">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UizfoS15Ee-8Nr2H9gftQA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Uizfoi15Ee-8Nr2H9gftQA" name="leggiStringaNonVuota" isStatic="true" method="_UlhcgS15Ee-8Nr2H9gftQA">
                <ownedComment xmi:id="_Ulp_Uy15Ee-8Nr2H9gftQA">
                  <body>Metodo per leggere una stringa inserita dall'utente, che non deve essere vuota.
	   * 
	   * @param messaggio Il messaggio da visualizzare prima della richiesta di input
	   * @return La stringa inserita dall'utente</body>
                </ownedComment>
                <ownedParameter xmi:id="_Uizfoy15Ee-8Nr2H9gftQA" name="messaggio">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UizfpC15Ee-8Nr2H9gftQA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UizfpS15Ee-8Nr2H9gftQA" name="leggiChar" isStatic="true" method="_UliDgC15Ee-8Nr2H9gftQA">
                <ownedComment xmi:id="_Ulp_VC15Ee-8Nr2H9gftQA">
                  <body>Metodo per leggere un carattere inserito dall'utente.
	   * 
	   * @param messaggio Il messaggio da visualizzare prima della richiesta di input
	   * @return Il carattere inserito dall'utente</body>
                </ownedComment>
                <ownedParameter xmi:id="_Uizfpi15Ee-8Nr2H9gftQA" name="messaggio">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Uizfpy15Ee-8Nr2H9gftQA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Ui0GsC15Ee-8Nr2H9gftQA" name="leggiUpperChar" isStatic="true" method="_UliDgy15Ee-8Nr2H9gftQA">
                <ownedComment xmi:id="_Ulp_VS15Ee-8Nr2H9gftQA">
                  <body>Metodo per leggere un carattere inserito dall'utente, convertendolo in maiuscolo.
	   * 
	   * @param messaggio Il messaggio da visualizzare prima della richiesta di input
	   * @param ammissibili Stringa contenente i caratteri ammissibili
	   * @return Il carattere inserito dall'utente, convertito in maiuscolo</body>
                </ownedComment>
                <ownedParameter xmi:id="_Ui0GsS15Ee-8Nr2H9gftQA" name="messaggio">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Ui0Gsi15Ee-8Nr2H9gftQA" name="ammissibili">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Ui0Gsy15Ee-8Nr2H9gftQA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Ui0GtC15Ee-8Nr2H9gftQA" name="leggiIntero" isStatic="true" method="_UliDhy15Ee-8Nr2H9gftQA">
                <ownedComment xmi:id="_Ulp_Vi15Ee-8Nr2H9gftQA">
                  <body>Metodo per leggere un intero inserito dall'utente.
	   * 
	   * @param messaggio Il messaggio da visualizzare prima della richiesta di input
	   * @return L'intero inserito dall'utente</body>
                </ownedComment>
                <ownedParameter xmi:id="_Ui0GtS15Ee-8Nr2H9gftQA" name="messaggio">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Ui0Gti15Ee-8Nr2H9gftQA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Ui0twC15Ee-8Nr2H9gftQA" name="leggiInteroConMinimo" isStatic="true" method="_UliDii15Ee-8Nr2H9gftQA">
                <ownedComment xmi:id="_Ulp_Vy15Ee-8Nr2H9gftQA">
                  <body>Metodo per leggere un intero inserito dall'utente, con un valore minimo specificato.
	   * 
	   * @param messaggio Il messaggio da visualizzare prima della richiesta di input
	   * @param minimo Il valore minimo ammesso per l'intero inserito
	   * @return L'intero inserito dall'utente</body>
                </ownedComment>
                <ownedParameter xmi:id="_Ui0twS15Ee-8Nr2H9gftQA" name="messaggio">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Ui0twi15Ee-8Nr2H9gftQA" name="minimo">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Ui0twy15Ee-8Nr2H9gftQA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Ui0txC15Ee-8Nr2H9gftQA" name="leggiInteroRange" isStatic="true" method="_UliDji15Ee-8Nr2H9gftQA">
                <ownedComment xmi:id="_Ulp_WC15Ee-8Nr2H9gftQA">
                  <body>Metodo per leggere un intero inserito dall'utente, compreso tra un valore minimo e un valore massimo specificati.
	   * 
	   * @param messaggio Il messaggio da visualizzare prima della richiesta di input
	   * @param minimo Il valore minimo ammesso per l'intero inserito
	   * @param massimo Il valore massimo ammesso per l'intero inserito
	   * @return L'intero inserito dall'utente</body>
                </ownedComment>
                <ownedParameter xmi:id="_Ui0txS15Ee-8Nr2H9gftQA" name="messaggio">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Ui1U0C15Ee-8Nr2H9gftQA" name="minimo">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Ui1U0S15Ee-8Nr2H9gftQA" name="massimo">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Ui1U0i15Ee-8Nr2H9gftQA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Ui1U0y15Ee-8Nr2H9gftQA" name="leggiDouble" isStatic="true" method="_UliDky15Ee-8Nr2H9gftQA">
                <ownedComment xmi:id="_Ulp_WS15Ee-8Nr2H9gftQA">
                  <body>Metodo per leggere un numero decimale (double) inserito dall'utente.
	   * 
	   * @param messaggio Il messaggio da visualizzare prima della richiesta di input
	   * @return Il numero decimale inserito dall'utente</body>
                </ownedComment>
                <ownedParameter xmi:id="_Ui1U1C15Ee-8Nr2H9gftQA" name="messaggio">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Ui1U1S15Ee-8Nr2H9gftQA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Ui1U1i15Ee-8Nr2H9gftQA" name="leggiDoubleConMinimo" isStatic="true" method="_UliDli15Ee-8Nr2H9gftQA">
                <ownedComment xmi:id="_Ulp_Wi15Ee-8Nr2H9gftQA">
                  <body>Metodo per leggere un numero decimale (double) inserito dall'utente, con un valore minimo specificato.
	   * 
	   * @param messaggio Il messaggio da visualizzare prima della richiesta di input
	   * @param minimo Il valore minimo ammesso per il numero decimale inserito
	   * @return Il numero decimale inserito dall'utente</body>
                </ownedComment>
                <ownedParameter xmi:id="_Ui1U1y15Ee-8Nr2H9gftQA" name="messaggio">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Ui1U2C15Ee-8Nr2H9gftQA" name="minimo">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Ui1U2S15Ee-8Nr2H9gftQA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Ui174C15Ee-8Nr2H9gftQA" name="yesOrNo" isStatic="true" method="_UliDmi15Ee-8Nr2H9gftQA">
                <ownedComment xmi:id="_Ulp_Wy15Ee-8Nr2H9gftQA">
                  <body>Metodo per chiedere all'utente una conferma (risposta Sì o No) tramite input.
	   * 
	   * @param messaggio Il messaggio da visualizzare prima della richiesta di conferma
	   * @return True se l'utente risponde &quot;Sì&quot;, False se l'utente risponde &quot;No&quot;</body>
                </ownedComment>
                <ownedParameter xmi:id="_Ui174S15Ee-8Nr2H9gftQA" name="messaggio">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Ui174i15Ee-8Nr2H9gftQA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_Ui3KAC15Ee-8Nr2H9gftQA" name="MyMenu">
              <ownedComment xmi:id="_Ulp_XC15Ee-8Nr2H9gftQA">
                <body>Questa classe rappresenta un menu testuale generico a più voci.
Si suppone che la voce per uscire sia sempre associata alla scelta 0 
e sia presentata in fondo al menu.

Autore: Daniele Martinelli e Federico Sabbadini</body>
              </ownedComment>
              <ownedAttribute xmi:id="_UlRk0C15Ee-8Nr2H9gftQA" name="CORNICE" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_UlRk0S15Ee-8Nr2H9gftQA" value="&quot;-------------------------------------------------------------------&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_UlRk0y15Ee-8Nr2H9gftQA" name="VOCE_USCITA" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_UlRk1C15Ee-8Nr2H9gftQA" value="&quot;0\tEsci&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_UlSL4S15Ee-8Nr2H9gftQA" name="RICHIESTA_INSERIMENTO" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_UlSL4i15Ee-8Nr2H9gftQA" value="&quot;Digita il numero dell'opzione desiderata > &quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_UlSL5C15Ee-8Nr2H9gftQA" name="titolo" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_UlSL5i15Ee-8Nr2H9gftQA" name="voci" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_UlSL5y15Ee-8Nr2H9gftQA" value="*"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_UliqkC15Ee-8Nr2H9gftQA" name="MyMenu" specification="_Ui3xEC15Ee-8Nr2H9gftQA">
                <ownedParameter xmi:id="_UliqkS15Ee-8Nr2H9gftQA" name="titolo">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Uliqki15Ee-8Nr2H9gftQA" name="voci">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Uliqky15Ee-8Nr2H9gftQA" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UliqlC15Ee-8Nr2H9gftQA" type="_Ui3KAC15Ee-8Nr2H9gftQA" direction="return"/>
                <language>java</language>
                <body>this.titolo = titolo;
     this.voci = voci;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_UliqlS15Ee-8Nr2H9gftQA" name="scegli" specification="_Ui4YJC15Ee-8Nr2H9gftQA">
                <ownedParameter xmi:id="_Uliqli15Ee-8Nr2H9gftQA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>stampaMenu();
     return InputDati.leggiInteroRange(RICHIESTA_INSERIMENTO, 0, voci.length);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Uliqly15Ee-8Nr2H9gftQA" name="stampaMenu" specification="_Ui4YJi15Ee-8Nr2H9gftQA">
                <language>java</language>
                <body>System.out.println(CORNICE);
     System.out.println(titolo);
     System.out.println(CORNICE);
     for (int i = 0; i &lt; voci.length; i++) {
         System.out.println((i + 1) + &quot;\t&quot; + voci[i]);
     }
     System.out.println();
     System.out.println(VOCE_USCITA);
     System.out.println();
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_Ui3xEC15Ee-8Nr2H9gftQA" name="MyMenu" method="_UliqkC15Ee-8Nr2H9gftQA">
                <eAnnotations xmi:id="_Ui4YIC15Ee-8Nr2H9gftQA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_Ui4YIS15Ee-8Nr2H9gftQA" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_Ulp_XS15Ee-8Nr2H9gftQA">
                  <body>Costruttore della classe MyMenu.
     * 
     * @param titolo Il titolo del menu
     * @param voci L'array di stringhe contenente le voci del menu</body>
                </ownedComment>
                <ownedParameter xmi:id="_Ui3xES15Ee-8Nr2H9gftQA" name="titolo">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Ui3xEi15Ee-8Nr2H9gftQA" name="voci">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Ui4YIy15Ee-8Nr2H9gftQA" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Ui4YIi15Ee-8Nr2H9gftQA" type="_Ui3KAC15Ee-8Nr2H9gftQA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Ui4YJC15Ee-8Nr2H9gftQA" name="scegli" method="_UliqlS15Ee-8Nr2H9gftQA">
                <ownedComment xmi:id="_Ulp_Xi15Ee-8Nr2H9gftQA">
                  <body>Metodo per permettere all'utente di scegliere un'opzione dal menu.
     * 
     * @return Il numero dell'opzione scelta dall'utente</body>
                </ownedComment>
                <ownedParameter xmi:id="_Ui4YJS15Ee-8Nr2H9gftQA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Ui4YJi15Ee-8Nr2H9gftQA" name="stampaMenu" method="_Uliqly15Ee-8Nr2H9gftQA">
                <ownedComment xmi:id="_UlqmYC15Ee-8Nr2H9gftQA">
                  <body>Metodo per stampare il menu a schermo.</body>
                </ownedComment>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_Ulve4C15Ee-8Nr2H9gftQA" name="" memberEnd="_Ulve4S15Ee-8Nr2H9gftQA _UlOhgC15Ee-8Nr2H9gftQA">
              <ownedEnd xmi:id="_Ulve4S15Ee-8Nr2H9gftQA" name="" type="_Uiv1QC15Ee-8Nr2H9gftQA" association="_Ulve4C15Ee-8Nr2H9gftQA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_UlwF8S15Ee-8Nr2H9gftQA" name="" memberEnd="_UlwF8i15Ee-8Nr2H9gftQA _UlPIkC15Ee-8Nr2H9gftQA">
              <ownedEnd xmi:id="_UlwF8i15Ee-8Nr2H9gftQA" name="" type="_UiyRgC15Ee-8Nr2H9gftQA" association="_UlwF8S15Ee-8Nr2H9gftQA"/>
            </packagedElement>
          </packagedElement>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_UiNCsC15Ee-8Nr2H9gftQA" name="ids">
          <packagedElement xmi:type="uml:Package" xmi:id="_UiNCsi15Ee-8Nr2H9gftQA" name="progetto">
            <packagedElement xmi:type="uml:Package" xmi:id="_UiNCsy15Ee-8Nr2H9gftQA" name="ecccezioni">
              <packagedElement xmi:type="uml:Class" xmi:id="_UjbKsC15Ee-8Nr2H9gftQA" name="ConfLoginFailException">
                <ownedComment xmi:id="_Ulsbmy15Ee-8Nr2H9gftQA">
                  <body>Eccezione personalizzata per gestire il caso 
in cui un tentativo di login da parte di un configuratore 
fallisca a causa di credenziali errate.

@author Daniele Martinelli
@author Federico Sabbadini</body>
                </ownedComment>
                <generalization xmi:id="_UlMFQS15Ee-8Nr2H9gftQA" general="_UlLeMS15Ee-8Nr2H9gftQA"/>
                <ownedAttribute xmi:id="_UlgOUC15Ee-8Nr2H9gftQA" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_UlgOUS15Ee-8Nr2H9gftQA" value="1L"/>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_UloxPS15Ee-8Nr2H9gftQA" name="ConfLoginFailException" specification="_UjbxwC15Ee-8Nr2H9gftQA">
                  <ownedParameter xmi:id="_UloxPi15Ee-8Nr2H9gftQA" type="_UjbKsC15Ee-8Nr2H9gftQA" direction="return"/>
                  <language>java</language>
                  <body>// Richiama il costruttore della superclasse Exception e imposta un messaggio di errore predefinito
     super(&quot;Credenziali di accesso del configuratore non valide!&quot;);
 </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_UjbxwC15Ee-8Nr2H9gftQA" name="ConfLoginFailException" method="_UloxPS15Ee-8Nr2H9gftQA">
                  <eAnnotations xmi:id="_UjbxwS15Ee-8Nr2H9gftQA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_Ujbxwi15Ee-8Nr2H9gftQA" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_Ujbxwy15Ee-8Nr2H9gftQA" type="_UjbKsC15Ee-8Nr2H9gftQA" direction="return"/>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_UjbxxC15Ee-8Nr2H9gftQA" name="LeafHasChildrenException">
                <ownedComment xmi:id="_UlsbnC15Ee-8Nr2H9gftQA">
                  <body>Eccezione personalizzata per gestire il caso in cui una foglia 
tenti di aggiungere figli, il che non è consentito.

@author Daniele Martinelli
@author Federico Sabbadini</body>
                </ownedComment>
                <generalization xmi:id="_UlMFQi15Ee-8Nr2H9gftQA" general="_UlLeMS15Ee-8Nr2H9gftQA"/>
                <ownedAttribute xmi:id="_UlgOUi15Ee-8Nr2H9gftQA" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_UlgOUy15Ee-8Nr2H9gftQA" value="1L"/>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_UloxPy15Ee-8Nr2H9gftQA" name="LeafHasChildrenException" specification="_UjcY0C15Ee-8Nr2H9gftQA">
                  <ownedParameter xmi:id="_UloxQC15Ee-8Nr2H9gftQA" type="_UjbxxC15Ee-8Nr2H9gftQA" direction="return"/>
                  <language>java</language>
                  <body>super(&quot;Le foglie non possono avere figli&quot;);
 </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_UjcY0C15Ee-8Nr2H9gftQA" name="LeafHasChildrenException" method="_UloxPy15Ee-8Nr2H9gftQA">
                  <eAnnotations xmi:id="_UjcY0S15Ee-8Nr2H9gftQA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_UjcY0i15Ee-8Nr2H9gftQA" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_UjcY0y15Ee-8Nr2H9gftQA" type="_UjbxxC15Ee-8Nr2H9gftQA" direction="return"/>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_UjcY1C15Ee-8Nr2H9gftQA" name="RootTreeException">
                <ownedComment xmi:id="_UlsbnS15Ee-8Nr2H9gftQA">
                  <body>Eccezione personalizzata per gestire il caso in cui un nodo 
non radice tenti di essere inserito in testa ad un albero,
il che non è consentito.

@author Daniele Martinelli
@author Federico Sabbadini</body>
                </ownedComment>
                <generalization xmi:id="_UlMsUC15Ee-8Nr2H9gftQA" general="_UlLeMS15Ee-8Nr2H9gftQA"/>
                <ownedAttribute xmi:id="_UlgOVC15Ee-8Nr2H9gftQA" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_UlgOVS15Ee-8Nr2H9gftQA" value="1L"/>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_UlpYQC15Ee-8Nr2H9gftQA" name="RootTreeException" specification="_Ujc_4C15Ee-8Nr2H9gftQA">
                  <ownedParameter xmi:id="_UlpYQS15Ee-8Nr2H9gftQA" type="_UjcY1C15Ee-8Nr2H9gftQA" direction="return"/>
                  <language>java</language>
                  <body>super(&quot;Il nodo in testa all'albero deve essere radice&quot;);
 </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_Ujc_4C15Ee-8Nr2H9gftQA" name="RootTreeException" method="_UlpYQC15Ee-8Nr2H9gftQA">
                  <eAnnotations xmi:id="_Ujc_4S15Ee-8Nr2H9gftQA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_Ujc_4i15Ee-8Nr2H9gftQA" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_Ujc_4y15Ee-8Nr2H9gftQA" type="_UjcY1C15Ee-8Nr2H9gftQA" direction="return"/>
                </ownedOperation>
              </packagedElement>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_Ui4_MC15Ee-8Nr2H9gftQA" name="Albero">
              <ownedComment xmi:id="_UlqmYS15Ee-8Nr2H9gftQA">
                <body>Questa classe rappresenta un albero gerarchico, composto da nodi, utilizzato per la gestione delle notizie.
Ogni albero ha una radice, foglie e un utente associato.

@author Daniele Martinelli
@author Federico Sabbadini</body>
              </ownedComment>
              <ownedAttribute xmi:id="_UlSy8S15Ee-8Nr2H9gftQA" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_UlSy8i15Ee-8Nr2H9gftQA" value="1L"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_UlSy8y15Ee-8Nr2H9gftQA" name="radice" type="_UjO9cC15Ee-8Nr2H9gftQA" isReadOnly="true" association="_UlwF9C15Ee-8Nr2H9gftQA"/>
              <ownedAttribute xmi:id="_UlSy9C15Ee-8Nr2H9gftQA" name="foglie" type="_Uks9EC15Ee-8Nr2H9gftQA" isReadOnly="true" association="_UlwtAS15Ee-8Nr2H9gftQA"/>
              <ownedAttribute xmi:id="_UlTaAS15Ee-8Nr2H9gftQA" name="utente" type="_UjXgUC15Ee-8Nr2H9gftQA" association="_UlqmYi15Ee-8Nr2H9gftQA"/>
              <interfaceRealization xmi:id="_UlBtMC15Ee-8Nr2H9gftQA" client="_Ui4_MC15Ee-8Nr2H9gftQA" supplier="_UksWAC15Ee-8Nr2H9gftQA" contract="_UksWAC15Ee-8Nr2H9gftQA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_UliqmC15Ee-8Nr2H9gftQA" name="Albero" specification="_Uks9Ei15Ee-8Nr2H9gftQA">
                <ownedParameter xmi:id="_UliqmS15Ee-8Nr2H9gftQA" name="radice" type="_UjO9cC15Ee-8Nr2H9gftQA"/>
                <ownedParameter xmi:id="_Uliqmi15Ee-8Nr2H9gftQA" type="_Ui4_MC15Ee-8Nr2H9gftQA" direction="return"/>
                <language>java</language>
                <body>if (radice.root()!=null) throw new RootTreeException();
     this.foglie = new ArrayList&lt;Nodo>();
     this.radice = radice;
     addFoglie(radice);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Uliqmy15Ee-8Nr2H9gftQA" name="addFoglie" specification="_UktkJC15Ee-8Nr2H9gftQA">
                <ownedParameter xmi:id="_UliqnC15Ee-8Nr2H9gftQA" name="albero" type="_UjO9cC15Ee-8Nr2H9gftQA"/>
                <language>java</language>
                <body>if (albero.isLeaf()) 
         foglie.add(albero);
     else {
         for (Nodo child : albero.getChildren()) {
             addFoglie(child);
         }
     }
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_UliqnS15Ee-8Nr2H9gftQA" name="toString" specification="_Ui5mQC15Ee-8Nr2H9gftQA">
                <ownedParameter xmi:id="_Uliqni15Ee-8Nr2H9gftQA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>StringBuffer bf = new StringBuffer();
     iterative(bf, this.radice, 1);
     return bf.toString();
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Uliqny15Ee-8Nr2H9gftQA" name="iterative" specification="_UlCUQS15Ee-8Nr2H9gftQA">
                <ownedParameter xmi:id="_UliqoC15Ee-8Nr2H9gftQA" name="bf" type="_UlBtMi15Ee-8Nr2H9gftQA"/>
                <ownedParameter xmi:id="_UliqoS15Ee-8Nr2H9gftQA" name="nodo" type="_UjO9cC15Ee-8Nr2H9gftQA"/>
                <ownedParameter xmi:id="_Uliqoi15Ee-8Nr2H9gftQA" name="depth">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>String asterischi = &quot;*&quot;.repeat(depth); // Genera una stringa di asterischi in base al grado di &quot;figlio di&quot;
     String blank = &quot; &quot;.repeat(depth + 1);
     if (nodo.isLeaf()) {
         bf.append(asterischi + &quot; &quot; + nodo.getNome());
     } else {
         bf.append(asterischi + nodo.toString(blank));
         for (Nodo nodoChild : nodo.getChildren()) {
             bf.append(&quot;\n&quot;);
             iterative(bf, nodoChild, depth + 1);
         }
     }
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_Ui5mQC15Ee-8Nr2H9gftQA" name="toString" method="_UliqnS15Ee-8Nr2H9gftQA">
                <ownedParameter xmi:id="_Ui5mQS15Ee-8Nr2H9gftQA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Uks9Ei15Ee-8Nr2H9gftQA" name="Albero" method="_UliqmC15Ee-8Nr2H9gftQA" raisedException="_UjcY1C15Ee-8Nr2H9gftQA">
                <eAnnotations xmi:id="_UktkIS15Ee-8Nr2H9gftQA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_UktkIi15Ee-8Nr2H9gftQA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_UktkIC15Ee-8Nr2H9gftQA" name="radice" type="_UjO9cC15Ee-8Nr2H9gftQA"/>
                <ownedParameter xmi:id="_UktkIy15Ee-8Nr2H9gftQA" type="_Ui4_MC15Ee-8Nr2H9gftQA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_UktkJC15Ee-8Nr2H9gftQA" name="addFoglie" visibility="private" method="_Uliqmy15Ee-8Nr2H9gftQA">
                <ownedParameter xmi:id="_UktkJS15Ee-8Nr2H9gftQA" name="albero" type="_UjO9cC15Ee-8Nr2H9gftQA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_UlCUQS15Ee-8Nr2H9gftQA" name="iterative" visibility="private" isStatic="true" method="_Uliqny15Ee-8Nr2H9gftQA">
                <ownedParameter xmi:id="_UlCUQi15Ee-8Nr2H9gftQA" name="bf" type="_UlBtMi15Ee-8Nr2H9gftQA"/>
                <ownedParameter xmi:id="_UlCUQy15Ee-8Nr2H9gftQA" name="nodo" type="_UjO9cC15Ee-8Nr2H9gftQA"/>
                <ownedParameter xmi:id="_UlCURC15Ee-8Nr2H9gftQA" name="depth">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_Ui60YC15Ee-8Nr2H9gftQA" name="Application">
              <ownedComment xmi:id="_UlqmZC15Ee-8Nr2H9gftQA">
                <body>Questa classe contiene i metodi statici 
necessari all'esecuzione del sistema

@author Daniele Martinelli
@author Federico Sabbadini</body>
              </ownedComment>
              <ownedAttribute xmi:id="_UlTaAi15Ee-8Nr2H9gftQA" name="NUM_MAX_TENTATIVI" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_UlTaAy15Ee-8Nr2H9gftQA" value="3"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Uliqoy15Ee-8Nr2H9gftQA" name="registrazione" specification="_UkuLMC15Ee-8Nr2H9gftQA">
                <ownedParameter xmi:id="_UliqpC15Ee-8Nr2H9gftQA" name="utenza" type="_UjZVgC15Ee-8Nr2H9gftQA"/>
                <language>java</language>
                <body>Configuratore configuratore = new Configuratore();
     String id = configuratore.getID();
     String psswd = configuratore.getPassword();
     System.out.println(&quot;ID di default: &quot; + id);
     System.out.println(&quot;Password di default: &quot; + psswd);

     Credenziali credenziali = new Credenziali(id, psswd);
     configuratore.setCredenziali(credenziali);
     configuratore.setIsDefinitivo(false);
     utenza.addUtente(configuratore);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_UliqpS15Ee-8Nr2H9gftQA" name="login" specification="_UkuLMi15Ee-8Nr2H9gftQA">
                <ownedParameter xmi:id="_Uliqpi15Ee-8Nr2H9gftQA" name="utenza" type="_UjZVgC15Ee-8Nr2H9gftQA"/>
                <ownedParameter xmi:id="_Uliqpy15Ee-8Nr2H9gftQA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>int accesso = 1;
     for (int i = 0; i &lt; NUM_MAX_TENTATIVI; i++) {
         System.out.println(&quot;Inserisci dati di login: &quot;);
         String ID = InputDati.leggiStringaNonVuota(&quot;  ID: &quot;);
         String PSSW = InputDati.leggiStringaNonVuota(&quot;  Password: &quot;);
         try {
             accesso = autenticazione(utenza, ID, PSSW);
         } catch (ConfLoginFailException e) {
             System.out.println(e.getMessage());
             System.out.println();
         }
         if (accesso != 1) 
             break;
     }
     return accesso;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_UljRoC15Ee-8Nr2H9gftQA" name="autenticazione" specification="_UkuyQC15Ee-8Nr2H9gftQA">
                <ownedParameter xmi:id="_UljRoS15Ee-8Nr2H9gftQA" name="utenza" type="_UjZVgC15Ee-8Nr2H9gftQA"/>
                <ownedParameter xmi:id="_UljRoi15Ee-8Nr2H9gftQA" name="ID">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UljRoy15Ee-8Nr2H9gftQA" name="PSSW">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UljRpC15Ee-8Nr2H9gftQA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>Configuratore conf = utenza.autenticazioneConfiguratore(ID, PSSW);
     if (conf == null) {
         throw new ConfLoginFailException();
     } else if (!conf.getCredenziali().isDefinitive()) {
         System.out.println(&quot;Scegli nuove credenziali: &quot;);
         Credenziali credenzialiRegistrazione = primoAccesso(utenza);
         conf.setCredenziali(credenzialiRegistrazione);
         conf.setIsDefinitivo(true);
         return 2;
     } else {
         System.out.println(&quot;-> Utente riconosciuto&quot;);
         return 2;
     }
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_UljRpS15Ee-8Nr2H9gftQA" name="primoAccesso" specification="_UkuyRS15Ee-8Nr2H9gftQA">
                <ownedParameter xmi:id="_UljRpi15Ee-8Nr2H9gftQA" name="utenza" type="_UjZVgC15Ee-8Nr2H9gftQA"/>
                <ownedParameter xmi:id="_UljRpy15Ee-8Nr2H9gftQA" type="_UjAT8i15Ee-8Nr2H9gftQA" direction="return"/>
                <language>java</language>
                <body>String ID;
     do {
         ID = InputDati.leggiStringaNonVuota(&quot;  ID: &quot;);
         if (utenza.verificaEsistenzaID(ID)) System.out.println(&quot; ! ID già utilizzato ! &quot;);
     } while (utenza.verificaEsistenzaID(ID));

     String PSSW = InputDati.leggiStringaNonVuota(&quot;  Password: &quot;);
     return new Credenziali(ID, PSSW);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_UljRqC15Ee-8Nr2H9gftQA" name="creaComprensorio" specification="_UkvZUC15Ee-8Nr2H9gftQA">
                <ownedParameter xmi:id="_UljRqS15Ee-8Nr2H9gftQA" name="geografia" type="_UjI20C15Ee-8Nr2H9gftQA"/>
                <language>java</language>
                <body>String nome;
		do {
			nome = InputDati.leggiStringaNonVuota(&quot;Nome: &quot;);
		} while (geografia.verificaEsistenzaComprensorio(nome));
     Comprensorio comprensorio = new Comprensorio(nome);

     System.out.println(&quot;Inserisci comprensorio (Exit per uscire) &quot;);
     String comune;

     do {
         comune = InputDati.leggiStringaNonVuota(&quot;  comune -> &quot;);
         comprensorio.addComune(comune);
     } while (!comune.equalsIgnoreCase(&quot;Exit&quot;));

     int size = comprensorio.getComprensorio().size();
     comprensorio.getComprensorio().remove(size - 1);

     geografia.addComprensorio(comprensorio);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_UljRqi15Ee-8Nr2H9gftQA" name="creaRadice" specification="_UkvZUi15Ee-8Nr2H9gftQA">
                <ownedParameter xmi:id="_UljRqy15Ee-8Nr2H9gftQA" name="gerarchia" type="_UjKsAC15Ee-8Nr2H9gftQA"/>
                <ownedParameter xmi:id="_UljRrC15Ee-8Nr2H9gftQA" type="_UjO9cC15Ee-8Nr2H9gftQA" direction="return"/>
                <language>java</language>
                <body>String radice;
	    do {
	        radice = InputDati.leggiStringaNonVuota(&quot;Nome radice -> &quot;);
	    } while (gerarchia.verificaEsistenzaNomeRadice(radice));

	    String campo = InputDati.leggiStringaNonVuota(&quot;Campo -> &quot;);
	    Nodo root = new Nodo(radice, null, campo);

	    creaValoriDominio(root);

	    return root;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_UljRrS15Ee-8Nr2H9gftQA" name="creaValoriDominio" specification="_UkvZVS15Ee-8Nr2H9gftQA">
                <ownedParameter xmi:id="_UljRri15Ee-8Nr2H9gftQA" name="nodo" type="_UjO9cC15Ee-8Nr2H9gftQA"/>
                <language>java</language>
                <body>int num = 0;
     do {
         num++;
         String valoreDominio = InputDati.leggiStringaNonVuota(num + &quot;' valore del dominio -> &quot;);
         if (InputDati.yesOrNo(&quot;  Vuoi inserire una descrizione di &quot; + valoreDominio + &quot;? &quot;)) {
             String descrizioneDominio = InputDati.leggiStringaNonVuota(&quot;Descrizione -> &quot;);
             nodo.addElementiDominio(valoreDominio, descrizioneDominio);
         } else {
             nodo.addElementiDominio(valoreDominio);
         }
     } while (InputDati.yesOrNo(&quot;Vuoi aggiugere un altro elemento al dominio? &quot;));
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_UljRry15Ee-8Nr2H9gftQA" name="creaNodiFiglio" specification="_UlC7UC15Ee-8Nr2H9gftQA">
                <ownedParameter xmi:id="_UljRsC15Ee-8Nr2H9gftQA" name="nodoParent" type="_UjO9cC15Ee-8Nr2H9gftQA"/>
                <ownedParameter xmi:id="_UljRsS15Ee-8Nr2H9gftQA" name="gerarchia" type="_UjKsAC15Ee-8Nr2H9gftQA"/>
                <ownedParameter xmi:id="_UljRsi15Ee-8Nr2H9gftQA" name="radice" type="_UjO9cC15Ee-8Nr2H9gftQA"/>
                <ownedParameter xmi:id="_UljRsy15Ee-8Nr2H9gftQA" name="foglieAttuali" type="_Uks9EC15Ee-8Nr2H9gftQA"/>
                <language>java</language>
                <body>int numFigli = 0;
	    do {
	        numFigli++;
	        System.out.println(&quot;\n&quot; + numFigli + &quot;' figlio (di &quot; + nodoParent.getNome() 
	        + &quot; [&quot; +nodoParent.getDominio(numFigli)+ &quot;]): &quot;);
   
	        String nome;
	        do {
	            nome = InputDati.leggiStringaNonVuota(&quot;Nome -> &quot;);
	        } while (radice.verificaEsistenzaNome(nome));

	        boolean isFoglia = InputDati.yesOrNo(&quot;È foglia? &quot;);
	        Nodo nodoChild;
	        if (isFoglia) {
	            nodoChild = new Nodo(nome, radice.getNome());
	            foglieAttuali.add(nodoChild);
	        } else {
	            nodoChild = creaNonFoglia(nome, radice);
	        }

	        try {
	            nodoParent.addChild(nodoChild);
	        } catch (Exception e) {
	            e.getMessage();
	        }
	    } while (numFigli &lt; nodoParent.getDominio().size());

	    for (Nodo nodo : nodoParent.getChildren()) {
	        if (!nodo.isLeaf()) {
	            creaNodiFiglio(nodo, gerarchia, radice, foglieAttuali);
	        }
	    }
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_UljRtC15Ee-8Nr2H9gftQA" name="creaNonFoglia" specification="_UkwAYC15Ee-8Nr2H9gftQA">
                <ownedParameter xmi:id="_UljRtS15Ee-8Nr2H9gftQA" name="nome">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UljRti15Ee-8Nr2H9gftQA" name="radice" type="_UjO9cC15Ee-8Nr2H9gftQA"/>
                <ownedParameter xmi:id="_UljRty15Ee-8Nr2H9gftQA" type="_UjO9cC15Ee-8Nr2H9gftQA" direction="return"/>
                <language>java</language>
                <body>String campo = InputDati.leggiStringaNonVuota(&quot;Campo -> &quot;);
	    Nodo nodoChild = new Nodo(nome, radice.getNome(), campo);

	    creaValoriDominio(nodoChild);

	    return nodoChild;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_UljRuC15Ee-8Nr2H9gftQA" name="creaFattoriConversione" specification="_UlDiYS15Ee-8Nr2H9gftQA">
                <ownedParameter xmi:id="_UljRuS15Ee-8Nr2H9gftQA" name="gerarchia" type="_UjKsAC15Ee-8Nr2H9gftQA"/>
                <ownedParameter xmi:id="_UljRui15Ee-8Nr2H9gftQA" name="foglieAttuali" type="_Uks9EC15Ee-8Nr2H9gftQA"/>
                <language>java</language>
                <body>System.out.println(&quot;\nInserimento fattori di conversione:&quot;);
     do {
         Nodo nodo1 = chiediFoglia(&quot;Foglia 1:&quot;, gerarchia);
         Nodo nodo2 = chiediFoglia(&quot;Foglia 2:&quot;, gerarchia);

         double fattoreDiConversione = chiediFattoreConversione(gerarchia);

         boolean condizione = !foglieAttuali.contains(nodo1)
                 &amp;&amp; !foglieAttuali.contains(nodo2);
         if (!condizione) {
             nodo1.addFattoreConversione(nodo2, fattoreDiConversione);
             nodo2.addFattoreConversione(nodo1, 1/fattoreDiConversione);
         }
     } while (InputDati.yesOrNo(&quot;Vuoi continuare l'inserimento? &quot;));

     Nodo.addTransitivoFattoreConversione(gerarchia);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_UljRuy15Ee-8Nr2H9gftQA" name="chiediFoglia" specification="_UkwAZC15Ee-8Nr2H9gftQA">
                <ownedParameter xmi:id="_UljRvC15Ee-8Nr2H9gftQA" name="messaggio">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UljRvS15Ee-8Nr2H9gftQA" name="gerarchia" type="_UjKsAC15Ee-8Nr2H9gftQA"/>
                <ownedParameter xmi:id="_UljRvi15Ee-8Nr2H9gftQA" type="_UjO9cC15Ee-8Nr2H9gftQA" direction="return"/>
                <language>java</language>
                <body>Nodo nodo;
     do {
         System.out.println(messaggio);
         String foglia = InputDati.leggiStringaNonVuota(&quot;  Nome -> &quot;);
         String radice = InputDati.leggiStringaNonVuota(&quot;  Radice -> &quot;);
         nodo = gerarchia.visualizzaFoglia(foglia, radice);
         
     } while (nodo == null);
     return nodo;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_UljRvy15Ee-8Nr2H9gftQA" name="chiediFattoreConversione" specification="_UkwAaC15Ee-8Nr2H9gftQA">
                <ownedParameter xmi:id="_UljRwC15Ee-8Nr2H9gftQA" name="gerarchia" type="_UjKsAC15Ee-8Nr2H9gftQA"/>
                <ownedParameter xmi:id="_UljRwS15Ee-8Nr2H9gftQA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <language>java</language>
                <body>double fattoreDiConversione;
	    do {
	        fattoreDiConversione = InputDati.leggiDouble(&quot;Fattore di conversione -> &quot;);
	    } while (!Nodo.verificaFattoreConversione(fattoreDiConversione));
	    return fattoreDiConversione;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ulj4sC15Ee-8Nr2H9gftQA" name="stampaFattori" specification="_UkwncC15Ee-8Nr2H9gftQA">
                <ownedParameter xmi:id="_Ulj4sS15Ee-8Nr2H9gftQA" name="gerarchia" type="_UjKsAC15Ee-8Nr2H9gftQA"/>
                <language>java</language>
                <body>String foglia = InputDati.leggiStringaNonVuota(&quot;Inserisci nome foglia: &quot;);
     String radice = InputDati.leggiStringaNonVuota(&quot;Inserisci radice della gerarchia della foglia: &quot;);
     Nodo nodo = gerarchia.visualizzaFoglia(foglia, radice);
     if (nodo == null)
         System.out.println(&quot;  Non è stata trovata nessuna corrispondenza&quot;);
     else
         System.out.println(nodo.toStringFactors());
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_UkuLMC15Ee-8Nr2H9gftQA" name="registrazione" isStatic="true" method="_Uliqoy15Ee-8Nr2H9gftQA">
                <ownedParameter xmi:id="_UkuLMS15Ee-8Nr2H9gftQA" name="utenza" type="_UjZVgC15Ee-8Nr2H9gftQA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_UkuLMi15Ee-8Nr2H9gftQA" name="login" isStatic="true" method="_UliqpS15Ee-8Nr2H9gftQA">
                <ownedParameter xmi:id="_UkuLMy15Ee-8Nr2H9gftQA" name="utenza" type="_UjZVgC15Ee-8Nr2H9gftQA"/>
                <ownedParameter xmi:id="_UkuLNC15Ee-8Nr2H9gftQA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UkuyQC15Ee-8Nr2H9gftQA" name="autenticazione" visibility="private" isStatic="true" method="_UljRoC15Ee-8Nr2H9gftQA" raisedException="_UjbKsC15Ee-8Nr2H9gftQA">
                <ownedParameter xmi:id="_UkuyQS15Ee-8Nr2H9gftQA" name="utenza" type="_UjZVgC15Ee-8Nr2H9gftQA"/>
                <ownedParameter xmi:id="_UkuyQi15Ee-8Nr2H9gftQA" name="ID">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UkuyQy15Ee-8Nr2H9gftQA" name="PSSW">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UkuyRC15Ee-8Nr2H9gftQA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UkuyRS15Ee-8Nr2H9gftQA" name="primoAccesso" visibility="private" isStatic="true" method="_UljRpS15Ee-8Nr2H9gftQA">
                <ownedParameter xmi:id="_UkuyRi15Ee-8Nr2H9gftQA" name="utenza" type="_UjZVgC15Ee-8Nr2H9gftQA"/>
                <ownedParameter xmi:id="_UkuyRy15Ee-8Nr2H9gftQA" type="_UjAT8i15Ee-8Nr2H9gftQA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_UkvZUC15Ee-8Nr2H9gftQA" name="creaComprensorio" isStatic="true" method="_UljRqC15Ee-8Nr2H9gftQA">
                <ownedParameter xmi:id="_UkvZUS15Ee-8Nr2H9gftQA" name="geografia" type="_UjI20C15Ee-8Nr2H9gftQA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_UkvZUi15Ee-8Nr2H9gftQA" name="creaRadice" isStatic="true" method="_UljRqi15Ee-8Nr2H9gftQA">
                <ownedParameter xmi:id="_UkvZUy15Ee-8Nr2H9gftQA" name="gerarchia" type="_UjKsAC15Ee-8Nr2H9gftQA"/>
                <ownedParameter xmi:id="_UkvZVC15Ee-8Nr2H9gftQA" type="_UjO9cC15Ee-8Nr2H9gftQA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_UkvZVS15Ee-8Nr2H9gftQA" name="creaValoriDominio" visibility="private" isStatic="true" method="_UljRrS15Ee-8Nr2H9gftQA">
                <ownedParameter xmi:id="_UkvZVi15Ee-8Nr2H9gftQA" name="nodo" type="_UjO9cC15Ee-8Nr2H9gftQA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_UkwAYC15Ee-8Nr2H9gftQA" name="creaNonFoglia" visibility="private" isStatic="true" method="_UljRtC15Ee-8Nr2H9gftQA">
                <ownedParameter xmi:id="_UkwAYS15Ee-8Nr2H9gftQA" name="nome">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UkwAYi15Ee-8Nr2H9gftQA" name="radice" type="_UjO9cC15Ee-8Nr2H9gftQA"/>
                <ownedParameter xmi:id="_UkwAYy15Ee-8Nr2H9gftQA" type="_UjO9cC15Ee-8Nr2H9gftQA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_UkwAZC15Ee-8Nr2H9gftQA" name="chiediFoglia" visibility="private" isStatic="true" method="_UljRuy15Ee-8Nr2H9gftQA">
                <ownedParameter xmi:id="_UkwAZS15Ee-8Nr2H9gftQA" name="messaggio">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UkwAZi15Ee-8Nr2H9gftQA" name="gerarchia" type="_UjKsAC15Ee-8Nr2H9gftQA"/>
                <ownedParameter xmi:id="_UkwAZy15Ee-8Nr2H9gftQA" type="_UjO9cC15Ee-8Nr2H9gftQA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_UkwAaC15Ee-8Nr2H9gftQA" name="chiediFattoreConversione" visibility="private" isStatic="true" method="_UljRvy15Ee-8Nr2H9gftQA">
                <ownedParameter xmi:id="_UkwAaS15Ee-8Nr2H9gftQA" name="gerarchia" type="_UjKsAC15Ee-8Nr2H9gftQA"/>
                <ownedParameter xmi:id="_UkwAai15Ee-8Nr2H9gftQA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UkwncC15Ee-8Nr2H9gftQA" name="stampaFattori" isStatic="true" method="_Ulj4sC15Ee-8Nr2H9gftQA">
                <ownedParameter xmi:id="_UkwncS15Ee-8Nr2H9gftQA" name="gerarchia" type="_UjKsAC15Ee-8Nr2H9gftQA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_UlC7UC15Ee-8Nr2H9gftQA" name="creaNodiFiglio" isStatic="true" method="_UljRry15Ee-8Nr2H9gftQA">
                <ownedParameter xmi:id="_UlC7US15Ee-8Nr2H9gftQA" name="nodoParent" type="_UjO9cC15Ee-8Nr2H9gftQA"/>
                <ownedParameter xmi:id="_UlC7Ui15Ee-8Nr2H9gftQA" name="gerarchia" type="_UjKsAC15Ee-8Nr2H9gftQA"/>
                <ownedParameter xmi:id="_UlC7Uy15Ee-8Nr2H9gftQA" name="radice" type="_UjO9cC15Ee-8Nr2H9gftQA"/>
                <ownedParameter xmi:id="_UlC7VC15Ee-8Nr2H9gftQA" name="foglieAttuali" type="_Uks9EC15Ee-8Nr2H9gftQA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_UlDiYS15Ee-8Nr2H9gftQA" name="creaFattoriConversione" isStatic="true" method="_UljRuC15Ee-8Nr2H9gftQA">
                <ownedParameter xmi:id="_UlDiYi15Ee-8Nr2H9gftQA" name="gerarchia" type="_UjKsAC15Ee-8Nr2H9gftQA"/>
                <ownedParameter xmi:id="_UlDiYy15Ee-8Nr2H9gftQA" name="foglieAttuali" type="_Uks9EC15Ee-8Nr2H9gftQA"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_Ui93sC15Ee-8Nr2H9gftQA" name="Comprensorio">
              <ownedComment xmi:id="_UlqmZS15Ee-8Nr2H9gftQA">
                <body>La classe Comprensorio rappresenta un insieme di comuni.
Gli oggetti di questa classe contengono una lista di comuni
all'interno di un determinato territorio.

Autore: Daniele Martinelli e Federico Sabbadini</body>
              </ownedComment>
              <ownedAttribute xmi:id="_UlUBEC15Ee-8Nr2H9gftQA" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_UlUBES15Ee-8Nr2H9gftQA" value="1L"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_UlUBEi15Ee-8Nr2H9gftQA" name="nome">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_UlUBEy15Ee-8Nr2H9gftQA" name="comprensorio" type="_Uks9EC15Ee-8Nr2H9gftQA" isReadOnly="true" association="_UlwtBC15Ee-8Nr2H9gftQA"/>
              <interfaceRealization xmi:id="_UlEJcC15Ee-8Nr2H9gftQA" client="_Ui93sC15Ee-8Nr2H9gftQA" supplier="_UksWAC15Ee-8Nr2H9gftQA" contract="_UksWAC15Ee-8Nr2H9gftQA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ulj4si15Ee-8Nr2H9gftQA" name="Comprensorio" specification="_Ui-ewC15Ee-8Nr2H9gftQA">
                <ownedParameter xmi:id="_Ulj4sy15Ee-8Nr2H9gftQA" name="nome">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Ulj4tC15Ee-8Nr2H9gftQA" type="_Ui93sC15Ee-8Nr2H9gftQA" direction="return"/>
                <language>java</language>
                <body>this.comprensorio = new ArrayList&lt;>();
     this.nome = nome;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ulj4tS15Ee-8Nr2H9gftQA" name="addComune" specification="_Ui-exS15Ee-8Nr2H9gftQA">
                <ownedParameter xmi:id="_Ulj4ti15Ee-8Nr2H9gftQA" name="luogo">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>this.comprensorio.add(luogo);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ulj4ty15Ee-8Nr2H9gftQA" name="toString" specification="_Ui-exy15Ee-8Nr2H9gftQA">
                <ownedParameter xmi:id="_Ulj4uC15Ee-8Nr2H9gftQA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>StringBuffer bf = new StringBuffer();
     bf.append(this.nome + &quot;\n&quot;);
     for (String comune : comprensorio) {
         bf.append(&quot; - &quot; + comune);
         bf.append(&quot;\n&quot;);
     }
     
     return bf.toString();
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_Ui-ewC15Ee-8Nr2H9gftQA" name="Comprensorio" method="_Ulj4si15Ee-8Nr2H9gftQA">
                <eAnnotations xmi:id="_Ui-ewi15Ee-8Nr2H9gftQA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_Ui-ewy15Ee-8Nr2H9gftQA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_Ui-ewS15Ee-8Nr2H9gftQA" name="nome">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Ui-exC15Ee-8Nr2H9gftQA" type="_Ui93sC15Ee-8Nr2H9gftQA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Ui-exS15Ee-8Nr2H9gftQA" name="addComune" method="_Ulj4tS15Ee-8Nr2H9gftQA">
                <ownedParameter xmi:id="_Ui-exi15Ee-8Nr2H9gftQA" name="luogo">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Ui-exy15Ee-8Nr2H9gftQA" name="toString" method="_Ulj4ty15Ee-8Nr2H9gftQA">
                <ownedParameter xmi:id="_Ui_F0C15Ee-8Nr2H9gftQA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_Ui_F0S15Ee-8Nr2H9gftQA" name="Configuratore">
              <ownedComment xmi:id="_UlqmZi15Ee-8Nr2H9gftQA">
                <body>La classe Configuratore rappresenta un utente con privilegi di configurazione.
Estende la classe astratta Utente.

@author Daniele Martinelli
@author Federico Sabbadini</body>
              </ownedComment>
              <generalization xmi:id="_Ukx1ky15Ee-8Nr2H9gftQA" general="_UjXgUC15Ee-8Nr2H9gftQA"/>
              <ownedAttribute xmi:id="_UlUoIS15Ee-8Nr2H9gftQA" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_UlUoIi15Ee-8Nr2H9gftQA" value="1L"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_UlUoIy15Ee-8Nr2H9gftQA" name="TIPOUTENTE" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_UlVPMC15Ee-8Nr2H9gftQA" value="'c'"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_UlEwgC15Ee-8Nr2H9gftQA" client="_Ui_F0S15Ee-8Nr2H9gftQA" supplier="_UksWAC15Ee-8Nr2H9gftQA" contract="_UksWAC15Ee-8Nr2H9gftQA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ulj4uS15Ee-8Nr2H9gftQA" name="Configuratore" specification="_UkxOgC15Ee-8Nr2H9gftQA">
                <ownedParameter xmi:id="_Ulj4ui15Ee-8Nr2H9gftQA" name="credenziali" type="_UjAT8i15Ee-8Nr2H9gftQA"/>
                <ownedParameter xmi:id="_Ulj4uy15Ee-8Nr2H9gftQA" type="_Ui_F0S15Ee-8Nr2H9gftQA" direction="return"/>
                <language>java</language>
                <body>super(TIPOUTENTE, credenziali);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ulj4vC15Ee-8Nr2H9gftQA" name="Configuratore" specification="_Ui_s4C15Ee-8Nr2H9gftQA">
                <ownedParameter xmi:id="_Ulj4vS15Ee-8Nr2H9gftQA" type="_Ui_F0S15Ee-8Nr2H9gftQA" direction="return"/>
                <language>java</language>
                <body>super(TIPOUTENTE, Credenziali.credenzialiPredefinite());
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_Ui_s4C15Ee-8Nr2H9gftQA" name="Configuratore" method="_Ulj4vC15Ee-8Nr2H9gftQA">
                <eAnnotations xmi:id="_Ui_s4S15Ee-8Nr2H9gftQA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_UjAT8C15Ee-8Nr2H9gftQA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_UjAT8S15Ee-8Nr2H9gftQA" type="_Ui_F0S15Ee-8Nr2H9gftQA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_UkxOgC15Ee-8Nr2H9gftQA" name="Configuratore" method="_Ulj4uS15Ee-8Nr2H9gftQA">
                <eAnnotations xmi:id="_Ukx1kC15Ee-8Nr2H9gftQA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_Ukx1kS15Ee-8Nr2H9gftQA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_UkxOgS15Ee-8Nr2H9gftQA" name="credenziali" type="_UjAT8i15Ee-8Nr2H9gftQA"/>
                <ownedParameter xmi:id="_Ukx1ki15Ee-8Nr2H9gftQA" type="_Ui_F0S15Ee-8Nr2H9gftQA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_UjAT8i15Ee-8Nr2H9gftQA" name="Credenziali">
              <ownedComment xmi:id="_UlqmZy15Ee-8Nr2H9gftQA">
                <body>La classe Credenziali rappresenta le credenziali di accesso di un utente.
Ogni credenziale è composta da un ID (identificativo dell'utente) e una password.
Inoltre, tiene traccia se le credenziali sono definitive o meno.
Se un utente si è appena registrato avrà delle credenziali 
non definitive fino alla loro modifica.

@author Daniele Martinelli
@author Federico Sabbadini</body>
              </ownedComment>
              <ownedAttribute xmi:id="_UlVPMS15Ee-8Nr2H9gftQA" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_UlVPMi15Ee-8Nr2H9gftQA" value="1L"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_UlVPMy15Ee-8Nr2H9gftQA" name="IDLENTGH" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_UlVPNC15Ee-8Nr2H9gftQA" value="6"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_UlVPNS15Ee-8Nr2H9gftQA" name="PSSWLENTGH" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_UlVPNi15Ee-8Nr2H9gftQA" value="8"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_UlVPNy15Ee-8Nr2H9gftQA" name="IDCHAR" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_UlVPOC15Ee-8Nr2H9gftQA" value="&quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_UlVPOS15Ee-8Nr2H9gftQA" name="PSSWCHAR" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_UlV2QC15Ee-8Nr2H9gftQA" value="&quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!?@^&amp;%$£&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_UlV2QS15Ee-8Nr2H9gftQA" name="ID">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_UlV2Qi15Ee-8Nr2H9gftQA" name="password">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_UlV2Qy15Ee-8Nr2H9gftQA" name="definitive">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_UlEwgS15Ee-8Nr2H9gftQA" client="_UjAT8i15Ee-8Nr2H9gftQA" supplier="_UksWAC15Ee-8Nr2H9gftQA" contract="_UksWAC15Ee-8Nr2H9gftQA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ulj4vi15Ee-8Nr2H9gftQA" name="Credenziali" specification="_UjBiEC15Ee-8Nr2H9gftQA">
                <ownedParameter xmi:id="_Ulj4vy15Ee-8Nr2H9gftQA" name="ID">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Ulj4wC15Ee-8Nr2H9gftQA" name="password">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Ulj4wS15Ee-8Nr2H9gftQA" type="_UjAT8i15Ee-8Nr2H9gftQA" direction="return"/>
                <language>java</language>
                <body>this.ID = ID;
     this.password = password;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_UlkfwC15Ee-8Nr2H9gftQA" name="credenzialiPredefinite" specification="_UjCJIC15Ee-8Nr2H9gftQA">
                <ownedParameter xmi:id="_UlkfwS15Ee-8Nr2H9gftQA" type="_UjAT8i15Ee-8Nr2H9gftQA" direction="return"/>
                <language>java</language>
                <body>// Genera un ID e una password casuali
     String userID = Estrattore.estraiString(IDCHAR, IDLENTGH);
     String userPSSW = Estrattore.estraiString(PSSWCHAR, PSSWLENTGH);
     return new Credenziali(userID.toString(), userPSSW.toString());
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_UjBiEC15Ee-8Nr2H9gftQA" name="Credenziali" method="_Ulj4vi15Ee-8Nr2H9gftQA">
                <eAnnotations xmi:id="_UjBiEy15Ee-8Nr2H9gftQA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_UjBiFC15Ee-8Nr2H9gftQA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_UjBiES15Ee-8Nr2H9gftQA" name="ID">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UjBiEi15Ee-8Nr2H9gftQA" name="password">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UjBiFS15Ee-8Nr2H9gftQA" type="_UjAT8i15Ee-8Nr2H9gftQA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_UjCJIC15Ee-8Nr2H9gftQA" name="credenzialiPredefinite" isStatic="true" method="_UlkfwC15Ee-8Nr2H9gftQA">
                <ownedParameter xmi:id="_UkycoC15Ee-8Nr2H9gftQA" type="_UjAT8i15Ee-8Nr2H9gftQA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_UjCwMC15Ee-8Nr2H9gftQA" name="DefaultInitializer">
              <ownedComment xmi:id="_UlrNcC15Ee-8Nr2H9gftQA">
                <body>Classe per l'inizializzazione predefinita del sistema.

@author Daniele Martinelli
@author Federico Sabbadini</body>
              </ownedComment>
              <ownedAttribute xmi:id="_UlV2RC15Ee-8Nr2H9gftQA" name="FACTOR_VAL" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_UlV2RS15Ee-8Nr2H9gftQA" value="2"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_UlV2Ri15Ee-8Nr2H9gftQA" name="ROOT_NAME" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_UlV2Ry15Ee-8Nr2H9gftQA" value="&quot;system&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_UlWdUC15Ee-8Nr2H9gftQA" name="ROOT_FIELD" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_UlWdUS15Ee-8Nr2H9gftQA" value="&quot;field&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_UlWdUi15Ee-8Nr2H9gftQA" name="ROOT_DOMAIN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_UlWdUy15Ee-8Nr2H9gftQA" value="*"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_UlWdVS15Ee-8Nr2H9gftQA" value="{&quot;rootchildM&quot;, &quot;rootchildF&quot;}"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_UlWdVi15Ee-8Nr2H9gftQA" name="CHILD2_NAME" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_UlWdVy15Ee-8Nr2H9gftQA" value="&quot;rootchild2&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_UlWdWC15Ee-8Nr2H9gftQA" name="CHILD1_NAME" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_UlWdWS15Ee-8Nr2H9gftQA" value="&quot;rootchild1&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_UlWdWi15Ee-8Nr2H9gftQA" name="DEFAULT_NAME_COMMUNITY_0" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_UlXEYC15Ee-8Nr2H9gftQA" value="&quot;C0&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_UlXEYS15Ee-8Nr2H9gftQA" name="DEFAULT_COMMUNITY_1" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_UlXEYi15Ee-8Nr2H9gftQA" value="&quot;Comune1&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_UlXEYy15Ee-8Nr2H9gftQA" name="DEFAULT_COMMUNITY_2" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_UlXEZC15Ee-8Nr2H9gftQA" value="&quot;Comune2&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_UlXEZS15Ee-8Nr2H9gftQA" name="DEFAULT_COMMUNITY_3" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_UlXEZi15Ee-8Nr2H9gftQA" value="&quot;Comune3&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_UlXEZy15Ee-8Nr2H9gftQA" name="DEFAULT_USERNAME" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_UlXEaC15Ee-8Nr2H9gftQA" value="&quot;admin&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_UlXEaS15Ee-8Nr2H9gftQA" name="DEFAULT_PASSWORD" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_UlXEai15Ee-8Nr2H9gftQA" value="&quot;admin&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_UlXEay15Ee-8Nr2H9gftQA" name="gerarchia" type="_UjKsAC15Ee-8Nr2H9gftQA" isReadOnly="true" association="_UlxUEC15Ee-8Nr2H9gftQA"/>
              <ownedAttribute xmi:id="_UlXrcC15Ee-8Nr2H9gftQA" name="utenza" type="_UjZVgC15Ee-8Nr2H9gftQA" isReadOnly="true" association="_UlxUEy15Ee-8Nr2H9gftQA"/>
              <ownedAttribute xmi:id="_UlXrcS15Ee-8Nr2H9gftQA" name="geografia" type="_UjI20C15Ee-8Nr2H9gftQA" isReadOnly="true" association="_UlxUFi15Ee-8Nr2H9gftQA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ulkfwi15Ee-8Nr2H9gftQA" name="DefaultInitializer" specification="_UjD-UC15Ee-8Nr2H9gftQA">
                <ownedParameter xmi:id="_Ulkfwy15Ee-8Nr2H9gftQA" type="_UjCwMC15Ee-8Nr2H9gftQA" direction="return"/>
                <language>java</language>
                <body>this.utenza = defaultAccess();
     this.gerarchia = defaultTree();
     this.geografia = defaultWorld();
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_UlkfxC15Ee-8Nr2H9gftQA" name="defaultTree" specification="_UjD-VC15Ee-8Nr2H9gftQA">
                <ownedParameter xmi:id="_UlkfxS15Ee-8Nr2H9gftQA" type="_UjKsAC15Ee-8Nr2H9gftQA" direction="return"/>
                <language>java</language>
                <body>Gerarchia gerarchia = new Gerarchia();

     // Creazione del nodo radice
     Nodo nodo1 = new Nodo(ROOT_NAME, null, ROOT_FIELD);
     for (String domainValue : ROOT_DOMAIN) {
         nodo1.addElementiDominio(domainValue);
     }

     // Creazione dei nodi figli
     Nodo nodo11 = new Nodo(CHILD1_NAME, nodo1.getNome());
     Nodo nodo12 = new Nodo(CHILD2_NAME, nodo1.getNome());
     try {
         nodo1.addChild(nodo11);
         nodo1.addChild(nodo12);


         // Aggiunta dei nodi all'albero e definizione dei fattori di conversione
         nodo11.addFattoreConversione(nodo12, FACTOR_VAL);
         nodo12.addFattoreConversione(nodo11, 1/FACTOR_VAL);
         Albero albero = new Albero(nodo1);
         
         albero.setUtente(utenza.autenticazioneConfiguratore(DEFAULT_USERNAME, DEFAULT_PASSWORD));
         gerarchia.addAlbero(albero);
     


     } catch (Exception e) {
         System.out.println(e.getMessage());
     }
     
     return gerarchia;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ulkfxi15Ee-8Nr2H9gftQA" name="defaultAccess" specification="_UjD-VS15Ee-8Nr2H9gftQA">
                <ownedParameter xmi:id="_Ulkfxy15Ee-8Nr2H9gftQA" type="_UjZVgC15Ee-8Nr2H9gftQA" direction="return"/>
                <language>java</language>
                <body>Utenza utenza = new Utenza();

     // Creazione delle credenziali di default per l'utente admin
     Credenziali cred = new Credenziali(DEFAULT_USERNAME, DEFAULT_PASSWORD);
     cred.setDefinitive(true);
     Configuratore utente = new Configuratore(cred);
     utenza.addUtente(utente);
     
     return utenza;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_UlkfyC15Ee-8Nr2H9gftQA" name="defaultComprensorio" specification="_UjD-Vi15Ee-8Nr2H9gftQA">
                <ownedParameter xmi:id="_UlkfyS15Ee-8Nr2H9gftQA" type="_Ui93sC15Ee-8Nr2H9gftQA" direction="return"/>
                <language>java</language>
                <body>Comprensorio comprensorio = new Comprensorio(DEFAULT_NAME_COMMUNITY_0);
     comprensorio.addComune(DEFAULT_COMMUNITY_1);
     comprensorio.addComune(DEFAULT_COMMUNITY_2);
     comprensorio.addComune(DEFAULT_COMMUNITY_3);
     return comprensorio;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ulkfyi15Ee-8Nr2H9gftQA" name="defaultWorld" specification="_UjD-Vy15Ee-8Nr2H9gftQA">
                <ownedParameter xmi:id="_Ulkfyy15Ee-8Nr2H9gftQA" type="_UjI20C15Ee-8Nr2H9gftQA" direction="return"/>
                <language>java</language>
                <body>Geografia geografia = new Geografia();
     geografia.addComprensorio(defaultComprensorio());
     return geografia;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_UjD-UC15Ee-8Nr2H9gftQA" name="DefaultInitializer" method="_Ulkfwi15Ee-8Nr2H9gftQA">
                <eAnnotations xmi:id="_UjD-US15Ee-8Nr2H9gftQA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_UjD-Ui15Ee-8Nr2H9gftQA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_UjD-Uy15Ee-8Nr2H9gftQA" type="_UjCwMC15Ee-8Nr2H9gftQA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_UjD-VC15Ee-8Nr2H9gftQA" name="defaultTree" method="_UlkfxC15Ee-8Nr2H9gftQA">
                <ownedParameter xmi:id="_UkzDsC15Ee-8Nr2H9gftQA" type="_UjKsAC15Ee-8Nr2H9gftQA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_UjD-VS15Ee-8Nr2H9gftQA" name="defaultAccess" method="_Ulkfxi15Ee-8Nr2H9gftQA">
                <ownedParameter xmi:id="_UkzDsS15Ee-8Nr2H9gftQA" type="_UjZVgC15Ee-8Nr2H9gftQA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_UjD-Vi15Ee-8Nr2H9gftQA" name="defaultComprensorio" visibility="private" method="_UlkfyC15Ee-8Nr2H9gftQA">
                <ownedParameter xmi:id="_UkzDsi15Ee-8Nr2H9gftQA" type="_Ui93sC15Ee-8Nr2H9gftQA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_UjD-Vy15Ee-8Nr2H9gftQA" name="defaultWorld" method="_Ulkfyi15Ee-8Nr2H9gftQA">
                <ownedParameter xmi:id="_UkzDsy15Ee-8Nr2H9gftQA" type="_UjI20C15Ee-8Nr2H9gftQA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_UjFzgC15Ee-8Nr2H9gftQA" name="FileManager">
              <ownedComment xmi:id="_UlrNcS15Ee-8Nr2H9gftQA">
                <body>DataManager è una classe utilizzata per gestire il caricamento e il salvataggio dei dati da e verso file di testo.
Supporta il caricamento e il salvataggio di oggetti delle classi Gerarchia, Geografia e Utenza.

@author Daniele Martinelli
@author Federico Sabbadini</body>
              </ownedComment>
              <ownedAttribute xmi:id="_UlXrci15Ee-8Nr2H9gftQA" name="SAVE_G_ERR" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_UlXrcy15Ee-8Nr2H9gftQA" value="&quot;Errore durante il salvataggio della gerarchia su file: &quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_UlXrdC15Ee-8Nr2H9gftQA" name="SAVE_U_ERR" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_UlXrdS15Ee-8Nr2H9gftQA" value="&quot;Errore durante il salvataggio dell' utenza su file: &quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_UlXrdi15Ee-8Nr2H9gftQA" name="SAVE_GE_ERR" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_UlXrdy15Ee-8Nr2H9gftQA" value="&quot;Errore durante il salvataggio della geografia su file: &quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_UlXreC15Ee-8Nr2H9gftQA" name="UPLOAD_U_ERR" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_UlYSgC15Ee-8Nr2H9gftQA" value="&quot;Errore durante il caricamento dell' utenza: &quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_UlYSgS15Ee-8Nr2H9gftQA" name="UPLOAD_G_ERR" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_UlYSgi15Ee-8Nr2H9gftQA" value="&quot;Errore durante il caricamento della gerarchia: &quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_UlYSgy15Ee-8Nr2H9gftQA" name="UPLOAD_GE_ERR" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_UlYShC15Ee-8Nr2H9gftQA" value="&quot;Errore durante il caricamento della geografia: &quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_UlYShS15Ee-8Nr2H9gftQA" name="UTENZA_FILE" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_UlYShi15Ee-8Nr2H9gftQA" value="&quot;utenza.txt&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_UlYShy15Ee-8Nr2H9gftQA" name="GERARCHIA_FILE" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_UlYSiC15Ee-8Nr2H9gftQA" value="&quot;gerarchia.txt&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_UlYSiS15Ee-8Nr2H9gftQA" name="GEOGRAFIA_FILE" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_UlYSii15Ee-8Nr2H9gftQA" value="&quot;geografia.txt&quot;"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_UllG0C15Ee-8Nr2H9gftQA" name="getGerarchiaFile" specification="_UjGakC15Ee-8Nr2H9gftQA">
                <ownedParameter xmi:id="_UllG0S15Ee-8Nr2H9gftQA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return GERARCHIA_FILE;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_UllG0i15Ee-8Nr2H9gftQA" name="getUtenzaFile" specification="_UjHBoC15Ee-8Nr2H9gftQA">
                <ownedParameter xmi:id="_UllG0y15Ee-8Nr2H9gftQA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return UTENZA_FILE;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_UllG1C15Ee-8Nr2H9gftQA" name="getGeografiaFile" specification="_UjHBoi15Ee-8Nr2H9gftQA">
                <ownedParameter xmi:id="_UllG1S15Ee-8Nr2H9gftQA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return GEOGRAFIA_FILE;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_UllG1i15Ee-8Nr2H9gftQA" name="caricaGerarchia" specification="_UjHBpC15Ee-8Nr2H9gftQA">
                <ownedParameter xmi:id="_UllG1y15Ee-8Nr2H9gftQA" type="_UjKsAC15Ee-8Nr2H9gftQA" direction="return"/>
                <language>java</language>
                <body>try (ObjectInputStream inputStream = new ObjectInputStream(new FileInputStream(getGerarchiaFile()))) {
         return (Gerarchia) inputStream.readObject();
     } catch (IOException | ClassNotFoundException e) {
         System.err.println(UPLOAD_G_ERR + e.getMessage());
         return null;
     }
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_UllG2C15Ee-8Nr2H9gftQA" name="salvaSuFile" specification="_UkzqwS15Ee-8Nr2H9gftQA">
                <ownedParameter xmi:id="_UllG2S15Ee-8Nr2H9gftQA" name="gerarchia" type="_UjKsAC15Ee-8Nr2H9gftQA"/>
                <language>java</language>
                <body>try (ObjectOutputStream outputStream = new ObjectOutputStream(new FileOutputStream(getGerarchiaFile()))) {
         outputStream.writeObject(gerarchia);
     } catch (IOException e) {
         System.err.println(SAVE_G_ERR + e.getMessage());
     }
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_UllG2i15Ee-8Nr2H9gftQA" name="caricaUtenza" specification="_UjHosC15Ee-8Nr2H9gftQA">
                <ownedParameter xmi:id="_UllG2y15Ee-8Nr2H9gftQA" type="_UjZVgC15Ee-8Nr2H9gftQA" direction="return"/>
                <language>java</language>
                <body>try (ObjectInputStream inputStream = new ObjectInputStream(new FileInputStream(getUtenzaFile()))) {
         return (Utenza) inputStream.readObject();
     } catch (IOException | ClassNotFoundException e) {
         System.err.println(UPLOAD_U_ERR + e.getMessage());
         return null;
     }
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_UllG3C15Ee-8Nr2H9gftQA" name="salvaSuFile" specification="_Uk0R0S15Ee-8Nr2H9gftQA">
                <ownedParameter xmi:id="_UllG3S15Ee-8Nr2H9gftQA" name="utenza" type="_UjZVgC15Ee-8Nr2H9gftQA"/>
                <language>java</language>
                <body>try (ObjectOutputStream outputStream = new ObjectOutputStream(new FileOutputStream(getUtenzaFile()))) {
         outputStream.writeObject(utenza);
     } catch (IOException e) {
         System.err.println(SAVE_U_ERR + e.getMessage());
     }
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_UllG3i15Ee-8Nr2H9gftQA" name="caricaGeografia" specification="_UjHosS15Ee-8Nr2H9gftQA">
                <ownedParameter xmi:id="_UllG3y15Ee-8Nr2H9gftQA" type="_UjI20C15Ee-8Nr2H9gftQA" direction="return"/>
                <language>java</language>
                <body>try (ObjectInputStream inputStream = new ObjectInputStream(new FileInputStream(getGeografiaFile()))) {
         return (Geografia) inputStream.readObject();
     } catch (IOException | ClassNotFoundException e) {
         System.err.println(UPLOAD_GE_ERR + e.getMessage());
         return null;
     }
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_UllG4C15Ee-8Nr2H9gftQA" name="salvaSuFile" specification="_Uk0R1C15Ee-8Nr2H9gftQA">
                <ownedParameter xmi:id="_UllG4S15Ee-8Nr2H9gftQA" name="geografia" type="_UjI20C15Ee-8Nr2H9gftQA"/>
                <language>java</language>
                <body>try (ObjectOutputStream outputStream = new ObjectOutputStream(new FileOutputStream(getGeografiaFile()))) {
         outputStream.writeObject(geografia);
     } catch (IOException e) {
         System.err.println(SAVE_GE_ERR + e.getMessage());
     }
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_UjGakC15Ee-8Nr2H9gftQA" name="getGerarchiaFile" isStatic="true" method="_UllG0C15Ee-8Nr2H9gftQA">
                <ownedComment xmi:id="_UlrNci15Ee-8Nr2H9gftQA">
                  <body>Restituisce il percorso del file utilizzato per la memorizzazione della gerarchia.
     * 
     * @return Il percorso del file della gerarchia</body>
                </ownedComment>
                <ownedParameter xmi:id="_UjGakS15Ee-8Nr2H9gftQA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UjHBoC15Ee-8Nr2H9gftQA" name="getUtenzaFile" isStatic="true" method="_UllG0i15Ee-8Nr2H9gftQA">
                <ownedComment xmi:id="_UlrNcy15Ee-8Nr2H9gftQA">
                  <body>Restituisce il percorso del file utilizzato per la memorizzazione dell' utenza.
     * 
     * @return Il percorso del file delL' utenza</body>
                </ownedComment>
                <ownedParameter xmi:id="_UjHBoS15Ee-8Nr2H9gftQA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UjHBoi15Ee-8Nr2H9gftQA" name="getGeografiaFile" isStatic="true" method="_UllG1C15Ee-8Nr2H9gftQA">
                <ownedComment xmi:id="_UlrNdC15Ee-8Nr2H9gftQA">
                  <body>Restituisce il percorso del file utilizzato per la memorizzazione della geografia.
     * 
     * @return Il percorso del file della geografia</body>
                </ownedComment>
                <ownedParameter xmi:id="_UjHBoy15Ee-8Nr2H9gftQA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UjHBpC15Ee-8Nr2H9gftQA" name="caricaGerarchia" isStatic="true" method="_UllG1i15Ee-8Nr2H9gftQA">
                <ownedComment xmi:id="_UlrNdS15Ee-8Nr2H9gftQA">
                  <body>Carica la gerarchia da un file di testo.
     * 
     * @return La gerarchia caricata, null in caso di errore durante il caricamento.</body>
                </ownedComment>
                <ownedParameter xmi:id="_UkzqwC15Ee-8Nr2H9gftQA" type="_UjKsAC15Ee-8Nr2H9gftQA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_UjHosC15Ee-8Nr2H9gftQA" name="caricaUtenza" isStatic="true" method="_UllG2i15Ee-8Nr2H9gftQA">
                <ownedComment xmi:id="_UlrNdy15Ee-8Nr2H9gftQA">
                  <body>Carica l' utenza da un file di testo.
     * 
     * @return L' utenza caricata, null in caso di errore durante il caricamento.</body>
                </ownedComment>
                <ownedParameter xmi:id="_Uk0R0C15Ee-8Nr2H9gftQA" type="_UjZVgC15Ee-8Nr2H9gftQA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_UjHosS15Ee-8Nr2H9gftQA" name="caricaGeografia" isStatic="true" method="_UllG3i15Ee-8Nr2H9gftQA">
                <ownedComment xmi:id="_UlrNeS15Ee-8Nr2H9gftQA">
                  <body>Carica la geografia da un file di testo.
     * 
     * @return La geografia caricata, null in caso di errore durante il caricamento.</body>
                </ownedComment>
                <ownedParameter xmi:id="_Uk0R0y15Ee-8Nr2H9gftQA" type="_UjI20C15Ee-8Nr2H9gftQA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_UkzqwS15Ee-8Nr2H9gftQA" name="salvaSuFile" isStatic="true" method="_UllG2C15Ee-8Nr2H9gftQA">
                <ownedComment xmi:id="_UlrNdi15Ee-8Nr2H9gftQA">
                  <body>Salva la gerarchia su un file di testo.
     * 
     * @param gerarchia La gerarchia da salvare.</body>
                </ownedComment>
                <ownedParameter xmi:id="_Ukzqwi15Ee-8Nr2H9gftQA" name="gerarchia" type="_UjKsAC15Ee-8Nr2H9gftQA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Uk0R0S15Ee-8Nr2H9gftQA" name="salvaSuFile" isStatic="true" method="_UllG3C15Ee-8Nr2H9gftQA">
                <ownedComment xmi:id="_UlrNeC15Ee-8Nr2H9gftQA">
                  <body>Salva l' utenza su un file di testo.
     * 
     * @param gestioneUtenza L' utenza da salvare.</body>
                </ownedComment>
                <ownedParameter xmi:id="_Uk0R0i15Ee-8Nr2H9gftQA" name="utenza" type="_UjZVgC15Ee-8Nr2H9gftQA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Uk0R1C15Ee-8Nr2H9gftQA" name="salvaSuFile" isStatic="true" method="_UllG4C15Ee-8Nr2H9gftQA">
                <ownedComment xmi:id="_UlrNei15Ee-8Nr2H9gftQA">
                  <body>Salva la geografia su un file di testo.
     * 
     * @param geografia La geografia da salvare.</body>
                </ownedComment>
                <ownedParameter xmi:id="_Uk0R1S15Ee-8Nr2H9gftQA" name="geografia" type="_UjI20C15Ee-8Nr2H9gftQA"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_UjI20C15Ee-8Nr2H9gftQA" name="Geografia">
              <ownedComment xmi:id="_UlrNey15Ee-8Nr2H9gftQA">
                <body>La classe Geografia rappresenta l'insieme di 
tutti i comprensori del sistema

@author Daniele Martinelli
@author Federico Sabbadini</body>
              </ownedComment>
              <ownedAttribute xmi:id="_UlY5kC15Ee-8Nr2H9gftQA" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_UlY5kS15Ee-8Nr2H9gftQA" value="1L"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_UlY5ki15Ee-8Nr2H9gftQA" name="geografia" type="_Uks9EC15Ee-8Nr2H9gftQA" isReadOnly="true" association="_Ulx7IS15Ee-8Nr2H9gftQA"/>
              <ownedAttribute xmi:id="_mTiWUC15Ee-8Nr2H9gftQA" name="utente_1_1" visibility="public" type="_Ui93sC15Ee-8Nr2H9gftQA" association="_mTi9YC15Ee-8Nr2H9gftQA"/>
              <interfaceRealization xmi:id="_UlF-oC15Ee-8Nr2H9gftQA" client="_UjI20C15Ee-8Nr2H9gftQA" supplier="_UksWAC15Ee-8Nr2H9gftQA" contract="_UksWAC15Ee-8Nr2H9gftQA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ullt4C15Ee-8Nr2H9gftQA" name="Geografia" specification="_UjI20S15Ee-8Nr2H9gftQA">
                <ownedParameter xmi:id="_Ullt4S15Ee-8Nr2H9gftQA" type="_UjI20C15Ee-8Nr2H9gftQA" direction="return"/>
                <language>java</language>
                <body>this.geografia = new ArrayList&lt;>();
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ullt4i15Ee-8Nr2H9gftQA" name="addComprensorio" specification="_Uk044C15Ee-8Nr2H9gftQA">
                <ownedParameter xmi:id="_Ullt4y15Ee-8Nr2H9gftQA" name="comprensorio" type="_Ui93sC15Ee-8Nr2H9gftQA"/>
                <language>java</language>
                <body>this.geografia.add(comprensorio);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ullt5C15Ee-8Nr2H9gftQA" name="cercaComprensorio" specification="_UjJd4S15Ee-8Nr2H9gftQA">
                <ownedParameter xmi:id="_Ullt5S15Ee-8Nr2H9gftQA" name="nome">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Ullt5i15Ee-8Nr2H9gftQA" type="_Ui93sC15Ee-8Nr2H9gftQA" direction="return"/>
                <language>java</language>
                <body>for (Comprensorio comprensorio : geografia) {
			if (comprensorio.getNome().equals(nome))
				return comprensorio;
		}
		return null;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ullt5y15Ee-8Nr2H9gftQA" name="verificaEsistenzaComprensorio" specification="_UjJd4y15Ee-8Nr2H9gftQA">
                <ownedParameter xmi:id="_Ullt6C15Ee-8Nr2H9gftQA" name="nome">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Ullt6S15Ee-8Nr2H9gftQA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>if (cercaComprensorio(nome) == null)
			return false;
		return true;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ullt6i15Ee-8Nr2H9gftQA" name="toString" specification="_UjJd5i15Ee-8Nr2H9gftQA">
                <ownedParameter xmi:id="_Ullt6y15Ee-8Nr2H9gftQA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>StringBuffer bf = new StringBuffer();
		int num = 0;
		for (Comprensorio comprensorio : geografia) {
			bf.append(&quot;C&quot; + num + &quot;\n&quot;);
			bf.append(comprensorio.toString());
			bf.append(&quot;\n&quot;);
			num++;
		}
		
		return bf.toString();
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_UjI20S15Ee-8Nr2H9gftQA" name="Geografia" method="_Ullt4C15Ee-8Nr2H9gftQA">
                <eAnnotations xmi:id="_UjI20i15Ee-8Nr2H9gftQA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_UjI20y15Ee-8Nr2H9gftQA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_UjJd4C15Ee-8Nr2H9gftQA" type="_UjI20C15Ee-8Nr2H9gftQA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_UjJd4S15Ee-8Nr2H9gftQA" name="cercaComprensorio" method="_Ullt5C15Ee-8Nr2H9gftQA">
                <ownedParameter xmi:id="_UjJd4i15Ee-8Nr2H9gftQA" name="nome">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Uk044i15Ee-8Nr2H9gftQA" type="_Ui93sC15Ee-8Nr2H9gftQA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_UjJd4y15Ee-8Nr2H9gftQA" name="verificaEsistenzaComprensorio" method="_Ullt5y15Ee-8Nr2H9gftQA">
                <ownedParameter xmi:id="_UjJd5C15Ee-8Nr2H9gftQA" name="nome">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UjJd5S15Ee-8Nr2H9gftQA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UjJd5i15Ee-8Nr2H9gftQA" name="toString" method="_Ullt6i15Ee-8Nr2H9gftQA">
                <ownedParameter xmi:id="_UjKE8C15Ee-8Nr2H9gftQA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Uk044C15Ee-8Nr2H9gftQA" name="addComprensorio" method="_Ullt4i15Ee-8Nr2H9gftQA">
                <ownedParameter xmi:id="_Uk044S15Ee-8Nr2H9gftQA" name="comprensorio" type="_Ui93sC15Ee-8Nr2H9gftQA"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_UjKsAC15Ee-8Nr2H9gftQA" name="Gerarchia">
              <ownedComment xmi:id="_UlrNfC15Ee-8Nr2H9gftQA">
                <body>La classe Gerarchia rappresenta l'insieme di tutti gli 
alberi nel sistema e gestisce le operazioni su di essi.

@author Daniele Martinelli
@author Federico Sabbadini</body>
              </ownedComment>
              <ownedAttribute xmi:id="_UlZgoC15Ee-8Nr2H9gftQA" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_UlZgoS15Ee-8Nr2H9gftQA" value="1L"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_UlZgoi15Ee-8Nr2H9gftQA" name="alberi" visibility="private" type="_Uks9EC15Ee-8Nr2H9gftQA" association="_UlyiMC15Ee-8Nr2H9gftQA"/>
              <ownedAttribute xmi:id="_UlaHsC15Ee-8Nr2H9gftQA" name="radici" visibility="private" type="_Uks9EC15Ee-8Nr2H9gftQA" association="_UlyiMy15Ee-8Nr2H9gftQA"/>
              <ownedAttribute xmi:id="_UlaHsy15Ee-8Nr2H9gftQA" name="foglie" type="_Uks9EC15Ee-8Nr2H9gftQA" isReadOnly="true" association="_UlzJQS15Ee-8Nr2H9gftQA"/>
              <ownedAttribute xmi:id="_hoQ6AC15Ee-8Nr2H9gftQA" name="utente_1" visibility="public" type="_Ui4_MC15Ee-8Nr2H9gftQA" association="_hoQ6AS15Ee-8Nr2H9gftQA"/>
              <interfaceRealization xmi:id="_UlGlsC15Ee-8Nr2H9gftQA" client="_UjKsAC15Ee-8Nr2H9gftQA" supplier="_UksWAC15Ee-8Nr2H9gftQA" contract="_UksWAC15Ee-8Nr2H9gftQA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ullt7C15Ee-8Nr2H9gftQA" name="Gerarchia" specification="_UjLTEC15Ee-8Nr2H9gftQA">
                <ownedParameter xmi:id="_Ullt7S15Ee-8Nr2H9gftQA" type="_UjKsAC15Ee-8Nr2H9gftQA" direction="return"/>
                <language>java</language>
                <body>this.alberi = new ArrayList&lt;>();
     this.radici = new ArrayList&lt;>();
     this.foglie = new ArrayList&lt;>();
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ullt7i15Ee-8Nr2H9gftQA" name="toString" specification="_UjLTFC15Ee-8Nr2H9gftQA">
                <ownedParameter xmi:id="_Ullt7y15Ee-8Nr2H9gftQA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>StringBuilder builder = new StringBuilder();
     
     for (Nodo nodo : radici)  {
         builder.append(&quot;\n\n&quot;);
         try {
             builder.append(new Albero(nodo).toString());
         } catch (Exception e) {
             e.printStackTrace();
         }

     }
     return builder.toString();     
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ullt8C15Ee-8Nr2H9gftQA" name="addAlbero" specification="_Uk2HAC15Ee-8Nr2H9gftQA">
                <ownedParameter xmi:id="_Ullt8S15Ee-8Nr2H9gftQA" name="albero" type="_Ui4_MC15Ee-8Nr2H9gftQA"/>
                <language>java</language>
                <body>alberi.add(albero);
     radici.add(albero.getRadice());
     foglie.addAll(albero.getFoglie());
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ullt8i15Ee-8Nr2H9gftQA" name="verificaEsistenzaNomeRadice" specification="_UjL6JC15Ee-8Nr2H9gftQA">
                <ownedParameter xmi:id="_UlmU8C15Ee-8Nr2H9gftQA" name="nome">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UlmU8S15Ee-8Nr2H9gftQA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>for (Nodo albero : radici) {
         if (albero.getNome().equals(nome)) {
             return true;
         }
     }
     return false;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_UlmU8i15Ee-8Nr2H9gftQA" name="visualizzaFoglia" specification="_UjMhMi15Ee-8Nr2H9gftQA">
                <ownedParameter xmi:id="_UlmU8y15Ee-8Nr2H9gftQA" name="nomeNodo">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UlmU9C15Ee-8Nr2H9gftQA" name="root">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UlmU9S15Ee-8Nr2H9gftQA" type="_UjO9cC15Ee-8Nr2H9gftQA" direction="return"/>
                <language>java</language>
                <body>return visualizza(nomeNodo, root, this.radici);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_UlmU9i15Ee-8Nr2H9gftQA" name="visualizza" specification="_UlGlsS15Ee-8Nr2H9gftQA">
                <ownedParameter xmi:id="_UlmU9y15Ee-8Nr2H9gftQA" name="nomeNodo">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UlmU-C15Ee-8Nr2H9gftQA" name="root">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UlmU-S15Ee-8Nr2H9gftQA" name="list" type="_Uk1f8C15Ee-8Nr2H9gftQA"/>
                <ownedParameter xmi:id="_UlmU-i15Ee-8Nr2H9gftQA" type="_UjO9cC15Ee-8Nr2H9gftQA" direction="return"/>
                <language>java</language>
                <body>for (Nodo nodo : list) {
         if (nodo.getNome().equals(root)) {
             for (Nodo nodoChild : nodo.getChildren()) {
                 if (nodoChild.isLeaf()) {
                     if (nodoChild.getNome().equals(nomeNodo))
                         return nodoChild;
                 } else {
                     Nodo foundNode = visualizza(nomeNodo, nodoChild.getNome(), nodo.getChildren());
                     if (foundNode != null) {
                         return foundNode;
                     }
                 }
             }
         }
     }
     return null;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_UjLTEC15Ee-8Nr2H9gftQA" name="Gerarchia" method="_Ullt7C15Ee-8Nr2H9gftQA">
                <eAnnotations xmi:id="_UjLTES15Ee-8Nr2H9gftQA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_UjLTEi15Ee-8Nr2H9gftQA" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_UlrNfS15Ee-8Nr2H9gftQA">
                  <body>Costruttore della classe Gerarchia.
     * Inizializza la gerarchia con liste vuote per gli alberi, le radici e le foglie.</body>
                </ownedComment>
                <ownedParameter xmi:id="_UjLTEy15Ee-8Nr2H9gftQA" type="_UjKsAC15Ee-8Nr2H9gftQA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_UjLTFC15Ee-8Nr2H9gftQA" name="toString" method="_Ullt7i15Ee-8Nr2H9gftQA">
                <ownedParameter xmi:id="_UjL6IC15Ee-8Nr2H9gftQA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UjL6JC15Ee-8Nr2H9gftQA" name="verificaEsistenzaNomeRadice" method="_Ullt8i15Ee-8Nr2H9gftQA">
                <ownedComment xmi:id="_Ulr0gC15Ee-8Nr2H9gftQA">
                  <body>Verifica se esiste un nodo radice con il dato nome nella gerarchia.
     * 
     * @param nome Il nome del nodo radice da cercare
     * @return true se esiste un nodo radice con il nome specificato, false altrimenti</body>
                </ownedComment>
                <ownedParameter xmi:id="_UjMhMC15Ee-8Nr2H9gftQA" name="nome">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UjMhMS15Ee-8Nr2H9gftQA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UjMhMi15Ee-8Nr2H9gftQA" name="visualizzaFoglia" method="_UlmU8i15Ee-8Nr2H9gftQA">
                <ownedComment xmi:id="_Ulr0gS15Ee-8Nr2H9gftQA">
                  <body>Restituisce il nodo corrispondente al nome specificato nella gerarchia.
     * 
     * @param nomeNodo Il nome del nodo da cercare
     * @param root La radice della gerarchia
     * @return Il nodo corrispondente al nome specificato, null se non trovato</body>
                </ownedComment>
                <ownedParameter xmi:id="_UjMhMy15Ee-8Nr2H9gftQA" name="nomeNodo">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UjMhNC15Ee-8Nr2H9gftQA" name="root">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Uk2HAi15Ee-8Nr2H9gftQA" type="_UjO9cC15Ee-8Nr2H9gftQA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Uk2HAC15Ee-8Nr2H9gftQA" name="addAlbero" method="_Ullt8C15Ee-8Nr2H9gftQA">
                <ownedComment xmi:id="_UlrNfi15Ee-8Nr2H9gftQA">
                  <body>Aggiunge un albero alla gerarchia.
     * 
     * @param albero Il nodo radice dell'albero da aggiungere</body>
                </ownedComment>
                <ownedParameter xmi:id="_Uk2HAS15Ee-8Nr2H9gftQA" name="albero" type="_Ui4_MC15Ee-8Nr2H9gftQA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_UlGlsS15Ee-8Nr2H9gftQA" name="visualizza" visibility="private" isStatic="true" method="_UlmU9i15Ee-8Nr2H9gftQA">
                <ownedComment xmi:id="_Ulr0gi15Ee-8Nr2H9gftQA">
                  <body>Restituisce il nodo corrispondente al nome specificato nella gerarchia.
     * 
     * @param nomeNodo Il nome del nodo da cercare
     * @param root La radice della gerarchia
     * @param list La lista di nodi in cui cercare
     * @return Il nodo corrispondente al nome specificato, null se non trovato</body>
                </ownedComment>
                <ownedParameter xmi:id="_UlHMwC15Ee-8Nr2H9gftQA" name="nomeNodo">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UlHMwS15Ee-8Nr2H9gftQA" name="root">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UlHMwi15Ee-8Nr2H9gftQA" name="list" type="_Uk1f8C15Ee-8Nr2H9gftQA"/>
                <ownedParameter xmi:id="_UlHMwy15Ee-8Nr2H9gftQA" type="_UjO9cC15Ee-8Nr2H9gftQA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_UjNvUC15Ee-8Nr2H9gftQA" name="Main">
              <ownedComment xmi:id="_Ulr0gy15Ee-8Nr2H9gftQA">
                <body>Classe Main per l'esecuzione del programma.

Autore: Daniele Martinelli e Federico Sabbadini</body>
              </ownedComment>
              <ownedAttribute xmi:id="_UlbV0C15Ee-8Nr2H9gftQA" name="voci" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_UlbV0S15Ee-8Nr2H9gftQA" value="*"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_UlbV0y15Ee-8Nr2H9gftQA" value="{&quot;Introdurre comprensorio geografico&quot;, &quot;Introdurre albero&quot;, &quot;Visualizza comprensorio&quot;, &#xA;            &quot;Visualizza gerarchia&quot;, &quot;Visualizza fattori di conversione&quot;}"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_UlbV1S15Ee-8Nr2H9gftQA" name="vociAccesso" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_UlbV1i15Ee-8Nr2H9gftQA" value="*"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Ulb84C15Ee-8Nr2H9gftQA" value="{&quot;Registrazione&quot;,&quot;Login&quot;}"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_UlmU-y15Ee-8Nr2H9gftQA" name="main" specification="_UjOWYC15Ee-8Nr2H9gftQA">
                <ownedParameter xmi:id="_UlmU_C15Ee-8Nr2H9gftQA" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_UlmU_S15Ee-8Nr2H9gftQA" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>MyMenu menuAccesso = new MyMenu(&quot;Menu accesso&quot;, vociAccesso);
     MyMenu menu = new MyMenu(&quot;Menu principale&quot;, voci);

     // Caricamento da file
     Utenza utenza = FileManager.caricaUtenza();
     Gerarchia gerarchia = FileManager.caricaGerarchia();
     Geografia geografia = FileManager.caricaGeografia();

     if (utenza == null || gerarchia == null || geografia == null) {
         // Inizializzazione predefinita degli oggetti solo se non sono stati caricati da file
         DefaultInitializer defaultInitializer = new DefaultInitializer();
         gerarchia = defaultInitializer.getGerarchia();
         utenza = defaultInitializer.getUtenza();
         geografia = defaultInitializer.getGeografia();
     } else {
         System.out.println(&quot;Lettura da file: &quot; + FileManager.getUtenzaFile() 
         + &quot;, &quot; + FileManager.getGerarchiaFile() + &quot;, &quot; + FileManager.getGeografiaFile());
     }

     int accesso;
     do {
         accesso = menuAccesso.scegli();
         switch (accesso) {
             case 1:
             	Application.registrazione(utenza);
                 break;

             case 2:
                 accesso = Application.login(utenza);
                 break;

             default:
                 break;
         }
     } while (accesso == 1);

     if (accesso != 0) {
         int scelta;
         do {
             scelta = menu.scegli();
             switch (scelta) {

                 case 1:
                 	Application.creaComprensorio(geografia);
                     break;

                 case 2:
                     ArrayList&lt;Nodo> foglieAttuali = new ArrayList&lt;>();
                     Nodo root = Application.creaRadice(gerarchia);
                     Application.creaNodiFiglio(root, gerarchia, root, foglieAttuali);
                     gerarchia.addAlbero(new Albero(root));
                     Application.creaFattoriConversione(gerarchia, foglieAttuali);
                     break;

                 case 3:
                     System.out.println(geografia.toString());
                     break;

                 case 4:
                     String ger = gerarchia.toString();
                     System.out.println(ger);
                     break;

                 case 5:
                     Application.stampaFattori(gerarchia);
                     break;

                 default:
                     break;
             }
         } while (scelta != 0);
     }

     FileManager.salvaSuFile(gerarchia);
     FileManager.salvaSuFile(utenza);
     FileManager.salvaSuFile(geografia);
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_UjOWYC15Ee-8Nr2H9gftQA" name="main" isStatic="true" method="_UlmU-y15Ee-8Nr2H9gftQA" raisedException="_UjcY1C15Ee-8Nr2H9gftQA">
                <ownedParameter xmi:id="_UjOWYS15Ee-8Nr2H9gftQA" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_UjOWYi15Ee-8Nr2H9gftQA" value="*"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_UjO9cC15Ee-8Nr2H9gftQA" name="Nodo">
              <ownedComment xmi:id="_Ulr0hC15Ee-8Nr2H9gftQA">
                <body>La classe Nodo rappresenta un nodo all'interno di un albero.
Ogni nodo può essere una foglia o una non foglia.
Se un nodo è una foglia, contiene i fattori di conversione verso altri nodi.
Se un nodo è una non foglia, può avere figli e contiene informazioni sul campo e sul dominio.

Autore: Daniele Martinelli e Federico Sabbadini</body>
              </ownedComment>
              <ownedAttribute xmi:id="_Ulb84i15Ee-8Nr2H9gftQA" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Ulb84y15Ee-8Nr2H9gftQA" value="1L"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Ulb85C15Ee-8Nr2H9gftQA" name="nome" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Ulb85S15Ee-8Nr2H9gftQA" name="isLeaf" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Ulcj8S15Ee-8Nr2H9gftQA" name="root" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Ulcj8y15Ee-8Nr2H9gftQA" name="children" type="_UjO9cC15Ee-8Nr2H9gftQA" isOrdered="true" isReadOnly="true" association="_UlzJRC15Ee-8Nr2H9gftQA">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Ulcj9C15Ee-8Nr2H9gftQA" value="*"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Ulcj9S15Ee-8Nr2H9gftQA" name="campo" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_UldLAC15Ee-8Nr2H9gftQA" name="dominio" type="_Uk1f8C15Ee-8Nr2H9gftQA" isReadOnly="true" association="_UlzwUS15Ee-8Nr2H9gftQA"/>
              <ownedAttribute xmi:id="_UldLAi15Ee-8Nr2H9gftQA" name="MIN_FATTORECONVERSIONE" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_UldLAy15Ee-8Nr2H9gftQA" value="0.5"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_UldLBC15Ee-8Nr2H9gftQA" name="MAX_FATTORECONVERSIONE" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_UldLBS15Ee-8Nr2H9gftQA" value="2.0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_UldyEC15Ee-8Nr2H9gftQA" name="fattori" type="_Uk3VIC15Ee-8Nr2H9gftQA" isReadOnly="true" association="_UlzwVC15Ee-8Nr2H9gftQA"/>
              <interfaceRealization xmi:id="_UlHz0C15Ee-8Nr2H9gftQA" client="_UjO9cC15Ee-8Nr2H9gftQA" supplier="_UksWAC15Ee-8Nr2H9gftQA" contract="_UksWAC15Ee-8Nr2H9gftQA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_UlmVAC15Ee-8Nr2H9gftQA" name="Nodo" specification="_UjQLkC15Ee-8Nr2H9gftQA">
                <ownedParameter xmi:id="_UlmVAS15Ee-8Nr2H9gftQA" name="nome">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UlmVAi15Ee-8Nr2H9gftQA" name="root">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UlmVAy15Ee-8Nr2H9gftQA" name="campo">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UlmVBC15Ee-8Nr2H9gftQA" type="_UjO9cC15Ee-8Nr2H9gftQA" direction="return"/>
                <language>java</language>
                <body>this.root = root;
		this.campo = campo;
		this.nome = nome;
		this.isLeaf = false;
		this.children = new ArrayList&lt;>();
		this.dominio = new ArrayList&lt;>();
		
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_UlmVBS15Ee-8Nr2H9gftQA" name="Nodo" specification="_UjQyoC15Ee-8Nr2H9gftQA">
                <ownedParameter xmi:id="_UlmVBi15Ee-8Nr2H9gftQA" name="nome">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UlmVBy15Ee-8Nr2H9gftQA" name="root">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UlmVCC15Ee-8Nr2H9gftQA" type="_UjO9cC15Ee-8Nr2H9gftQA" direction="return"/>
                <language>java</language>
                <body>this.nome = nome;
		this.root = root;
		this.isLeaf = true;
		this.fattori = new HashMap&lt;Nodo, Double>();
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ulm8AC15Ee-8Nr2H9gftQA" name="isLeaf" specification="_UjQypi15Ee-8Nr2H9gftQA">
                <ownedParameter xmi:id="_Ulm8AS15Ee-8Nr2H9gftQA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return isLeaf;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ulm8Ai15Ee-8Nr2H9gftQA" name="root" specification="_UjQyqC15Ee-8Nr2H9gftQA">
                <ownedParameter xmi:id="_Ulm8Ay15Ee-8Nr2H9gftQA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return root;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ulm8BC15Ee-8Nr2H9gftQA" name="getCampo" specification="_UjRZsC15Ee-8Nr2H9gftQA">
                <ownedParameter xmi:id="_Ulm8BS15Ee-8Nr2H9gftQA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return campo;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ulm8Bi15Ee-8Nr2H9gftQA" name="getDominio" specification="_UjRZsi15Ee-8Nr2H9gftQA">
                <ownedParameter xmi:id="_Ulm8By15Ee-8Nr2H9gftQA" name="i">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Ulm8CC15Ee-8Nr2H9gftQA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String[] ret = this.dominio.get(i - 1);
		return ret[0];
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ulm8CS15Ee-8Nr2H9gftQA" name="addElementiDominio" specification="_UjRZtS15Ee-8Nr2H9gftQA">
                <ownedParameter xmi:id="_Ulm8Ci15Ee-8Nr2H9gftQA" name="valore">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Ulm8Cy15Ee-8Nr2H9gftQA" name="descrizione">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>this.dominio.add(new String[] { valore, descrizione });
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ulm8DC15Ee-8Nr2H9gftQA" name="addElementiDominio" specification="_UjSAwC15Ee-8Nr2H9gftQA">
                <ownedParameter xmi:id="_Ulm8DS15Ee-8Nr2H9gftQA" name="valore">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>this.dominio.add(new String[] { valore });
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ulm8Di15Ee-8Nr2H9gftQA" name="addChild" specification="_Uk4jQS15Ee-8Nr2H9gftQA">
                <ownedParameter xmi:id="_Ulm8Dy15Ee-8Nr2H9gftQA" name="child" type="_UjO9cC15Ee-8Nr2H9gftQA"/>
                <language>java</language>
                <body>if (this.isLeaf)
			throw new LeafHasChildrenException();
		this.children.add(child);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ulm8EC15Ee-8Nr2H9gftQA" name="toString" specification="_UjSAwi15Ee-8Nr2H9gftQA">
                <ownedParameter xmi:id="_Ulm8ES15Ee-8Nr2H9gftQA" name="blank">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Ulm8Ei15Ee-8Nr2H9gftQA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>StringBuffer bf = new StringBuffer();
		bf.append(&quot; &quot; + nome + &quot;\n&quot; );
		bf.append(blank + &quot;campo: &quot; + campo + &quot;\n&quot; );
		bf.append(blank + toStringDomain() + &quot;\n&quot; );
		bf.append(blank + toStringChildren());
		
		return bf.toString();
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ulm8Ey15Ee-8Nr2H9gftQA" name="toStringFactors" specification="_UjSAxS15Ee-8Nr2H9gftQA">
                <ownedParameter xmi:id="_Ulm8FC15Ee-8Nr2H9gftQA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return toStringF(this.nome);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ulm8FS15Ee-8Nr2H9gftQA" name="toStringDomain" specification="_UjSn0C15Ee-8Nr2H9gftQA">
                <ownedParameter xmi:id="_Ulm8Fi15Ee-8Nr2H9gftQA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>StringBuffer bf = new StringBuffer();
		bf.append(&quot;dominio: [&quot;);
		for (String[] elem : this.dominio) {
			bf.append(&quot;(valore: &quot; + elem[0].toString());
			if (elem.length > 1)
				bf.append(&quot;, descrizione: &quot; + elem[1].toString());
			bf.append(&quot;)&quot;);
		}
		bf.append(&quot;]&quot;);
		return bf.toString();
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ulm8Fy15Ee-8Nr2H9gftQA" name="toStringChildren" specification="_UjSn0i15Ee-8Nr2H9gftQA">
                <ownedParameter xmi:id="_Ulm8GC15Ee-8Nr2H9gftQA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>StringBuffer bf = new StringBuffer();
		int num = this.children.size();
		if (num == 1)
			bf.append(num + &quot; figlio: [&quot;);
		else
			bf.append(num + &quot; figli: [&quot;);
		for (Nodo nodo : this.children) {
			bf.append(&quot;(&quot; + nodo.getNome());
			bf.append(&quot;)&quot;);
		}
		bf.append(&quot;]&quot;);
		return bf.toString();
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ulm8GS15Ee-8Nr2H9gftQA" name="verificaEsistenzaNome" specification="_UjSn1C15Ee-8Nr2H9gftQA">
                <ownedParameter xmi:id="_Ulm8Gi15Ee-8Nr2H9gftQA" name="nome">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Ulm8Gy15Ee-8Nr2H9gftQA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return verifica(nome, this);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_UlnjEC15Ee-8Nr2H9gftQA" name="verifica" specification="_Uk5KUC15Ee-8Nr2H9gftQA">
                <ownedParameter xmi:id="_UlnjES15Ee-8Nr2H9gftQA" name="nome">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UlnjEi15Ee-8Nr2H9gftQA" name="radice" type="_UjO9cC15Ee-8Nr2H9gftQA"/>
                <ownedParameter xmi:id="_UlnjEy15Ee-8Nr2H9gftQA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>if (radice.isLeaf()) {
         return radice.getNome().equals(nome);
     } else {
         for (Nodo nodo : radice.getChildren()) {
             if (nodo.getNome().equals(nome) || verifica(nome, nodo)) {
                 return true;
             }
         }
         return false;
     }
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_UlnjFC15Ee-8Nr2H9gftQA" name="toNavigationString" specification="_UjTO4C15Ee-8Nr2H9gftQA">
                <ownedParameter xmi:id="_UlnjFS15Ee-8Nr2H9gftQA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>StringBuilder b = new StringBuilder();
 	b.append(&quot; nome: &quot; + this.nome);
 	
 	if (!this.isLeaf) {
     	b.append(&quot;\n |campo: &quot; + this.campo);
     	b.append(&quot;\n |dominio: &quot;);
     	int var = 0;
     	for (String[] valore : this.dominio) {
     		var++;
 			b.append(&quot;\n  &quot; + var + &quot; - &quot; + valore[0]);
 			if (valore.length>1)
 				b.append(&quot;, &quot; + valore [1]);
 		}
 	}	else
 		b.append(&quot; |foglia!|&quot;);
 	return b.toString();
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_UlnjFi15Ee-8Nr2H9gftQA" name="fattoreFoglia" specification="_Uk5KVC15Ee-8Nr2H9gftQA">
                <ownedParameter xmi:id="_UlnjFy15Ee-8Nr2H9gftQA" name="nodo" type="_UjO9cC15Ee-8Nr2H9gftQA"/>
                <ownedParameter xmi:id="_UlnjGC15Ee-8Nr2H9gftQA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <language>java</language>
                <body>if (fattori.containsKey(nodo))
			return fattori.get(nodo);
		return 0;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_UlnjGS15Ee-8Nr2H9gftQA" name="addFattoreConversione" specification="_UlJB8C15Ee-8Nr2H9gftQA">
                <ownedParameter xmi:id="_UlnjGi15Ee-8Nr2H9gftQA" name="foglia" type="_UjO9cC15Ee-8Nr2H9gftQA"/>
                <ownedParameter xmi:id="_UlnjGy15Ee-8Nr2H9gftQA" name="fattore" type="_UlIa4C15Ee-8Nr2H9gftQA"/>
                <language>java</language>
                <body>fattori.put(foglia, fattore);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_UlnjHC15Ee-8Nr2H9gftQA" name="verificaFattoreConversione" specification="_UjTO4i15Ee-8Nr2H9gftQA">
                <ownedParameter xmi:id="_UlnjHS15Ee-8Nr2H9gftQA" name="fattore">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UlnjHi15Ee-8Nr2H9gftQA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return (fattore >= MIN_FATTORECONVERSIONE &amp;&amp; fattore &lt;= MAX_FATTORECONVERSIONE);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_UlnjHy15Ee-8Nr2H9gftQA" name="addTransitivoFattoreConversione" specification="_Uk5KVy15Ee-8Nr2H9gftQA">
                <ownedParameter xmi:id="_UlnjIC15Ee-8Nr2H9gftQA" name="gerarchia" type="_UjKsAC15Ee-8Nr2H9gftQA"/>
                <language>java</language>
                <body>for (Nodo nodo1 : gerarchia.getFoglie()) {
         for (Nodo nodo2 : gerarchia.getFoglie()) {
             if (!nodo1.equals(nodo2) &amp;&amp; nodo1.fattoreFoglia(nodo2) == 0) {
                 Double fattore = calcTransitivo(nodo1, nodo2, new ArrayList&lt;>());
                 if (fattore != null) {
                 	nodo1.addFattoreConversione(nodo2, fattore);
                 }
             }
         }
     }
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_UlnjIS15Ee-8Nr2H9gftQA" name="calcTransitivo" specification="_UlJB8y15Ee-8Nr2H9gftQA">
                <ownedParameter xmi:id="_UlnjIi15Ee-8Nr2H9gftQA" name="nodo1" type="_UjO9cC15Ee-8Nr2H9gftQA"/>
                <ownedParameter xmi:id="_UlnjIy15Ee-8Nr2H9gftQA" name="nodo2" type="_UjO9cC15Ee-8Nr2H9gftQA"/>
                <ownedParameter xmi:id="_UlnjJC15Ee-8Nr2H9gftQA" name="visitati" type="_Uk1f8C15Ee-8Nr2H9gftQA"/>
                <ownedParameter xmi:id="_UlnjJS15Ee-8Nr2H9gftQA" type="_UlIa4C15Ee-8Nr2H9gftQA" direction="return"/>
                <language>java</language>
                <body>Map&lt;Nodo, Double> fact = nodo1.getFattori();
     if (nodo1.equals(nodo2)) {
         return 1.0;
     } else if (nodo1.fattoreFoglia(nodo2) != 0) {
         return nodo1.fattoreFoglia(nodo2);
     } else {
         if (fact.isEmpty())
             return null;
         for (Map.Entry&lt;Nodo, Double> entry : fact.entrySet()) {
             Nodo key = entry.getKey();
             if (!visitati.contains(key)) {
                 visitati.add(key);
                 Double val = calcTransitivo(key, nodo2, visitati);
                 if (val != null) {
                     return entry.getValue() * val;
                 }
             }
         }
     }
     return null; // Restituiamo null se non è possibile calcolare il fattore di conversione
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_UlnjJi15Ee-8Nr2H9gftQA" name="isEmpty" specification="_UjT18C15Ee-8Nr2H9gftQA">
                <ownedParameter xmi:id="_UlnjJy15Ee-8Nr2H9gftQA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>if (fattori.size()==0)
			return true;
		return false;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_UlnjKC15Ee-8Nr2H9gftQA" name="toStringF" specification="_UjT18i15Ee-8Nr2H9gftQA">
                <ownedParameter xmi:id="_UlnjKS15Ee-8Nr2H9gftQA" name="nome">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UlnjKi15Ee-8Nr2H9gftQA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>StringBuffer bf = new StringBuffer();
		for (Entry&lt;Nodo, Double> fatt : this.fattori.entrySet()) {
			Nodo key = fatt.getKey();
			Double val = fatt.getValue();
			if (!nome.equals(key.getNome())) {
				// Formatta il double con un massimo di tre decimali
				String formattedVal = String.format(&quot;%.3f&quot;, val);
				bf.append(nome + &quot; - &quot; + key.getNome() + &quot; - &quot; + formattedVal);
				bf.append(&quot;\n&quot;);
			}
		}
		return bf.toString();
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_UjQLkC15Ee-8Nr2H9gftQA" name="Nodo" method="_UlmVAC15Ee-8Nr2H9gftQA">
                <eAnnotations xmi:id="_UjQLlC15Ee-8Nr2H9gftQA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_UjQLlS15Ee-8Nr2H9gftQA" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_Ulr0hS15Ee-8Nr2H9gftQA">
                  <body>Costruttore non foglia.
	 * 
	 * @param nome   Il nome del nodo.
	 * @param isRoot True se il nodo è la radice dell'albero, false altrimenti.
	 * @param campo  Il campo associato al nodo (valido solo per i nodi non foglia).</body>
                </ownedComment>
                <ownedParameter xmi:id="_UjQLkS15Ee-8Nr2H9gftQA" name="nome">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UjQLki15Ee-8Nr2H9gftQA" name="root">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UjQLky15Ee-8Nr2H9gftQA" name="campo">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UjQLli15Ee-8Nr2H9gftQA" type="_UjO9cC15Ee-8Nr2H9gftQA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_UjQyoC15Ee-8Nr2H9gftQA" name="Nodo" method="_UlmVBS15Ee-8Nr2H9gftQA">
                <eAnnotations xmi:id="_UjQyoy15Ee-8Nr2H9gftQA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_UjQypC15Ee-8Nr2H9gftQA" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_Ulr0hi15Ee-8Nr2H9gftQA">
                  <body>Costruttore foglia.
	 * Una foglia non può essere radice, in quanto una radice 
	 * deve avere necessariamente almeno un figlio.
	 * 
	 * @param nome Il nome del nodo.</body>
                </ownedComment>
                <ownedParameter xmi:id="_UjQyoS15Ee-8Nr2H9gftQA" name="nome">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UjQyoi15Ee-8Nr2H9gftQA" name="root">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UjQypS15Ee-8Nr2H9gftQA" type="_UjO9cC15Ee-8Nr2H9gftQA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_UjQypi15Ee-8Nr2H9gftQA" name="isLeaf" method="_Ulm8AC15Ee-8Nr2H9gftQA">
                <ownedComment xmi:id="_Ulr0hy15Ee-8Nr2H9gftQA">
                  <body>Verifica se il nodo è una foglia.
	 * 
	 * @return True se il nodo è una foglia, altrimenti False.</body>
                </ownedComment>
                <ownedParameter xmi:id="_UjQypy15Ee-8Nr2H9gftQA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UjQyqC15Ee-8Nr2H9gftQA" name="root" method="_Ulm8Ai15Ee-8Nr2H9gftQA">
                <ownedComment xmi:id="_Ulr0iC15Ee-8Nr2H9gftQA">
                  <body>Verifica se il nodo è una radice.
	 * 
	 * @return True se il nodo è una radice, altrimenti False.</body>
                </ownedComment>
                <ownedParameter xmi:id="_UjQyqS15Ee-8Nr2H9gftQA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UjRZsC15Ee-8Nr2H9gftQA" name="getCampo" method="_Ulm8BC15Ee-8Nr2H9gftQA">
                <ownedComment xmi:id="_Ulr0iS15Ee-8Nr2H9gftQA">
                  <body>Restituisce il campo associato al nodo.
	 * 
	 * @return Il campo associato al nodo.</body>
                </ownedComment>
                <ownedParameter xmi:id="_UjRZsS15Ee-8Nr2H9gftQA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UjRZsi15Ee-8Nr2H9gftQA" name="getDominio" method="_Ulm8Bi15Ee-8Nr2H9gftQA">
                <ownedComment xmi:id="_Ulr0ii15Ee-8Nr2H9gftQA">
                  <body>Restituisce il valore del dominio associato all'i-esimo figlio.
	 * 
	 * @param i L'indice del figlio.
	 * @return Il valore del dominio associato al nodo.</body>
                </ownedComment>
                <ownedParameter xmi:id="_UjRZsy15Ee-8Nr2H9gftQA" name="i">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UjRZtC15Ee-8Nr2H9gftQA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UjRZtS15Ee-8Nr2H9gftQA" name="addElementiDominio" method="_Ulm8CS15Ee-8Nr2H9gftQA">
                <ownedComment xmi:id="_Ulr0iy15Ee-8Nr2H9gftQA">
                  <body>Aggiunge un elemento al dominio del nodo.
	 * 
	 * @param valore       Il valore da aggiungere al dominio.
	 * @param descrizione  La descrizione associata al valore.</body>
                </ownedComment>
                <ownedParameter xmi:id="_UjRZti15Ee-8Nr2H9gftQA" name="valore">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UjRZty15Ee-8Nr2H9gftQA" name="descrizione">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UjSAwC15Ee-8Nr2H9gftQA" name="addElementiDominio" method="_Ulm8DC15Ee-8Nr2H9gftQA">
                <ownedComment xmi:id="_Ulr0jC15Ee-8Nr2H9gftQA">
                  <body>Aggiunge un elemento al dominio del nodo.
	 * 
	 * @param valore Il valore da aggiungere al dominio.</body>
                </ownedComment>
                <ownedParameter xmi:id="_UjSAwS15Ee-8Nr2H9gftQA" name="valore">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UjSAwi15Ee-8Nr2H9gftQA" name="toString" method="_Ulm8EC15Ee-8Nr2H9gftQA">
                <ownedComment xmi:id="_Ulr0ji15Ee-8Nr2H9gftQA">
                  <body>Genera una stringa del dominio associato al nodo.
	 * 
	 * @return Una stringa rappresentante il dominio associato al nodo.</body>
                </ownedComment>
                <ownedParameter xmi:id="_UjSAwy15Ee-8Nr2H9gftQA" name="blank">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UjSAxC15Ee-8Nr2H9gftQA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UjSAxS15Ee-8Nr2H9gftQA" name="toStringFactors" method="_Ulm8Ey15Ee-8Nr2H9gftQA">
                <ownedComment xmi:id="_Ulr0jy15Ee-8Nr2H9gftQA">
                  <body>Genera una stringa delle relazioni di una foglia con le altre foglie.
	 * 
	 * @return Una stringa rappresentante le relazioni con le foglie.</body>
                </ownedComment>
                <ownedParameter xmi:id="_UjSAxi15Ee-8Nr2H9gftQA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UjSn0C15Ee-8Nr2H9gftQA" name="toStringDomain" visibility="private" method="_Ulm8FS15Ee-8Nr2H9gftQA">
                <ownedComment xmi:id="_Ulr0kC15Ee-8Nr2H9gftQA">
                  <body>Genera una stringa del dominio associato al nodo.
	 * 
	 * @return Una stringa rappresentante il dominio associato al nodo.</body>
                </ownedComment>
                <ownedParameter xmi:id="_UjSn0S15Ee-8Nr2H9gftQA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UjSn0i15Ee-8Nr2H9gftQA" name="toStringChildren" visibility="private" method="_Ulm8Fy15Ee-8Nr2H9gftQA">
                <ownedComment xmi:id="_Ulr0kS15Ee-8Nr2H9gftQA">
                  <body>Genera una rappresentazione testuale dei figli del nodo.
	 * 
	 * @return Una stringa rappresentante i figli del nodo.</body>
                </ownedComment>
                <ownedParameter xmi:id="_UjSn0y15Ee-8Nr2H9gftQA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UjSn1C15Ee-8Nr2H9gftQA" name="verificaEsistenzaNome" method="_Ulm8GS15Ee-8Nr2H9gftQA">
                <ownedComment xmi:id="_Ulr0ki15Ee-8Nr2H9gftQA">
                  <body>Verifica se esiste un nodo non radice con il dato nome sotto il nodo radice specificato.
     * 
     * @param nome Il nome del nodo da cercare
     * @param radice Il nodo radice sotto il quale cercare
     * @return true se esiste un nodo con il nome specificato sotto il nodo radice, false altrimenti</body>
                </ownedComment>
                <ownedParameter xmi:id="_UjSn1S15Ee-8Nr2H9gftQA" name="nome">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UjSn1i15Ee-8Nr2H9gftQA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UjTO4C15Ee-8Nr2H9gftQA" name="toNavigationString" method="_UlnjFC15Ee-8Nr2H9gftQA">
                <ownedParameter xmi:id="_UjTO4S15Ee-8Nr2H9gftQA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UjTO4i15Ee-8Nr2H9gftQA" name="verificaFattoreConversione" isStatic="true" method="_UlnjHC15Ee-8Nr2H9gftQA">
                <ownedComment xmi:id="_Ulr0li15Ee-8Nr2H9gftQA">
                  <body>Verifica se un dato fattore di conversione è valido.
     * 
     * @param fattore Il fattore di conversione da verificare
     * @return true se il fattore è compreso nell'intervallo consentito, false altrimenti</body>
                </ownedComment>
                <ownedParameter xmi:id="_UjTO4y15Ee-8Nr2H9gftQA" name="fattore">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UjTO5C15Ee-8Nr2H9gftQA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UjT18C15Ee-8Nr2H9gftQA" name="isEmpty" visibility="private" method="_UlnjJi15Ee-8Nr2H9gftQA">
                <ownedParameter xmi:id="_UjT18S15Ee-8Nr2H9gftQA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UjT18i15Ee-8Nr2H9gftQA" name="toStringF" method="_UlnjKC15Ee-8Nr2H9gftQA">
                <ownedComment xmi:id="_Ulsbki15Ee-8Nr2H9gftQA">
                  <body>Genera una stringa delle relazioni di una foglia con le altre foglie.
	 * 
	 * @return Una stringa rappresentante le relazioni con le foglie.</body>
                </ownedComment>
                <ownedParameter xmi:id="_UjT18y15Ee-8Nr2H9gftQA" name="nome">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UjT19C15Ee-8Nr2H9gftQA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Uk4jQS15Ee-8Nr2H9gftQA" name="addChild" method="_Ulm8Di15Ee-8Nr2H9gftQA" raisedException="_UjbxxC15Ee-8Nr2H9gftQA">
                <ownedComment xmi:id="_Ulr0jS15Ee-8Nr2H9gftQA">
                  <body>Aggiunge un nodo figlio a questo nodo.
	 * 
	 * @param child Il nodo figlio da aggiungere.
	 * @throws LeafHasChildrenException Se il nodo è una foglia, non può avere figli.</body>
                </ownedComment>
                <ownedParameter xmi:id="_Uk4jQi15Ee-8Nr2H9gftQA" name="child" type="_UjO9cC15Ee-8Nr2H9gftQA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Uk5KUC15Ee-8Nr2H9gftQA" name="verifica" visibility="private" isStatic="true" method="_UlnjEC15Ee-8Nr2H9gftQA">
                <ownedComment xmi:id="_Ulr0ky15Ee-8Nr2H9gftQA">
                  <body>Verifica se esiste un nodo non radice con il dato nome sotto il nodo radice specificato.
     * 
     * @param nome Il nome del nodo da cercare
     * @param radice Il nodo radice sotto il quale cercare
     * @return true se esiste un nodo con il nome specificato sotto il nodo radice, false altrimenti</body>
                </ownedComment>
                <ownedParameter xmi:id="_Uk5KUS15Ee-8Nr2H9gftQA" name="nome">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Uk5KUi15Ee-8Nr2H9gftQA" name="radice" type="_UjO9cC15Ee-8Nr2H9gftQA"/>
                <ownedParameter xmi:id="_Uk5KUy15Ee-8Nr2H9gftQA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Uk5KVC15Ee-8Nr2H9gftQA" name="fattoreFoglia" method="_UlnjFi15Ee-8Nr2H9gftQA">
                <ownedComment xmi:id="_Ulr0lC15Ee-8Nr2H9gftQA">
                  <body>Verifica se esiste un fattore di conversione con una data foglia.
	 * 
	 * @param foglia La foglia con cui verificare la relazione.
	 * @return true se esiste una relazione di conversione con la foglia, false altrimenti.</body>
                </ownedComment>
                <ownedParameter xmi:id="_Uk5KVS15Ee-8Nr2H9gftQA" name="nodo" type="_UjO9cC15Ee-8Nr2H9gftQA"/>
                <ownedParameter xmi:id="_Uk5KVi15Ee-8Nr2H9gftQA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Uk5KVy15Ee-8Nr2H9gftQA" name="addTransitivoFattoreConversione" isStatic="true" method="_UlnjHy15Ee-8Nr2H9gftQA">
                <ownedComment xmi:id="_UlsbkC15Ee-8Nr2H9gftQA">
                  <body>Aggiunge i fattori di conversione transitivi tra TUTTE le coppie di foglie nella gerarchia.
     * 
     * @param gerarchia La gerarchia su cui operare</body>
                </ownedComment>
                <ownedParameter xmi:id="_Uk5KWC15Ee-8Nr2H9gftQA" name="gerarchia" type="_UjKsAC15Ee-8Nr2H9gftQA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_UlJB8C15Ee-8Nr2H9gftQA" name="addFattoreConversione" method="_UlnjGS15Ee-8Nr2H9gftQA">
                <ownedComment xmi:id="_Ulr0lS15Ee-8Nr2H9gftQA">
                  <body>Aggiunge un fattore di conversione associato al nodo.
	 * 
	 * @param foglia  Il nodo foglia con cui associare il fattore.
	 * @param fattore Il fattore di conversione da aggiungere.</body>
                </ownedComment>
                <ownedParameter xmi:id="_UlJB8S15Ee-8Nr2H9gftQA" name="foglia" type="_UjO9cC15Ee-8Nr2H9gftQA"/>
                <ownedParameter xmi:id="_UlJB8i15Ee-8Nr2H9gftQA" name="fattore" type="_UlIa4C15Ee-8Nr2H9gftQA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_UlJB8y15Ee-8Nr2H9gftQA" name="calcTransitivo" visibility="private" isStatic="true" method="_UlnjIS15Ee-8Nr2H9gftQA">
                <ownedComment xmi:id="_UlsbkS15Ee-8Nr2H9gftQA">
                  <body>Metodo per calcolare il fattore di conversione transitivo tra due nodi.
     * 
     * @param nodo1 Il primo nodo
     * @param nodo2 Il secondo nodo
     * @param visitati Lista dei nodi visitati durante il calcolo
     * @return Il fattore di conversione transitivo tra i due nodi, null se non è possibile calcolarlo</body>
                </ownedComment>
                <ownedParameter xmi:id="_UlJB9C15Ee-8Nr2H9gftQA" name="nodo1" type="_UjO9cC15Ee-8Nr2H9gftQA"/>
                <ownedParameter xmi:id="_UlJB9S15Ee-8Nr2H9gftQA" name="nodo2" type="_UjO9cC15Ee-8Nr2H9gftQA"/>
                <ownedParameter xmi:id="_UlJB9i15Ee-8Nr2H9gftQA" name="visitati" type="_Uk1f8C15Ee-8Nr2H9gftQA"/>
                <ownedParameter xmi:id="_UlJB9y15Ee-8Nr2H9gftQA" type="_UlIa4C15Ee-8Nr2H9gftQA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_UjXgUC15Ee-8Nr2H9gftQA" name="Utente" isAbstract="true">
              <ownedComment xmi:id="_Ulsbky15Ee-8Nr2H9gftQA">
                <body>La classe astratta Utente rappresenta un utente generico del sistema.
Ogni utente ha un tipo (definito da un carattere) e delle credenziali
(identificativo e password).

@author Daniele Martinelli
@author Federico Sabbadini</body>
              </ownedComment>
              <ownedAttribute xmi:id="_UlfAMC15Ee-8Nr2H9gftQA" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_UlfAMS15Ee-8Nr2H9gftQA" value="1L"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_UlfAMi15Ee-8Nr2H9gftQA" name="tipoUtente" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_UlfAMy15Ee-8Nr2H9gftQA" name="credenziali" type="_UjAT8i15Ee-8Nr2H9gftQA" isReadOnly="true" association="_Ul0XYS15Ee-8Nr2H9gftQA"/>
              <interfaceRealization xmi:id="_UlK3IC15Ee-8Nr2H9gftQA" client="_UjXgUC15Ee-8Nr2H9gftQA" supplier="_UksWAC15Ee-8Nr2H9gftQA" contract="_UksWAC15Ee-8Nr2H9gftQA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_UloKIC15Ee-8Nr2H9gftQA" name="Utente" specification="_Uk6_gC15Ee-8Nr2H9gftQA">
                <ownedParameter xmi:id="_UloKIS15Ee-8Nr2H9gftQA" name="tipoUtente">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UloKIi15Ee-8Nr2H9gftQA" name="credenziali" type="_UjAT8i15Ee-8Nr2H9gftQA"/>
                <ownedParameter xmi:id="_UloKIy15Ee-8Nr2H9gftQA" type="_UjXgUC15Ee-8Nr2H9gftQA" direction="return"/>
                <language>java</language>
                <body>this.tipoUtente = tipoUtente;
     this.credenziali = credenziali;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_UloKJC15Ee-8Nr2H9gftQA" name="getID" specification="_UjYHYC15Ee-8Nr2H9gftQA">
                <ownedParameter xmi:id="_UloKJS15Ee-8Nr2H9gftQA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return this.credenziali.getID();
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_UloKJi15Ee-8Nr2H9gftQA" name="getPassword" specification="_UjYHYi15Ee-8Nr2H9gftQA">
                <ownedParameter xmi:id="_UloKJy15Ee-8Nr2H9gftQA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return this.credenziali.getPassword();
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_UloKKC15Ee-8Nr2H9gftQA" name="setCredenziali" specification="_Uk7mkC15Ee-8Nr2H9gftQA">
                <ownedParameter xmi:id="_UloKKS15Ee-8Nr2H9gftQA" name="credenziali" type="_UjAT8i15Ee-8Nr2H9gftQA"/>
                <language>java</language>
                <body>this.credenziali.setID(credenziali.getID());
     this.credenziali.setPassword(credenziali.getPassword());
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_UloKKi15Ee-8Nr2H9gftQA" name="setIsDefinitivo" specification="_UjYHZC15Ee-8Nr2H9gftQA">
                <ownedParameter xmi:id="_UloKKy15Ee-8Nr2H9gftQA" name="x">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>this.credenziali.setDefinitive(x);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_UloxMC15Ee-8Nr2H9gftQA" name="getIsDefinitivo" specification="_UjYHZi15Ee-8Nr2H9gftQA">
                <ownedParameter xmi:id="_UloxMS15Ee-8Nr2H9gftQA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return this.credenziali.isDefinitive();
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_UjYHYC15Ee-8Nr2H9gftQA" name="getID" method="_UloKJC15Ee-8Nr2H9gftQA">
                <ownedComment xmi:id="_UlsblS15Ee-8Nr2H9gftQA">
                  <body>Restituisce l'ID dell'utente.
     * 
     * @return String L'ID dell'utente</body>
                </ownedComment>
                <ownedParameter xmi:id="_UjYHYS15Ee-8Nr2H9gftQA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UjYHYi15Ee-8Nr2H9gftQA" name="getPassword" method="_UloKJi15Ee-8Nr2H9gftQA">
                <ownedComment xmi:id="_Ulsbli15Ee-8Nr2H9gftQA">
                  <body>Restituisce la password dell'utente.
     * 
     * @return String La password dell'utente</body>
                </ownedComment>
                <ownedParameter xmi:id="_UjYHYy15Ee-8Nr2H9gftQA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UjYHZC15Ee-8Nr2H9gftQA" name="setIsDefinitivo" method="_UloKKi15Ee-8Nr2H9gftQA">
                <ownedComment xmi:id="_UlsbmC15Ee-8Nr2H9gftQA">
                  <body>Imposta la definitività delle credenziali.
     * Per un utente appena creato è false.
     * 
     * @param x La definitività da impostare.</body>
                </ownedComment>
                <ownedParameter xmi:id="_UjYHZS15Ee-8Nr2H9gftQA" name="x">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UjYHZi15Ee-8Nr2H9gftQA" name="getIsDefinitivo" method="_UloxMC15Ee-8Nr2H9gftQA">
                <ownedComment xmi:id="_UlsbmS15Ee-8Nr2H9gftQA">
                  <body>Restituisce lo stato di definitività delle credenziali.
     * 
     * @return boolean True se le credenziali sono definitive, false altrimenti</body>
                </ownedComment>
                <ownedParameter xmi:id="_UjYucC15Ee-8Nr2H9gftQA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Uk6_gC15Ee-8Nr2H9gftQA" name="Utente" method="_UloKIC15Ee-8Nr2H9gftQA">
                <eAnnotations xmi:id="_Uk6_gy15Ee-8Nr2H9gftQA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_Uk6_hC15Ee-8Nr2H9gftQA" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_UlsblC15Ee-8Nr2H9gftQA">
                  <body>Costruttore della classe Utente.
     * 
     * @param tipoUtente   Il tipo di utente (carattere)
     * @param credenziali  Le credenziali associate all'utente</body>
                </ownedComment>
                <ownedParameter xmi:id="_Uk6_gS15Ee-8Nr2H9gftQA" name="tipoUtente">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Uk6_gi15Ee-8Nr2H9gftQA" name="credenziali" type="_UjAT8i15Ee-8Nr2H9gftQA"/>
                <ownedParameter xmi:id="_Uk6_hS15Ee-8Nr2H9gftQA" type="_UjXgUC15Ee-8Nr2H9gftQA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Uk7mkC15Ee-8Nr2H9gftQA" name="setCredenziali" method="_UloKKC15Ee-8Nr2H9gftQA">
                <ownedComment xmi:id="_Ulsbly15Ee-8Nr2H9gftQA">
                  <body>Imposta le credenziali dell'utente.
     * 
     * @param credenziali  Le nuove credenziali da impostare</body>
                </ownedComment>
                <ownedParameter xmi:id="_Uk7mkS15Ee-8Nr2H9gftQA" name="credenziali" type="_UjAT8i15Ee-8Nr2H9gftQA"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_UjZVgC15Ee-8Nr2H9gftQA" name="Utenza">
              <ownedComment xmi:id="_Ulsbmi15Ee-8Nr2H9gftQA">
                <body>La classe Utenza gestisce gli utenti nel sistema.

@author Daniele Martinelli
@author Federico Sabbadini</body>
              </ownedComment>
              <ownedAttribute xmi:id="_UlfnQC15Ee-8Nr2H9gftQA" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_UlfnQS15Ee-8Nr2H9gftQA" value="1L"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_UlfnQi15Ee-8Nr2H9gftQA" name="utenti" type="_Uks9EC15Ee-8Nr2H9gftQA" isReadOnly="true" association="_Ul0XZC15Ee-8Nr2H9gftQA"/>
              <ownedAttribute xmi:id="_sGFjwC15Ee-8Nr2H9gftQA" name="utente_1_1" visibility="public" type="_UjXgUC15Ee-8Nr2H9gftQA" association="_sGFjwS15Ee-8Nr2H9gftQA"/>
              <interfaceRealization xmi:id="_UlLeMC15Ee-8Nr2H9gftQA" client="_UjZVgC15Ee-8Nr2H9gftQA" supplier="_UksWAC15Ee-8Nr2H9gftQA" contract="_UksWAC15Ee-8Nr2H9gftQA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_UloxMi15Ee-8Nr2H9gftQA" name="Utenza" specification="_UjZVgS15Ee-8Nr2H9gftQA">
                <ownedParameter xmi:id="_UloxMy15Ee-8Nr2H9gftQA" type="_UjZVgC15Ee-8Nr2H9gftQA" direction="return"/>
                <language>java</language>
                <body>this.utenti = new ArrayList&lt;>();
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_UloxNC15Ee-8Nr2H9gftQA" name="addUtente" specification="_Uk8NoC15Ee-8Nr2H9gftQA">
                <ownedParameter xmi:id="_UloxNS15Ee-8Nr2H9gftQA" name="utente" type="_UjXgUC15Ee-8Nr2H9gftQA"/>
                <language>java</language>
                <body>this.utenti.add(utente);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_UloxNi15Ee-8Nr2H9gftQA" name="autenticazioneConfiguratore" specification="_UjZ8ki15Ee-8Nr2H9gftQA">
                <ownedParameter xmi:id="_UloxNy15Ee-8Nr2H9gftQA" name="ID">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UloxOC15Ee-8Nr2H9gftQA" name="Password">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UloxOS15Ee-8Nr2H9gftQA" type="_Ui_F0S15Ee-8Nr2H9gftQA" direction="return"/>
                <language>java</language>
                <body>for (Utente utente : utenti) {
			if (utente.getID().equals(ID)) {
				if (utente.getPassword().equals(Password)) {
					if (utente.getTipoUtente() == Configuratore.TIPOUTENTE ){
						return (Configuratore) utente;
					}
				}
			}
		}
		return null;
		
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_UloxOi15Ee-8Nr2H9gftQA" name="verificaEsistenzaID" specification="_UjZ8lS15Ee-8Nr2H9gftQA">
                <ownedParameter xmi:id="_UloxOy15Ee-8Nr2H9gftQA" name="id">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UloxPC15Ee-8Nr2H9gftQA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>for (Utente utente : utenti) {
			if (utente.getID().equals(id)) {
				return true;
			}
		}
		return false;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_UjZVgS15Ee-8Nr2H9gftQA" name="Utenza" method="_UloxMi15Ee-8Nr2H9gftQA">
                <eAnnotations xmi:id="_UjZVgi15Ee-8Nr2H9gftQA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_UjZ8kC15Ee-8Nr2H9gftQA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_UjZ8kS15Ee-8Nr2H9gftQA" type="_UjZVgC15Ee-8Nr2H9gftQA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_UjZ8ki15Ee-8Nr2H9gftQA" name="autenticazioneConfiguratore" method="_UloxNi15Ee-8Nr2H9gftQA">
                <ownedParameter xmi:id="_UjZ8ky15Ee-8Nr2H9gftQA" name="ID">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UjZ8lC15Ee-8Nr2H9gftQA" name="Password">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Uk8Noi15Ee-8Nr2H9gftQA" type="_Ui_F0S15Ee-8Nr2H9gftQA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_UjZ8lS15Ee-8Nr2H9gftQA" name="verificaEsistenzaID" method="_UloxOi15Ee-8Nr2H9gftQA">
                <ownedParameter xmi:id="_UjZ8li15Ee-8Nr2H9gftQA" name="id">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UjajoC15Ee-8Nr2H9gftQA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Uk8NoC15Ee-8Nr2H9gftQA" name="addUtente" method="_UloxNC15Ee-8Nr2H9gftQA">
                <ownedParameter xmi:id="_Uk8NoS15Ee-8Nr2H9gftQA" name="utente" type="_UjXgUC15Ee-8Nr2H9gftQA"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_UlqmYi15Ee-8Nr2H9gftQA" name="" memberEnd="_UlTaAS15Ee-8Nr2H9gftQA _UlqmYy15Ee-8Nr2H9gftQA">
              <ownedEnd xmi:id="_UlqmYy15Ee-8Nr2H9gftQA" name="" type="_Ui4_MC15Ee-8Nr2H9gftQA" association="_UlqmYi15Ee-8Nr2H9gftQA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_UlwF9C15Ee-8Nr2H9gftQA" name="" memberEnd="_UlwF9S15Ee-8Nr2H9gftQA _UlSy8y15Ee-8Nr2H9gftQA">
              <ownedEnd xmi:id="_UlwF9S15Ee-8Nr2H9gftQA" name="" type="_Ui4_MC15Ee-8Nr2H9gftQA" association="_UlwF9C15Ee-8Nr2H9gftQA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_UlwtAS15Ee-8Nr2H9gftQA" name="" memberEnd="_UlwtAi15Ee-8Nr2H9gftQA _UlSy9C15Ee-8Nr2H9gftQA">
              <ownedEnd xmi:id="_UlwtAi15Ee-8Nr2H9gftQA" name="" type="_Ui4_MC15Ee-8Nr2H9gftQA" association="_UlwtAS15Ee-8Nr2H9gftQA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_UlwtBC15Ee-8Nr2H9gftQA" name="" memberEnd="_UlwtBS15Ee-8Nr2H9gftQA _UlUBEy15Ee-8Nr2H9gftQA">
              <ownedEnd xmi:id="_UlwtBS15Ee-8Nr2H9gftQA" name="" type="_Ui93sC15Ee-8Nr2H9gftQA" association="_UlwtBC15Ee-8Nr2H9gftQA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_UlxUEC15Ee-8Nr2H9gftQA" name="" memberEnd="_UlxUES15Ee-8Nr2H9gftQA _UlXEay15Ee-8Nr2H9gftQA">
              <ownedEnd xmi:id="_UlxUES15Ee-8Nr2H9gftQA" name="" type="_UjCwMC15Ee-8Nr2H9gftQA" association="_UlxUEC15Ee-8Nr2H9gftQA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_UlxUEy15Ee-8Nr2H9gftQA" name="" memberEnd="_UlxUFC15Ee-8Nr2H9gftQA _UlXrcC15Ee-8Nr2H9gftQA">
              <ownedEnd xmi:id="_UlxUFC15Ee-8Nr2H9gftQA" name="" type="_UjCwMC15Ee-8Nr2H9gftQA" association="_UlxUEy15Ee-8Nr2H9gftQA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_UlxUFi15Ee-8Nr2H9gftQA" name="" memberEnd="_UlxUFy15Ee-8Nr2H9gftQA _UlXrcS15Ee-8Nr2H9gftQA">
              <ownedEnd xmi:id="_UlxUFy15Ee-8Nr2H9gftQA" name="" type="_UjCwMC15Ee-8Nr2H9gftQA" association="_UlxUFi15Ee-8Nr2H9gftQA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_Ulx7IS15Ee-8Nr2H9gftQA" name="" memberEnd="_Ulx7Ii15Ee-8Nr2H9gftQA _UlY5ki15Ee-8Nr2H9gftQA">
              <ownedEnd xmi:id="_Ulx7Ii15Ee-8Nr2H9gftQA" name="" type="_UjI20C15Ee-8Nr2H9gftQA" association="_Ulx7IS15Ee-8Nr2H9gftQA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_UlyiMC15Ee-8Nr2H9gftQA" name="" memberEnd="_UlyiMS15Ee-8Nr2H9gftQA _UlZgoi15Ee-8Nr2H9gftQA">
              <ownedEnd xmi:id="_UlyiMS15Ee-8Nr2H9gftQA" name="" type="_UjKsAC15Ee-8Nr2H9gftQA" association="_UlyiMC15Ee-8Nr2H9gftQA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_UlyiMy15Ee-8Nr2H9gftQA" name="" memberEnd="_UlyiNC15Ee-8Nr2H9gftQA _UlaHsC15Ee-8Nr2H9gftQA">
              <ownedEnd xmi:id="_UlyiNC15Ee-8Nr2H9gftQA" name="" type="_UjKsAC15Ee-8Nr2H9gftQA" association="_UlyiMy15Ee-8Nr2H9gftQA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_UlzJQS15Ee-8Nr2H9gftQA" name="" memberEnd="_UlzJQi15Ee-8Nr2H9gftQA _UlaHsy15Ee-8Nr2H9gftQA">
              <ownedEnd xmi:id="_UlzJQi15Ee-8Nr2H9gftQA" name="" type="_UjKsAC15Ee-8Nr2H9gftQA" association="_UlzJQS15Ee-8Nr2H9gftQA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_UlzJRC15Ee-8Nr2H9gftQA" name="" memberEnd="_UlzJRS15Ee-8Nr2H9gftQA _Ulcj8y15Ee-8Nr2H9gftQA">
              <ownedEnd xmi:id="_UlzJRS15Ee-8Nr2H9gftQA" name="" type="_UjO9cC15Ee-8Nr2H9gftQA" association="_UlzJRC15Ee-8Nr2H9gftQA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_UlzwUS15Ee-8Nr2H9gftQA" name="" memberEnd="_UlzwUi15Ee-8Nr2H9gftQA _UldLAC15Ee-8Nr2H9gftQA">
              <ownedEnd xmi:id="_UlzwUi15Ee-8Nr2H9gftQA" name="" type="_UjO9cC15Ee-8Nr2H9gftQA" association="_UlzwUS15Ee-8Nr2H9gftQA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_UlzwVC15Ee-8Nr2H9gftQA" name="" memberEnd="_UlzwVS15Ee-8Nr2H9gftQA _UldyEC15Ee-8Nr2H9gftQA">
              <ownedEnd xmi:id="_UlzwVS15Ee-8Nr2H9gftQA" name="" type="_UjO9cC15Ee-8Nr2H9gftQA" association="_UlzwVC15Ee-8Nr2H9gftQA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_Ul0XYS15Ee-8Nr2H9gftQA" name="" memberEnd="_Ul0XYi15Ee-8Nr2H9gftQA _UlfAMy15Ee-8Nr2H9gftQA">
              <ownedEnd xmi:id="_Ul0XYi15Ee-8Nr2H9gftQA" name="" type="_UjXgUC15Ee-8Nr2H9gftQA" association="_Ul0XYS15Ee-8Nr2H9gftQA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_Ul0XZC15Ee-8Nr2H9gftQA" name="" memberEnd="_Ul0XZS15Ee-8Nr2H9gftQA _UlfnQi15Ee-8Nr2H9gftQA">
              <ownedEnd xmi:id="_Ul0XZS15Ee-8Nr2H9gftQA" name="" type="_UjZVgC15Ee-8Nr2H9gftQA" association="_Ul0XZC15Ee-8Nr2H9gftQA"/>
            </packagedElement>
          </packagedElement>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_hoQ6AS15Ee-8Nr2H9gftQA" name="" visibility="public" memberEnd="_hoQ6AC15Ee-8Nr2H9gftQA _hoQ6Ai15Ee-8Nr2H9gftQA">
          <ownedEnd xmi:id="_hoQ6Ai15Ee-8Nr2H9gftQA" name="" visibility="public" type="_UjKsAC15Ee-8Nr2H9gftQA" association="_hoQ6AS15Ee-8Nr2H9gftQA"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_mTi9YC15Ee-8Nr2H9gftQA" name="" visibility="public" memberEnd="_mTiWUC15Ee-8Nr2H9gftQA _mTi9YS15Ee-8Nr2H9gftQA">
          <ownedEnd xmi:id="_mTi9YS15Ee-8Nr2H9gftQA" name="" visibility="public" type="_UjI20C15Ee-8Nr2H9gftQA" association="_mTi9YC15Ee-8Nr2H9gftQA"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_sGFjwS15Ee-8Nr2H9gftQA" name="" visibility="public" memberEnd="_sGFjwC15Ee-8Nr2H9gftQA _sGFjwi15Ee-8Nr2H9gftQA">
          <ownedEnd xmi:id="_sGFjwi15Ee-8Nr2H9gftQA" name="" visibility="public" type="_UjZVgC15Ee-8Nr2H9gftQA" association="_sGFjwS15Ee-8Nr2H9gftQA"/>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_UiIxQy15Ee-8Nr2H9gftQA" name="java">
      <packagedElement xmi:type="uml:Package" xmi:id="_UiIxRC15Ee-8Nr2H9gftQA" name="util">
        <packagedElement xmi:type="uml:Package" xmi:id="_UiZP8C15Ee-8Nr2H9gftQA" name="Map">
          <packagedElement xmi:type="uml:Interface" xmi:id="_Uk38My15Ee-8Nr2H9gftQA" name="Entry"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_Uks9EC15Ee-8Nr2H9gftQA" name="ArrayList"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_Uk1f8C15Ee-8Nr2H9gftQA" name="List"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_Uk3VIC15Ee-8Nr2H9gftQA" name="HashMap"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_Uk3VIi15Ee-8Nr2H9gftQA" name="Map"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_Uk38MS15Ee-8Nr2H9gftQA" name="Set"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_Uk_4AC15Ee-8Nr2H9gftQA" name="Random"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_UlAfEC15Ee-8Nr2H9gftQA" name="Scanner"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_UiNCsS15Ee-8Nr2H9gftQA" name="io">
        <packagedElement xmi:type="uml:Interface" xmi:id="_UksWAC15Ee-8Nr2H9gftQA" name="Serializable"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_UlBtMS15Ee-8Nr2H9gftQA" name="lang">
        <packagedElement xmi:type="uml:Class" xmi:id="_UlBtMi15Ee-8Nr2H9gftQA" name="StringBuffer"/>
        <packagedElement xmi:type="uml:DataType" xmi:id="_UlIa4C15Ee-8Nr2H9gftQA" name="Double"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_UlLeMS15Ee-8Nr2H9gftQA" name="Exception"/>
      </packagedElement>
    </packagedElement>
    <profileApplication xmi:id="_UTAJES15Ee-8Nr2H9gftQA">
      <eAnnotations xmi:id="_UTAJEi15Ee-8Nr2H9gftQA" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile"/>
    </profileApplication>
  </uml:Model>
  <UMLLabProfile:TargetLanguage xmi:id="_UTAJEy15Ee-8Nr2H9gftQA" base_Package="_UMHd8C15Ee-8Nr2H9gftQA">
    <languageName>java</languageName>
  </UMLLabProfile:TargetLanguage>
  <UMLLabProfile:LegacyStyledElement xmi:id="_UjKE8S15Ee-8Nr2H9gftQA" base_Element="_UjJd5i15Ee-8Nr2H9gftQA"/>
  <UMLLabProfile:Annotations xmi:id="_UjKE8i15Ee-8Nr2H9gftQA" base_Element="_UjJd5i15Ee-8Nr2H9gftQA">
    <annotations xmi:id="_UjKE8y15Ee-8Nr2H9gftQA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_UjL6IS15Ee-8Nr2H9gftQA" base_Element="_UjLTFC15Ee-8Nr2H9gftQA"/>
  <UMLLabProfile:Annotations xmi:id="_UjL6Ii15Ee-8Nr2H9gftQA" base_Element="_UjLTFC15Ee-8Nr2H9gftQA">
    <annotations xmi:id="_UjL6Iy15Ee-8Nr2H9gftQA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_UksWAS15Ee-8Nr2H9gftQA" base_Element="_UksWAC15Ee-8Nr2H9gftQA"/>
  <UMLLabProfile:Reference xmi:id="_Uks9ES15Ee-8Nr2H9gftQA" base_Element="_Uks9EC15Ee-8Nr2H9gftQA"/>
  <UMLLabProfile:Reference xmi:id="_Uk1f8S15Ee-8Nr2H9gftQA" base_Element="_Uk1f8C15Ee-8Nr2H9gftQA"/>
  <UMLLabProfile:Reference xmi:id="_Uk3VIS15Ee-8Nr2H9gftQA" base_Element="_Uk3VIC15Ee-8Nr2H9gftQA"/>
  <UMLLabProfile:Reference xmi:id="_Uk38MC15Ee-8Nr2H9gftQA" base_Element="_Uk3VIi15Ee-8Nr2H9gftQA"/>
  <UMLLabProfile:Reference xmi:id="_Uk38Mi15Ee-8Nr2H9gftQA" base_Element="_Uk38MS15Ee-8Nr2H9gftQA"/>
  <UMLLabProfile:Reference xmi:id="_Uk4jQC15Ee-8Nr2H9gftQA" base_Element="_Uk38My15Ee-8Nr2H9gftQA"/>
  <UMLLabProfile:Reference xmi:id="_Uk_4AS15Ee-8Nr2H9gftQA" base_Element="_Uk_4AC15Ee-8Nr2H9gftQA"/>
  <UMLLabProfile:Reference xmi:id="_UlAfES15Ee-8Nr2H9gftQA" base_Element="_UlAfEC15Ee-8Nr2H9gftQA"/>
  <UMLLabProfile:Reference xmi:id="_UlCUQC15Ee-8Nr2H9gftQA" base_Element="_UlBtMi15Ee-8Nr2H9gftQA"/>
  <UMLLabProfile:Generics xmi:id="_UlDiYC15Ee-8Nr2H9gftQA" genericsValue="Nodo" base_Element="_UlC7VC15Ee-8Nr2H9gftQA"/>
  <UMLLabProfile:Generics xmi:id="_UlDiZC15Ee-8Nr2H9gftQA" genericsValue="Nodo" base_Element="_UlDiYy15Ee-8Nr2H9gftQA"/>
  <UMLLabProfile:Generics xmi:id="_UlHMxC15Ee-8Nr2H9gftQA" genericsValue="Nodo" base_Element="_UlHMwi15Ee-8Nr2H9gftQA"/>
  <UMLLabProfile:Reference xmi:id="_UlIa4S15Ee-8Nr2H9gftQA" base_Element="_UlIa4C15Ee-8Nr2H9gftQA"/>
  <UMLLabProfile:Generics xmi:id="_UlJpAC15Ee-8Nr2H9gftQA" genericsValue="Nodo" base_Element="_UlJB9i15Ee-8Nr2H9gftQA"/>
  <UMLLabProfile:Reference xmi:id="_UlMFQC15Ee-8Nr2H9gftQA" base_Element="_UlLeMS15Ee-8Nr2H9gftQA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_UlOhgi15Ee-8Nr2H9gftQA" base_Element="_UlOhgC15Ee-8Nr2H9gftQA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_UlPIki15Ee-8Nr2H9gftQA" base_Element="_UlPIkC15Ee-8Nr2H9gftQA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_UlPvoy15Ee-8Nr2H9gftQA" base_Element="_UlPvoS15Ee-8Nr2H9gftQA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_UlPvpi15Ee-8Nr2H9gftQA" base_Element="_UlPvpC15Ee-8Nr2H9gftQA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_UlQWsi15Ee-8Nr2H9gftQA" base_Element="_UlQWsC15Ee-8Nr2H9gftQA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_UlQWtS15Ee-8Nr2H9gftQA" base_Element="_UlQWsy15Ee-8Nr2H9gftQA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_UlQ9wS15Ee-8Nr2H9gftQA" base_Element="_UlQWti15Ee-8Nr2H9gftQA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_UlQ9xC15Ee-8Nr2H9gftQA" base_Element="_UlQ9wi15Ee-8Nr2H9gftQA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_UlQ9xy15Ee-8Nr2H9gftQA" base_Element="_UlQ9xS15Ee-8Nr2H9gftQA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_UlRk0i15Ee-8Nr2H9gftQA" base_Element="_UlRk0C15Ee-8Nr2H9gftQA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_UlSL4C15Ee-8Nr2H9gftQA" base_Element="_UlRk0y15Ee-8Nr2H9gftQA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_UlSL4y15Ee-8Nr2H9gftQA" base_Element="_UlSL4S15Ee-8Nr2H9gftQA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_UlSL5S15Ee-8Nr2H9gftQA" base_Element="_UlSL5C15Ee-8Nr2H9gftQA"/>
  <UMLLabProfile:Array xmi:id="_UlSL6C15Ee-8Nr2H9gftQA" base_Element="_UlSL5i15Ee-8Nr2H9gftQA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_UlSy8C15Ee-8Nr2H9gftQA" base_Element="_UlSL5i15Ee-8Nr2H9gftQA"/>
  <UMLLabProfile:Generics xmi:id="_UlTaAC15Ee-8Nr2H9gftQA" genericsValue="Nodo" base_Element="_UlSy9C15Ee-8Nr2H9gftQA"/>
  <UMLLabProfile:Generics xmi:id="_UlUoIC15Ee-8Nr2H9gftQA" genericsValue="String" base_Element="_UlUBEy15Ee-8Nr2H9gftQA"/>
  <UMLLabProfile:Array xmi:id="_UlWdVC15Ee-8Nr2H9gftQA" base_Element="_UlWdUi15Ee-8Nr2H9gftQA"/>
  <UMLLabProfile:Generics xmi:id="_UlY5ky15Ee-8Nr2H9gftQA" genericsValue="Comprensorio" base_Element="_UlY5ki15Ee-8Nr2H9gftQA"/>
  <UMLLabProfile:Generics xmi:id="_UlZgoy15Ee-8Nr2H9gftQA" genericsValue="Albero" base_Element="_UlZgoi15Ee-8Nr2H9gftQA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_UlZgpC15Ee-8Nr2H9gftQA" base_Element="_UlZgoi15Ee-8Nr2H9gftQA"/>
  <UMLLabProfile:Generics xmi:id="_UlaHsS15Ee-8Nr2H9gftQA" genericsValue="Nodo" base_Element="_UlaHsC15Ee-8Nr2H9gftQA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_UlaHsi15Ee-8Nr2H9gftQA" base_Element="_UlaHsC15Ee-8Nr2H9gftQA"/>
  <UMLLabProfile:Generics xmi:id="_UlauwC15Ee-8Nr2H9gftQA" genericsValue="Nodo" base_Element="_UlaHsy15Ee-8Nr2H9gftQA"/>
  <UMLLabProfile:Array xmi:id="_UlbV0i15Ee-8Nr2H9gftQA" base_Element="_UlbV0C15Ee-8Nr2H9gftQA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_UlbV1C15Ee-8Nr2H9gftQA" base_Element="_UlbV0C15Ee-8Nr2H9gftQA"/>
  <UMLLabProfile:Array xmi:id="_UlbV1y15Ee-8Nr2H9gftQA" dimensions="1" base_Element="_UlbV1S15Ee-8Nr2H9gftQA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Ulb84S15Ee-8Nr2H9gftQA" base_Element="_UlbV1S15Ee-8Nr2H9gftQA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Ulcj8C15Ee-8Nr2H9gftQA" base_Element="_Ulb85S15Ee-8Nr2H9gftQA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Ulcj8i15Ee-8Nr2H9gftQA" base_Element="_Ulcj8S15Ee-8Nr2H9gftQA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Ulcj9i15Ee-8Nr2H9gftQA" base_Element="_Ulcj9S15Ee-8Nr2H9gftQA"/>
  <UMLLabProfile:Generics xmi:id="_UldLAS15Ee-8Nr2H9gftQA" genericsValue="String[]" base_Element="_UldLAC15Ee-8Nr2H9gftQA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_UldyES15Ee-8Nr2H9gftQA" base_Element="_UldyEC15Ee-8Nr2H9gftQA">
    <associatedElement xmi:type="uml:Operation" xmi:id="_UldyEy15Ee-8Nr2H9gftQA" name="getFattori" method="_UlmU_i15Ee-8Nr2H9gftQA">
      <ownedParameter xmi:id="_UleZIS15Ee-8Nr2H9gftQA" type="_Uk3VIi15Ee-8Nr2H9gftQA" direction="return"/>
    </associatedElement>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:Generics xmi:id="_UldyEi15Ee-8Nr2H9gftQA" genericsValue="Nodo, Double" base_Element="_UldyEC15Ee-8Nr2H9gftQA"/>
  <UMLLabProfile:Generics xmi:id="_UleZIC15Ee-8Nr2H9gftQA" genericsValue="Nodo, Double" base_Element="_UldyEy15Ee-8Nr2H9gftQA"/>
  <UMLLabProfile:Generics xmi:id="_UlfnQy15Ee-8Nr2H9gftQA" genericsValue="Utente" base_Element="_UlfnQi15Ee-8Nr2H9gftQA"/>
  <uml:OpaqueBehavior xmi:id="_UlmU_i15Ee-8Nr2H9gftQA" name="getFattori" specification="_UldyEy15Ee-8Nr2H9gftQA">
    <ownedParameter xmi:id="_UlmU_y15Ee-8Nr2H9gftQA" type="_Uk3VIi15Ee-8Nr2H9gftQA" direction="return"/>
    <language>java</language>
    <body>return fattori;
	</body>
  </uml:OpaqueBehavior>
  <UMLLabProfile:Reference xmi:id="_UlwF8C15Ee-8Nr2H9gftQA" base_Element="_Ulve4C15Ee-8Nr2H9gftQA"/>
  <UMLLabProfile:Reference xmi:id="_UlwF8y15Ee-8Nr2H9gftQA" base_Element="_UlwF8S15Ee-8Nr2H9gftQA"/>
  <UMLLabProfile:Reference xmi:id="_UlwtAC15Ee-8Nr2H9gftQA" base_Element="_UlwF9C15Ee-8Nr2H9gftQA"/>
  <UMLLabProfile:Reference xmi:id="_UlwtAy15Ee-8Nr2H9gftQA" base_Element="_UlwtAS15Ee-8Nr2H9gftQA"/>
  <UMLLabProfile:Reference xmi:id="_UlwtBi15Ee-8Nr2H9gftQA" base_Element="_UlwtBC15Ee-8Nr2H9gftQA"/>
  <UMLLabProfile:Reference xmi:id="_UlxUEi15Ee-8Nr2H9gftQA" base_Element="_UlxUEC15Ee-8Nr2H9gftQA"/>
  <UMLLabProfile:Reference xmi:id="_UlxUFS15Ee-8Nr2H9gftQA" base_Element="_UlxUEy15Ee-8Nr2H9gftQA"/>
  <UMLLabProfile:Reference xmi:id="_Ulx7IC15Ee-8Nr2H9gftQA" base_Element="_UlxUFi15Ee-8Nr2H9gftQA"/>
  <UMLLabProfile:Reference xmi:id="_Ulx7Iy15Ee-8Nr2H9gftQA" base_Element="_Ulx7IS15Ee-8Nr2H9gftQA"/>
  <UMLLabProfile:Reference xmi:id="_UlyiMi15Ee-8Nr2H9gftQA" base_Element="_UlyiMC15Ee-8Nr2H9gftQA"/>
  <UMLLabProfile:Reference xmi:id="_UlzJQC15Ee-8Nr2H9gftQA" base_Element="_UlyiMy15Ee-8Nr2H9gftQA"/>
  <UMLLabProfile:Reference xmi:id="_UlzJQy15Ee-8Nr2H9gftQA" base_Element="_UlzJQS15Ee-8Nr2H9gftQA"/>
  <UMLLabProfile:Reference xmi:id="_UlzwUC15Ee-8Nr2H9gftQA" base_Element="_UlzJRC15Ee-8Nr2H9gftQA"/>
  <UMLLabProfile:Reference xmi:id="_UlzwUy15Ee-8Nr2H9gftQA" base_Element="_UlzwUS15Ee-8Nr2H9gftQA"/>
  <UMLLabProfile:Reference xmi:id="_Ul0XYC15Ee-8Nr2H9gftQA" base_Element="_UlzwVC15Ee-8Nr2H9gftQA"/>
  <UMLLabProfile:Reference xmi:id="_Ul0XYy15Ee-8Nr2H9gftQA" base_Element="_Ul0XYS15Ee-8Nr2H9gftQA"/>
  <UMLLabProfile:Reference xmi:id="_Ul0-cC15Ee-8Nr2H9gftQA" base_Element="_Ul0XZC15Ee-8Nr2H9gftQA"/>
</xmi:XMI>
